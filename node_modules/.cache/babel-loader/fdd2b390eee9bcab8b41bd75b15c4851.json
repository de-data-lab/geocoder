{"ast":null,"code":"var _jsxFileName = \"/Users/tbeckett/Documents/TI - Project Info/JavaScript_end_to_end_client_file_upload_to_Azure_Storage_Blobs/src/App.tsx\";\n// ./src/App.tsx\n\nimport React, { useState } from 'react';\nimport Path from 'path';\nimport uploadFileToBlob, { isStorageConfigured } from './azure-storage-blob';\n\n// import React from \"react\";\nimport { PageLayout } from \"./components/PageLayout\";\n// Addition\nimport 'bootstrap/dist/css/bootstrap.css';\nimport { AuthenticatedTemplate, UnauthenticatedTemplate } from \"@azure/msal-react\";\n// End addition\n\n// Previous storage code\nconst storageConfigured = isStorageConfigured();\nconst App = () => {\n  // all blobs in container\n  const [blobList, setBlobList] = useState([]);\n\n  // current file to upload into container\n  const [fileSelected, setFileSelected] = useState(null);\n\n  // UI/form management\n  const [uploading, setUploading] = useState(false);\n  const [inputKey, setInputKey] = useState(Math.random().toString(36));\n  const onFileChange = event => {\n    // capture file into state\n    setFileSelected(event.target.files[0]);\n  };\n  const onFileUpload = async () => {\n    // prepare UI\n    setUploading(true);\n\n    // *** UPLOAD TO AZURE STORAGE ***\n    const blobsInContainer = await uploadFileToBlob(fileSelected);\n\n    // prepare UI for results\n    setBlobList(blobsInContainer);\n\n    // reset state/form\n    setFileSelected(null);\n    setUploading(false);\n    setInputKey(Math.random().toString(36));\n  };\n\n  // display form\n  const DisplayForm = () => /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"file\",\n    onChange: onFileChange,\n    key: inputKey || '',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    onClick: onFileUpload,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }\n  }, \"Upload!\"));\n\n  // display file name and image\n  const DisplayImagesFromContainer = () => /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }\n  }, \"Container items\"), /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }\n  }, blobList.map(item => {\n    return /*#__PURE__*/React.createElement(\"li\", {\n      key: item,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 15\n      }\n    }, Path.basename(item), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"img\", {\n      src: item,\n      alt: item,\n      height: \"200\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }\n    })));\n  })));\n\n  //End previous storage code\n\n  // function App() {\n  return /*#__PURE__*/React.createElement(PageLayout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(AuthenticatedTemplate, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 12\n    }\n  }, /*#__PURE__*/React.createElement(ProfileContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 19\n    }\n  }, \"Upload file to Azure Blob Storage\"), storageConfigured && !uploading && DisplayForm(), storageConfigured && uploading && /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 54\n    }\n  }, \"Uploading\"), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 19\n    }\n  }), storageConfigured && blobList.length > 0 && DisplayImagesFromContainer(), !storageConfigured && /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 42\n    }\n  }, \"Storage is not configured.\"))), /*#__PURE__*/React.createElement(UnauthenticatedTemplate, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 17\n    }\n  }, \"You are not signed in! Please take a moment to sign in above.\")));\n  // }\n};\n\nexport default App;\n\n//   // display form\n//   const DisplayForm = () => (\n//     <div>\n//       <input type=\"file\" onChange={onFileChange} key={inputKey || ''} />\n//       <button type=\"submit\" onClick={onFileUpload}>\n//         Upload!\n//           </button>\n//     </div>\n//   )\n\n//   // display file name and image\n//   const DisplayImagesFromContainer = () => (\n//     <div>\n//       <h2>Container items</h2>\n//       <ul>\n//         {blobList.map((item) => {\n//           return (\n//             <li key={item}>\n//               <div>\n//                 {Path.basename(item)}\n//                 <br />\n//                 <img src={item} alt={item} height=\"200\" />\n//               </div>\n//             </li>\n//           );\n//         })}\n//       </ul>\n//     </div>\n//   );\n\n//   return (\n//     <div>\n//       <h1>Upload file to Azure Blob Storage</h1>\n//       {storageConfigured && !uploading && DisplayForm()}\n//       {storageConfigured && uploading && <div>Uploading</div>}\n//       <hr />\n//       {storageConfigured && blobList.length > 0 && DisplayImagesFromContainer()}\n//       {!storageConfigured && <div>Storage is not configured.</div>}\n//     </div>\n//   );\n// };\n\n// export default App;","map":{"version":3,"names":["React","useState","Path","uploadFileToBlob","isStorageConfigured","PageLayout","AuthenticatedTemplate","UnauthenticatedTemplate","storageConfigured","App","blobList","setBlobList","fileSelected","setFileSelected","uploading","setUploading","inputKey","setInputKey","Math","random","toString","onFileChange","event","target","files","onFileUpload","blobsInContainer","DisplayForm","DisplayImagesFromContainer","map","item","basename","length"],"sources":["/Users/tbeckett/Documents/TI - Project Info/JavaScript_end_to_end_client_file_upload_to_Azure_Storage_Blobs/src/App.tsx"],"sourcesContent":["// ./src/App.tsx\r\n\r\nimport React, { useState } from 'react';\r\nimport Path from 'path';\r\nimport uploadFileToBlob, { isStorageConfigured } from './azure-storage-blob';\r\n\r\n// import React from \"react\";\r\nimport { PageLayout } from \"./components/PageLayout\";\r\n// Addition\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport { AuthenticatedTemplate, UnauthenticatedTemplate } from \"@azure/msal-react\";\r\nimport { loginRequest } from \"./authConfig\";\r\nimport Button from \"react-bootstrap/Button\";\r\n\r\n// End addition\r\n\r\n// Previous storage code\r\nconst storageConfigured = isStorageConfigured();\r\n\r\nconst App = (): JSX.Element => {\r\n  // all blobs in container\r\n  const [blobList, setBlobList] = useState<string[]>([]);\r\n\r\n  // current file to upload into container\r\n  const [fileSelected, setFileSelected] = useState(null);\r\n\r\n  // UI/form management\r\n  const [uploading, setUploading] = useState(false);\r\n  const [inputKey, setInputKey] = useState(Math.random().toString(36));\r\n\r\n  const onFileChange = (event: any) => {\r\n    // capture file into state\r\n    setFileSelected(event.target.files[0]);\r\n  };\r\n\r\n  const onFileUpload = async () => {\r\n    // prepare UI\r\n    setUploading(true);\r\n\r\n    // *** UPLOAD TO AZURE STORAGE ***\r\n    const blobsInContainer: string[] = await uploadFileToBlob(fileSelected);\r\n\r\n    // prepare UI for results\r\n    setBlobList(blobsInContainer);\r\n\r\n    // reset state/form\r\n    setFileSelected(null);\r\n    setUploading(false);\r\n    setInputKey(Math.random().toString(36));\r\n  };\r\n\r\n  // display form\r\n  const DisplayForm = () => (\r\n    <div>\r\n      <input type=\"file\" onChange={onFileChange} key={inputKey || ''} />\r\n      <button type=\"submit\" onClick={onFileUpload}>\r\n        Upload!\r\n          </button>\r\n    </div>\r\n  )\r\n\r\n  // display file name and image\r\n  const DisplayImagesFromContainer = () => (\r\n    <div>\r\n      <h2>Container items</h2>\r\n      <ul>\r\n        {blobList.map((item) => {\r\n          return (\r\n            <li key={item}>\r\n              <div>\r\n                {Path.basename(item)}\r\n                <br />\r\n                <img src={item} alt={item} height=\"200\" />\r\n              </div>\r\n            </li>\r\n          );\r\n        })}\r\n      </ul>\r\n    </div>\r\n  );\r\n\r\n//End previous storage code\r\n\r\n\r\n// function App() {\r\n  return (\r\n      <PageLayout>\r\n           <AuthenticatedTemplate>\r\n              <ProfileContent />\r\n                <div>\r\n                  <h1>Upload file to Azure Blob Storage</h1>\r\n                  {storageConfigured && !uploading && DisplayForm()}\r\n                  {storageConfigured && uploading && <div>Uploading</div>}\r\n                  <hr />\r\n                  {storageConfigured && blobList.length > 0 && DisplayImagesFromContainer()}\r\n                  {!storageConfigured && <div>Storage is not configured.</div>}\r\n                </div>\r\n              \r\n            </AuthenticatedTemplate>\r\n\r\n            <UnauthenticatedTemplate>\r\n                <p>You are not signed in! Please take a moment to sign in above.</p>\r\n            </UnauthenticatedTemplate>\r\n      </PageLayout>\r\n  );\r\n// }\r\n};\r\n\r\nexport default App;\r\n\r\n\r\n\r\n//   // display form\r\n//   const DisplayForm = () => (\r\n//     <div>\r\n//       <input type=\"file\" onChange={onFileChange} key={inputKey || ''} />\r\n//       <button type=\"submit\" onClick={onFileUpload}>\r\n//         Upload!\r\n//           </button>\r\n//     </div>\r\n//   )\r\n\r\n//   // display file name and image\r\n//   const DisplayImagesFromContainer = () => (\r\n//     <div>\r\n//       <h2>Container items</h2>\r\n//       <ul>\r\n//         {blobList.map((item) => {\r\n//           return (\r\n//             <li key={item}>\r\n//               <div>\r\n//                 {Path.basename(item)}\r\n//                 <br />\r\n//                 <img src={item} alt={item} height=\"200\" />\r\n//               </div>\r\n//             </li>\r\n//           );\r\n//         })}\r\n//       </ul>\r\n//     </div>\r\n//   );\r\n\r\n//   return (\r\n//     <div>\r\n//       <h1>Upload file to Azure Blob Storage</h1>\r\n//       {storageConfigured && !uploading && DisplayForm()}\r\n//       {storageConfigured && uploading && <div>Uploading</div>}\r\n//       <hr />\r\n//       {storageConfigured && blobList.length > 0 && DisplayImagesFromContainer()}\r\n//       {!storageConfigured && <div>Storage is not configured.</div>}\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default App;\r\n\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}