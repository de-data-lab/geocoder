{"ast":null,"code":"import _createClass from \"/Users/tbeckett/Documents/geo-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _classCallCheck from \"/Users/tbeckett/Documents/geo-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _inherits from \"/Users/tbeckett/Documents/geo-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/tbeckett/Documents/geo-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nimport { ApiKeyCredentials } from \"./apiKeyCredentials\";\n/**\n * A {@link TopicCredentials} object used for Azure Event Grid.\n */\nexport var TopicCredentials = /*#__PURE__*/function (_ApiKeyCredentials) {\n  _inherits(TopicCredentials, _ApiKeyCredentials);\n  var _super = _createSuper(TopicCredentials);\n  /**\n   * Creates a new EventGrid TopicCredentials object.\n   *\n   * @param topicKey - The EventGrid topic key\n   */\n  function TopicCredentials(topicKey) {\n    _classCallCheck(this, TopicCredentials);\n    if (!topicKey || topicKey && typeof topicKey !== \"string\") {\n      throw new Error(\"topicKey cannot be null or undefined and must be of type string.\");\n    }\n    var options = {\n      inHeader: {\n        \"aeg-sas-key\": topicKey\n      }\n    };\n    return _super.call(this, options);\n  }\n  return _createClass(TopicCredentials);\n}(ApiKeyCredentials);","map":{"version":3,"mappings":";;;;AAAA;AACA;AAEA,SAAkCA,iBAAiB,QAAQ,qBAAqB;AAEhF;;;AAGA,WAAaC,gBAAiB;EAAA;EAAA;EAC5B;;;;;EAKA,0BAAYC,QAAgB;IAAA;IAC1B,IAAI,CAACA,QAAQ,IAAKA,QAAQ,IAAI,OAAOA,QAAQ,KAAK,QAAS,EAAE;MAC3D,MAAM,IAAIC,KAAK,CAAC,kEAAkE,CAAC;;IAErF,IAAMC,OAAO,GAA4B;MACvCC,QAAQ,EAAE;QACR,aAAa,EAAEH;;KAElB;IAAC,yBACIE,OAAO;EACf;EAAC;AAAA,EAhBmCJ,iBAAiB","names":["ApiKeyCredentials","TopicCredentials","topicKey","Error","options","inHeader"],"sourceRoot":"","sources":["../../../src/credentials/topicCredentials.ts"],"sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { ApiKeyCredentialOptions, ApiKeyCredentials } from \"./apiKeyCredentials\";\n\n/**\n * A {@link TopicCredentials} object used for Azure Event Grid.\n */\nexport class TopicCredentials extends ApiKeyCredentials {\n  /**\n   * Creates a new EventGrid TopicCredentials object.\n   *\n   * @param topicKey - The EventGrid topic key\n   */\n  constructor(topicKey: string) {\n    if (!topicKey || (topicKey && typeof topicKey !== \"string\")) {\n      throw new Error(\"topicKey cannot be null or undefined and must be of type string.\");\n    }\n    const options: ApiKeyCredentialOptions = {\n      inHeader: {\n        \"aeg-sas-key\": topicKey,\n      },\n    };\n    super(options);\n  }\n}\n"]},"metadata":{},"sourceType":"module"}