{"ast":null,"code":"import _createForOfIteratorHelper from \"/Users/tbeckett/Documents/TI - Project Info/JavaScript_end_to_end_client_file_upload_to_Azure_Storage_Blobs/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper\";\nimport _classCallCheck from \"/Users/tbeckett/Documents/TI - Project Info/JavaScript_end_to_end_client_file_upload_to_Azure_Storage_Blobs/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/tbeckett/Documents/TI - Project Info/JavaScript_end_to_end_client_file_upload_to_Azure_Storage_Blobs/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n/**\n * ONLY AVAILABLE IN NODE.JS RUNTIME.\n *\n * This is a helper class to construct a string representing the permissions granted by an AccountSAS. Setting a value\n * to true means that any SAS which uses these permissions will grant permissions for that operation. Once all the\n * values are set, this should be serialized with toString and set as the permissions field on an\n * {@link AccountSASSignatureValues} object. It is possible to construct the permissions string without this class, but\n * the order of the permissions is particular and this class guarantees correctness.\n */\nexport var AccountSASPermissions = /*#__PURE__*/function () {\n  function AccountSASPermissions() {\n    _classCallCheck(this, AccountSASPermissions);\n    /**\n     * Permission to read resources and list queues and tables granted.\n     */\n    this.read = false;\n    /**\n     * Permission to write resources granted.\n     */\n    this.write = false;\n    /**\n     * Permission to create blobs and files granted.\n     */\n    this.delete = false;\n    /**\n     * Permission to delete versions granted.\n     */\n    this.deleteVersion = false;\n    /**\n     * Permission to list blob containers, blobs, shares, directories, and files granted.\n     */\n    this.list = false;\n    /**\n     * Permission to add messages, table entities, and append to blobs granted.\n     */\n    this.add = false;\n    /**\n     * Permission to create blobs and files granted.\n     */\n    this.create = false;\n    /**\n     * Permissions to update messages and table entities granted.\n     */\n    this.update = false;\n    /**\n     * Permission to get and delete messages granted.\n     */\n    this.process = false;\n    /**\n     * Specfies Tag access granted.\n     */\n    this.tag = false;\n    /**\n     * Permission to filter blobs.\n     */\n    this.filter = false;\n    /**\n     * Permission to set immutability policy.\n     */\n    this.setImmutabilityPolicy = false;\n    /**\n     * Specifies that Permanent Delete is permitted.\n     */\n    this.permanentDelete = false;\n  }\n  /**\n   * Parse initializes the AccountSASPermissions fields from a string.\n   *\n   * @param permissions -\n   */\n  _createClass(AccountSASPermissions, [{\n    key: \"toString\",\n    value:\n    /**\n     * Produces the SAS permissions string for an Azure Storage account.\n     * Call this method to set AccountSASSignatureValues Permissions field.\n     *\n     * Using this method will guarantee the resource types are in\n     * an order accepted by the service.\n     *\n     * @see https://docs.microsoft.com/en-us/rest/api/storageservices/constructing-an-account-sas\n     *\n     */\n    function toString() {\n      // The order of the characters should be as specified here to ensure correctness:\n      // https://docs.microsoft.com/en-us/rest/api/storageservices/constructing-an-account-sas\n      // Use a string array instead of string concatenating += operator for performance\n      var permissions = [];\n      if (this.read) {\n        permissions.push(\"r\");\n      }\n      if (this.write) {\n        permissions.push(\"w\");\n      }\n      if (this.delete) {\n        permissions.push(\"d\");\n      }\n      if (this.deleteVersion) {\n        permissions.push(\"x\");\n      }\n      if (this.filter) {\n        permissions.push(\"f\");\n      }\n      if (this.tag) {\n        permissions.push(\"t\");\n      }\n      if (this.list) {\n        permissions.push(\"l\");\n      }\n      if (this.add) {\n        permissions.push(\"a\");\n      }\n      if (this.create) {\n        permissions.push(\"c\");\n      }\n      if (this.update) {\n        permissions.push(\"u\");\n      }\n      if (this.process) {\n        permissions.push(\"p\");\n      }\n      if (this.setImmutabilityPolicy) {\n        permissions.push(\"i\");\n      }\n      if (this.permanentDelete) {\n        permissions.push(\"y\");\n      }\n      return permissions.join(\"\");\n    }\n  }], [{\n    key: \"parse\",\n    value: function parse(permissions) {\n      var accountSASPermissions = new AccountSASPermissions();\n      var _iterator = _createForOfIteratorHelper(permissions),\n        _step;\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var c = _step.value;\n          switch (c) {\n            case \"r\":\n              accountSASPermissions.read = true;\n              break;\n            case \"w\":\n              accountSASPermissions.write = true;\n              break;\n            case \"d\":\n              accountSASPermissions.delete = true;\n              break;\n            case \"x\":\n              accountSASPermissions.deleteVersion = true;\n              break;\n            case \"l\":\n              accountSASPermissions.list = true;\n              break;\n            case \"a\":\n              accountSASPermissions.add = true;\n              break;\n            case \"c\":\n              accountSASPermissions.create = true;\n              break;\n            case \"u\":\n              accountSASPermissions.update = true;\n              break;\n            case \"p\":\n              accountSASPermissions.process = true;\n              break;\n            case \"t\":\n              accountSASPermissions.tag = true;\n              break;\n            case \"f\":\n              accountSASPermissions.filter = true;\n              break;\n            case \"i\":\n              accountSASPermissions.setImmutabilityPolicy = true;\n              break;\n            case \"y\":\n              accountSASPermissions.permanentDelete = true;\n              break;\n            default:\n              throw new RangeError(\"Invalid permission character: \".concat(c));\n          }\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n      return accountSASPermissions;\n    }\n    /**\n     * Creates a {@link AccountSASPermissions} from a raw object which contains same keys as it\n     * and boolean values for them.\n     *\n     * @param permissionLike -\n     */\n  }, {\n    key: \"from\",\n    value: function from(permissionLike) {\n      var accountSASPermissions = new AccountSASPermissions();\n      if (permissionLike.read) {\n        accountSASPermissions.read = true;\n      }\n      if (permissionLike.write) {\n        accountSASPermissions.write = true;\n      }\n      if (permissionLike.delete) {\n        accountSASPermissions.delete = true;\n      }\n      if (permissionLike.deleteVersion) {\n        accountSASPermissions.deleteVersion = true;\n      }\n      if (permissionLike.filter) {\n        accountSASPermissions.filter = true;\n      }\n      if (permissionLike.tag) {\n        accountSASPermissions.tag = true;\n      }\n      if (permissionLike.list) {\n        accountSASPermissions.list = true;\n      }\n      if (permissionLike.add) {\n        accountSASPermissions.add = true;\n      }\n      if (permissionLike.create) {\n        accountSASPermissions.create = true;\n      }\n      if (permissionLike.update) {\n        accountSASPermissions.update = true;\n      }\n      if (permissionLike.process) {\n        accountSASPermissions.process = true;\n      }\n      if (permissionLike.setImmutabilityPolicy) {\n        accountSASPermissions.setImmutabilityPolicy = true;\n      }\n      if (permissionLike.permanentDelete) {\n        accountSASPermissions.permanentDelete = true;\n      }\n      return accountSASPermissions;\n    }\n  }]);\n  return AccountSASPermissions;\n}();","map":{"version":3,"mappings":"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","names":["AccountSASPermissions","permissions","read","push","write","delete","deleteVersion","filter","tag","list","add","create","update","process","setImmutabilityPolicy","permanentDelete","join","accountSASPermissions","c","RangeError","permissionLike"],"sourceRoot":"","sources":["../../../../src/sas/AccountSASPermissions.ts"],"sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\n/**\n * ONLY AVAILABLE IN NODE.JS RUNTIME.\n *\n * This is a helper class to construct a string representing the permissions granted by an AccountSAS. Setting a value\n * to true means that any SAS which uses these permissions will grant permissions for that operation. Once all the\n * values are set, this should be serialized with toString and set as the permissions field on an\n * {@link AccountSASSignatureValues} object. It is possible to construct the permissions string without this class, but\n * the order of the permissions is particular and this class guarantees correctness.\n */\nexport class AccountSASPermissions {\n  /**\n   * Parse initializes the AccountSASPermissions fields from a string.\n   *\n   * @param permissions -\n   */\n  public static parse(permissions: string): AccountSASPermissions {\n    const accountSASPermissions = new AccountSASPermissions();\n\n    for (const c of permissions) {\n      switch (c) {\n        case \"r\":\n          accountSASPermissions.read = true;\n          break;\n        case \"w\":\n          accountSASPermissions.write = true;\n          break;\n        case \"d\":\n          accountSASPermissions.delete = true;\n          break;\n        case \"x\":\n          accountSASPermissions.deleteVersion = true;\n          break;\n        case \"l\":\n          accountSASPermissions.list = true;\n          break;\n        case \"a\":\n          accountSASPermissions.add = true;\n          break;\n        case \"c\":\n          accountSASPermissions.create = true;\n          break;\n        case \"u\":\n          accountSASPermissions.update = true;\n          break;\n        case \"p\":\n          accountSASPermissions.process = true;\n          break;\n        case \"t\":\n          accountSASPermissions.tag = true;\n          break;\n        case \"f\":\n          accountSASPermissions.filter = true;\n          break;\n        case \"i\":\n          accountSASPermissions.setImmutabilityPolicy = true;\n          break;\n        case \"y\":\n          accountSASPermissions.permanentDelete = true;\n          break;\n        default:\n          throw new RangeError(`Invalid permission character: ${c}`);\n      }\n    }\n\n    return accountSASPermissions;\n  }\n\n  /**\n   * Creates a {@link AccountSASPermissions} from a raw object which contains same keys as it\n   * and boolean values for them.\n   *\n   * @param permissionLike -\n   */\n  public static from(permissionLike: AccountSASPermissionsLike): AccountSASPermissions {\n    const accountSASPermissions = new AccountSASPermissions();\n    if (permissionLike.read) {\n      accountSASPermissions.read = true;\n    }\n    if (permissionLike.write) {\n      accountSASPermissions.write = true;\n    }\n    if (permissionLike.delete) {\n      accountSASPermissions.delete = true;\n    }\n    if (permissionLike.deleteVersion) {\n      accountSASPermissions.deleteVersion = true;\n    }\n    if (permissionLike.filter) {\n      accountSASPermissions.filter = true;\n    }\n    if (permissionLike.tag) {\n      accountSASPermissions.tag = true;\n    }\n    if (permissionLike.list) {\n      accountSASPermissions.list = true;\n    }\n    if (permissionLike.add) {\n      accountSASPermissions.add = true;\n    }\n    if (permissionLike.create) {\n      accountSASPermissions.create = true;\n    }\n    if (permissionLike.update) {\n      accountSASPermissions.update = true;\n    }\n    if (permissionLike.process) {\n      accountSASPermissions.process = true;\n    }\n    if (permissionLike.setImmutabilityPolicy) {\n      accountSASPermissions.setImmutabilityPolicy = true;\n    }\n    if (permissionLike.permanentDelete) {\n      accountSASPermissions.permanentDelete = true;\n    }\n    return accountSASPermissions;\n  }\n\n  /**\n   * Permission to read resources and list queues and tables granted.\n   */\n  public read: boolean = false;\n\n  /**\n   * Permission to write resources granted.\n   */\n  public write: boolean = false;\n\n  /**\n   * Permission to create blobs and files granted.\n   */\n  public delete: boolean = false;\n\n  /**\n   * Permission to delete versions granted.\n   */\n  public deleteVersion: boolean = false;\n\n  /**\n   * Permission to list blob containers, blobs, shares, directories, and files granted.\n   */\n  public list: boolean = false;\n\n  /**\n   * Permission to add messages, table entities, and append to blobs granted.\n   */\n  public add: boolean = false;\n\n  /**\n   * Permission to create blobs and files granted.\n   */\n  public create: boolean = false;\n\n  /**\n   * Permissions to update messages and table entities granted.\n   */\n  public update: boolean = false;\n\n  /**\n   * Permission to get and delete messages granted.\n   */\n  public process: boolean = false;\n\n  /**\n   * Specfies Tag access granted.\n   */\n  public tag: boolean = false;\n\n  /**\n   * Permission to filter blobs.\n   */\n  public filter: boolean = false;\n\n  /**\n   * Permission to set immutability policy.\n   */\n  public setImmutabilityPolicy: boolean = false;\n\n  /**\n   * Specifies that Permanent Delete is permitted.\n   */\n  public permanentDelete: boolean = false;\n\n  /**\n   * Produces the SAS permissions string for an Azure Storage account.\n   * Call this method to set AccountSASSignatureValues Permissions field.\n   *\n   * Using this method will guarantee the resource types are in\n   * an order accepted by the service.\n   *\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/constructing-an-account-sas\n   *\n   */\n  public toString(): string {\n    // The order of the characters should be as specified here to ensure correctness:\n    // https://docs.microsoft.com/en-us/rest/api/storageservices/constructing-an-account-sas\n    // Use a string array instead of string concatenating += operator for performance\n    const permissions: string[] = [];\n    if (this.read) {\n      permissions.push(\"r\");\n    }\n    if (this.write) {\n      permissions.push(\"w\");\n    }\n    if (this.delete) {\n      permissions.push(\"d\");\n    }\n    if (this.deleteVersion) {\n      permissions.push(\"x\");\n    }\n    if (this.filter) {\n      permissions.push(\"f\");\n    }\n    if (this.tag) {\n      permissions.push(\"t\");\n    }\n    if (this.list) {\n      permissions.push(\"l\");\n    }\n    if (this.add) {\n      permissions.push(\"a\");\n    }\n    if (this.create) {\n      permissions.push(\"c\");\n    }\n    if (this.update) {\n      permissions.push(\"u\");\n    }\n    if (this.process) {\n      permissions.push(\"p\");\n    }\n    if (this.setImmutabilityPolicy) {\n      permissions.push(\"i\");\n    }\n    if (this.permanentDelete) {\n      permissions.push(\"y\");\n    }\n    return permissions.join(\"\");\n  }\n}\n\n/**\n * A type that looks like an account SAS permission.\n * Used in {@link AccountSASPermissions} to parse SAS permissions from raw objects.\n */\nexport interface AccountSASPermissionsLike {\n  /**\n   * Permission to read resources and list queues and tables granted.\n   */\n  read?: boolean;\n\n  /**\n   * Permission to write resources granted.\n   */\n  write?: boolean;\n\n  /**\n   * Permission to delete blobs and files granted.\n   */\n  delete?: boolean;\n\n  /**\n   * Permission to delete versions granted.\n   */\n  deleteVersion?: boolean;\n\n  /**\n   * Permission to list blob containers, blobs, shares, directories, and files granted.\n   */\n  list?: boolean;\n\n  /**\n   * Permission to add messages, table entities, and append to blobs granted.\n   */\n  add?: boolean;\n\n  /**\n   * Permission to create blobs and files granted.\n   */\n  create?: boolean;\n\n  /**\n   * Permissions to update messages and table entities granted.\n   */\n  update?: boolean;\n\n  /**\n   * Permission to get and delete messages granted.\n   */\n  process?: boolean;\n\n  /**\n   * Specfies Tag access granted.\n   */\n  tag?: boolean;\n\n  /**\n   * Permission to filter blobs.\n   */\n  filter?: boolean;\n\n  /**\n   * Permission to set immutability policy.\n   */\n  setImmutabilityPolicy?: boolean;\n\n  /**\n   * Specifies that Permanent Delete is permitted.\n   */\n  permanentDelete?: boolean;\n}\n"]},"metadata":{},"sourceType":"module"}