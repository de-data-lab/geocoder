{"ast":null,"code":"import _classCallCheck from \"/Users/tbeckett/Documents/TI - Project Info/JavaScript_end_to_end_client_file_upload_to_Azure_Storage_Blobs/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/tbeckett/Documents/TI - Project Info/JavaScript_end_to_end_client_file_upload_to_Azure_Storage_Blobs/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/Users/tbeckett/Documents/TI - Project Info/JavaScript_end_to_end_client_file_upload_to_Azure_Storage_Blobs/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/tbeckett/Documents/TI - Project Info/JavaScript_end_to_end_client_file_upload_to_Azure_Storage_Blobs/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nimport { BaseRequestPolicy } from \"./requestPolicy\";\n/**\n * Creates a policy that assigns a unique request id to outgoing requests.\n * @param requestIdHeaderName - The name of the header to use when assigning the unique id to the request.\n */\nexport function generateClientRequestIdPolicy() {\n  var requestIdHeaderName = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"x-ms-client-request-id\";\n  return {\n    create: function create(nextPolicy, options) {\n      return new GenerateClientRequestIdPolicy(nextPolicy, options, requestIdHeaderName);\n    }\n  };\n}\nexport var GenerateClientRequestIdPolicy = /*#__PURE__*/function (_BaseRequestPolicy) {\n  _inherits(GenerateClientRequestIdPolicy, _BaseRequestPolicy);\n  var _super = _createSuper(GenerateClientRequestIdPolicy);\n  function GenerateClientRequestIdPolicy(nextPolicy, options, _requestIdHeaderName) {\n    var _this;\n    _classCallCheck(this, GenerateClientRequestIdPolicy);\n    _this = _super.call(this, nextPolicy, options);\n    _this._requestIdHeaderName = _requestIdHeaderName;\n    return _this;\n  }\n  _createClass(GenerateClientRequestIdPolicy, [{\n    key: \"sendRequest\",\n    value: function sendRequest(request) {\n      if (!request.headers.contains(this._requestIdHeaderName)) {\n        request.headers.set(this._requestIdHeaderName, request.requestId);\n      }\n      return this._nextPolicy.sendRequest(request);\n    }\n  }]);\n  return GenerateClientRequestIdPolicy;\n}(BaseRequestPolicy);","map":{"version":3,"mappings":";;;;AAAA;AACA;AAEA,SACEA,iBAAiB,QAIZ,iBAAiB;AAIxB;;;;AAIA,OAAM,SAAUC,6BAA6B,GACG;EAAA,IAA9CC,mBAAmB,uEAAG,wBAAwB;EAE9C,OAAO;IACLC,MAAM,EAAE,gBAACC,UAAyB,EAAEC,OAA6B,EAAI;MACnE,OAAO,IAAIC,6BAA6B,CAACF,UAAU,EAAEC,OAAO,EAAEH,mBAAmB,CAAC;IACpF;GACD;AACH;AAEA,WAAaI,6BAA8B;EAAA;EAAA;EACzC,uCACEF,UAAyB,EACzBC,OAA6B,EACrBE,oBAA4B;IAAA;IAAA;IAEpC,0BAAMH,UAAU,EAAEC,OAAO;IAFjB,0BAAoB,GAApBE,oBAAoB;IAAQ;EAGtC;EAAC;IAAA;IAAA,OAEM,qBAAYC,OAAwB;MACzC,IAAI,CAACA,OAAO,CAACC,OAAO,CAACC,QAAQ,CAAC,IAAI,CAACH,oBAAoB,CAAC,EAAE;QACxDC,OAAO,CAACC,OAAO,CAACE,GAAG,CAAC,IAAI,CAACJ,oBAAoB,EAAEC,OAAO,CAACI,SAAS,CAAC;;MAEnE,OAAO,IAAI,CAACC,WAAW,CAACC,WAAW,CAACN,OAAO,CAAC;IAC9C;EAAC;EAAA;AAAA,EAdgDR,iBAAiB","names":["BaseRequestPolicy","generateClientRequestIdPolicy","requestIdHeaderName","create","nextPolicy","options","GenerateClientRequestIdPolicy","_requestIdHeaderName","request","headers","contains","set","requestId","_nextPolicy","sendRequest"],"sourceRoot":"","sources":["../../../src/policies/generateClientRequestIdPolicy.ts"],"sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport {\n  BaseRequestPolicy,\n  RequestPolicy,\n  RequestPolicyFactory,\n  RequestPolicyOptions,\n} from \"./requestPolicy\";\nimport { HttpOperationResponse } from \"../httpOperationResponse\";\nimport { WebResourceLike } from \"../webResource\";\n\n/**\n * Creates a policy that assigns a unique request id to outgoing requests.\n * @param requestIdHeaderName - The name of the header to use when assigning the unique id to the request.\n */\nexport function generateClientRequestIdPolicy(\n  requestIdHeaderName = \"x-ms-client-request-id\"\n): RequestPolicyFactory {\n  return {\n    create: (nextPolicy: RequestPolicy, options: RequestPolicyOptions) => {\n      return new GenerateClientRequestIdPolicy(nextPolicy, options, requestIdHeaderName);\n    },\n  };\n}\n\nexport class GenerateClientRequestIdPolicy extends BaseRequestPolicy {\n  constructor(\n    nextPolicy: RequestPolicy,\n    options: RequestPolicyOptions,\n    private _requestIdHeaderName: string\n  ) {\n    super(nextPolicy, options);\n  }\n\n  public sendRequest(request: WebResourceLike): Promise<HttpOperationResponse> {\n    if (!request.headers.contains(this._requestIdHeaderName)) {\n      request.headers.set(this._requestIdHeaderName, request.requestId);\n    }\n    return this._nextPolicy.sendRequest(request);\n  }\n}\n"]},"metadata":{},"sourceType":"module"}