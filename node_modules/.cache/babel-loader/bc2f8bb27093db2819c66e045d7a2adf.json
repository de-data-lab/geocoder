{"ast":null,"code":"/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\nimport { CryptoUtils } from \"./utils/CryptoUtils\";\nimport { ClientAuthError } from \"./error/ClientAuthError\";\nimport { StringUtils } from \"./utils/StringUtils\";\n/**\n * @hidden\n */\nvar ClientInfo = /** @class */function () {\n  function ClientInfo(rawClientInfo, authority) {\n    if (!rawClientInfo || StringUtils.isEmpty(rawClientInfo)) {\n      this.uid = \"\";\n      this.utid = \"\";\n      return;\n    }\n    try {\n      var decodedClientInfo = CryptoUtils.base64Decode(rawClientInfo);\n      var clientInfo = JSON.parse(decodedClientInfo);\n      if (clientInfo) {\n        if (clientInfo.hasOwnProperty(\"uid\")) {\n          this.uid = authority ? ClientInfo.stripPolicyFromUid(clientInfo.uid, authority) : clientInfo.uid;\n        }\n        if (clientInfo.hasOwnProperty(\"utid\")) {\n          this.utid = clientInfo.utid;\n        }\n      }\n    } catch (e) {\n      throw ClientAuthError.createClientInfoDecodingError(e);\n    }\n  }\n  Object.defineProperty(ClientInfo.prototype, \"uid\", {\n    get: function () {\n      return this._uid ? this._uid : \"\";\n    },\n    set: function (uid) {\n      this._uid = uid;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(ClientInfo.prototype, \"utid\", {\n    get: function () {\n      return this._utid ? this._utid : \"\";\n    },\n    set: function (utid) {\n      this._utid = utid;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  ClientInfo.createClientInfoFromIdToken = function (idToken, authority) {\n    var clientInfo = {\n      uid: idToken.subject,\n      utid: \"\"\n    };\n    return new ClientInfo(CryptoUtils.base64Encode(JSON.stringify(clientInfo)), authority);\n  };\n  ClientInfo.stripPolicyFromUid = function (uid, authority) {\n    var uidSegments = uid.split(\"-\");\n    // Reverse the url segments so the last one is more easily accessible\n    var urlSegments = authority.split(\"/\").reverse();\n    var policy = \"\";\n    if (!StringUtils.isEmpty(urlSegments[0])) {\n      policy = urlSegments[0];\n    } else if (urlSegments.length > 1) {\n      // If the original url had a trailing slash, urlSegments[0] would be \"\" so take the next element\n      policy = urlSegments[1];\n    }\n    if (uidSegments[uidSegments.length - 1] === policy) {\n      // If the last segment of uid matches the last segment of authority url, remove the last segment of uid\n      return uidSegments.slice(0, uidSegments.length - 1).join(\"-\");\n    }\n    return uid;\n  };\n  ClientInfo.prototype.encodeClientInfo = function () {\n    var clientInfo = JSON.stringify({\n      uid: this.uid,\n      utid: this.utid\n    });\n    return CryptoUtils.base64Encode(clientInfo);\n  };\n  return ClientInfo;\n}();\nexport { ClientInfo };","map":{"version":3,"mappings":"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","names":["CryptoUtils","ClientAuthError","StringUtils","rawClientInfo","authority","isEmpty","uid","utid","decodedClientInfo","base64Decode","clientInfo","JSON","parse","hasOwnProperty","ClientInfo","stripPolicyFromUid","e","createClientInfoDecodingError","Object","_uid","_utid","idToken","subject","base64Encode","stringify","uidSegments","split","urlSegments","reverse","policy","length","slice","join"],"sourceRoot":"","sources":["../src/ClientInfo.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}