{"ast":null,"code":"import _createForOfIteratorHelper from \"/Users/tbeckett/Documents/Azure dev/Azure Test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper\";\nimport _classCallCheck from \"/Users/tbeckett/Documents/Azure dev/Azure Test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/tbeckett/Documents/Azure dev/Azure Test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n/**\n * This is a helper class to construct a string representing the permissions granted by a ServiceSAS to a container.\n * Setting a value to true means that any SAS which uses these permissions will grant permissions for that operation.\n * Once all the values are set, this should be serialized with toString and set as the permissions field on a\n * {@link BlobSASSignatureValues} object. It is possible to construct the permissions string without this class, but\n * the order of the permissions is particular and this class guarantees correctness.\n */\nexport var ContainerSASPermissions = /*#__PURE__*/function () {\n  function ContainerSASPermissions() {\n    _classCallCheck(this, ContainerSASPermissions);\n    /**\n     * Specifies Read access granted.\n     */\n    this.read = false;\n    /**\n     * Specifies Add access granted.\n     */\n    this.add = false;\n    /**\n     * Specifies Create access granted.\n     */\n    this.create = false;\n    /**\n     * Specifies Write access granted.\n     */\n    this.write = false;\n    /**\n     * Specifies Delete access granted.\n     */\n    this.delete = false;\n    /**\n     * Specifies Delete version access granted.\n     */\n    this.deleteVersion = false;\n    /**\n     * Specifies List access granted.\n     */\n    this.list = false;\n    /**\n     * Specfies Tag access granted.\n     */\n    this.tag = false;\n    /**\n     * Specifies Move access granted.\n     */\n    this.move = false;\n    /**\n     * Specifies Execute access granted.\n     */\n    this.execute = false;\n    /**\n     * Specifies SetImmutabilityPolicy access granted.\n     */\n    this.setImmutabilityPolicy = false;\n    /**\n     * Specifies that Permanent Delete is permitted.\n     */\n    this.permanentDelete = false;\n    /**\n     * Specifies that Filter Blobs by Tags is permitted.\n     */\n    this.filterByTags = false;\n  }\n  /**\n   * Creates an {@link ContainerSASPermissions} from the specified permissions string. This method will throw an\n   * Error if it encounters a character that does not correspond to a valid permission.\n   *\n   * @param permissions -\n   */\n  _createClass(ContainerSASPermissions, [{\n    key: \"toString\",\n    value:\n    /**\n     * Converts the given permissions to a string. Using this method will guarantee the permissions are in an\n     * order accepted by the service.\n     *\n     * The order of the characters should be as specified here to ensure correctness.\n     * @see https://docs.microsoft.com/en-us/rest/api/storageservices/constructing-a-service-sas\n     *\n     */\n    function toString() {\n      var permissions = [];\n      if (this.read) {\n        permissions.push(\"r\");\n      }\n      if (this.add) {\n        permissions.push(\"a\");\n      }\n      if (this.create) {\n        permissions.push(\"c\");\n      }\n      if (this.write) {\n        permissions.push(\"w\");\n      }\n      if (this.delete) {\n        permissions.push(\"d\");\n      }\n      if (this.deleteVersion) {\n        permissions.push(\"x\");\n      }\n      if (this.list) {\n        permissions.push(\"l\");\n      }\n      if (this.tag) {\n        permissions.push(\"t\");\n      }\n      if (this.move) {\n        permissions.push(\"m\");\n      }\n      if (this.execute) {\n        permissions.push(\"e\");\n      }\n      if (this.setImmutabilityPolicy) {\n        permissions.push(\"i\");\n      }\n      if (this.permanentDelete) {\n        permissions.push(\"y\");\n      }\n      if (this.filterByTags) {\n        permissions.push(\"f\");\n      }\n      return permissions.join(\"\");\n    }\n  }], [{\n    key: \"parse\",\n    value: function parse(permissions) {\n      var containerSASPermissions = new ContainerSASPermissions();\n      var _iterator = _createForOfIteratorHelper(permissions),\n        _step;\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var char = _step.value;\n          switch (char) {\n            case \"r\":\n              containerSASPermissions.read = true;\n              break;\n            case \"a\":\n              containerSASPermissions.add = true;\n              break;\n            case \"c\":\n              containerSASPermissions.create = true;\n              break;\n            case \"w\":\n              containerSASPermissions.write = true;\n              break;\n            case \"d\":\n              containerSASPermissions.delete = true;\n              break;\n            case \"l\":\n              containerSASPermissions.list = true;\n              break;\n            case \"t\":\n              containerSASPermissions.tag = true;\n              break;\n            case \"x\":\n              containerSASPermissions.deleteVersion = true;\n              break;\n            case \"m\":\n              containerSASPermissions.move = true;\n              break;\n            case \"e\":\n              containerSASPermissions.execute = true;\n              break;\n            case \"i\":\n              containerSASPermissions.setImmutabilityPolicy = true;\n              break;\n            case \"y\":\n              containerSASPermissions.permanentDelete = true;\n              break;\n            case \"f\":\n              containerSASPermissions.filterByTags = true;\n              break;\n            default:\n              throw new RangeError(\"Invalid permission \".concat(char));\n          }\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n      return containerSASPermissions;\n    }\n    /**\n     * Creates a {@link ContainerSASPermissions} from a raw object which contains same keys as it\n     * and boolean values for them.\n     *\n     * @param permissionLike -\n     */\n  }, {\n    key: \"from\",\n    value: function from(permissionLike) {\n      var containerSASPermissions = new ContainerSASPermissions();\n      if (permissionLike.read) {\n        containerSASPermissions.read = true;\n      }\n      if (permissionLike.add) {\n        containerSASPermissions.add = true;\n      }\n      if (permissionLike.create) {\n        containerSASPermissions.create = true;\n      }\n      if (permissionLike.write) {\n        containerSASPermissions.write = true;\n      }\n      if (permissionLike.delete) {\n        containerSASPermissions.delete = true;\n      }\n      if (permissionLike.list) {\n        containerSASPermissions.list = true;\n      }\n      if (permissionLike.deleteVersion) {\n        containerSASPermissions.deleteVersion = true;\n      }\n      if (permissionLike.tag) {\n        containerSASPermissions.tag = true;\n      }\n      if (permissionLike.move) {\n        containerSASPermissions.move = true;\n      }\n      if (permissionLike.execute) {\n        containerSASPermissions.execute = true;\n      }\n      if (permissionLike.setImmutabilityPolicy) {\n        containerSASPermissions.setImmutabilityPolicy = true;\n      }\n      if (permissionLike.permanentDelete) {\n        containerSASPermissions.permanentDelete = true;\n      }\n      if (permissionLike.filterByTags) {\n        containerSASPermissions.filterByTags = true;\n      }\n      return containerSASPermissions;\n    }\n  }]);\n  return ContainerSASPermissions;\n}();","map":{"version":3,"mappings":"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","names":["ContainerSASPermissions","permissions","read","push","add","create","write","delete","deleteVersion","list","tag","move","execute","setImmutabilityPolicy","permanentDelete","filterByTags","join","containerSASPermissions","char","RangeError","permissionLike"],"sourceRoot":"","sources":["../../../../src/sas/ContainerSASPermissions.ts"],"sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\n/**\n * This is a helper class to construct a string representing the permissions granted by a ServiceSAS to a container.\n * Setting a value to true means that any SAS which uses these permissions will grant permissions for that operation.\n * Once all the values are set, this should be serialized with toString and set as the permissions field on a\n * {@link BlobSASSignatureValues} object. It is possible to construct the permissions string without this class, but\n * the order of the permissions is particular and this class guarantees correctness.\n */\nexport class ContainerSASPermissions {\n  /**\n   * Creates an {@link ContainerSASPermissions} from the specified permissions string. This method will throw an\n   * Error if it encounters a character that does not correspond to a valid permission.\n   *\n   * @param permissions -\n   */\n  public static parse(permissions: string): ContainerSASPermissions {\n    const containerSASPermissions = new ContainerSASPermissions();\n\n    for (const char of permissions) {\n      switch (char) {\n        case \"r\":\n          containerSASPermissions.read = true;\n          break;\n        case \"a\":\n          containerSASPermissions.add = true;\n          break;\n        case \"c\":\n          containerSASPermissions.create = true;\n          break;\n        case \"w\":\n          containerSASPermissions.write = true;\n          break;\n        case \"d\":\n          containerSASPermissions.delete = true;\n          break;\n        case \"l\":\n          containerSASPermissions.list = true;\n          break;\n        case \"t\":\n          containerSASPermissions.tag = true;\n          break;\n        case \"x\":\n          containerSASPermissions.deleteVersion = true;\n          break;\n        case \"m\":\n          containerSASPermissions.move = true;\n          break;\n        case \"e\":\n          containerSASPermissions.execute = true;\n          break;\n        case \"i\":\n          containerSASPermissions.setImmutabilityPolicy = true;\n          break;\n        case \"y\":\n          containerSASPermissions.permanentDelete = true;\n          break;\n        case \"f\":\n          containerSASPermissions.filterByTags = true;\n          break;\n        default:\n          throw new RangeError(`Invalid permission ${char}`);\n      }\n    }\n\n    return containerSASPermissions;\n  }\n\n  /**\n   * Creates a {@link ContainerSASPermissions} from a raw object which contains same keys as it\n   * and boolean values for them.\n   *\n   * @param permissionLike -\n   */\n  public static from(permissionLike: ContainerSASPermissionsLike): ContainerSASPermissions {\n    const containerSASPermissions = new ContainerSASPermissions();\n    if (permissionLike.read) {\n      containerSASPermissions.read = true;\n    }\n    if (permissionLike.add) {\n      containerSASPermissions.add = true;\n    }\n    if (permissionLike.create) {\n      containerSASPermissions.create = true;\n    }\n    if (permissionLike.write) {\n      containerSASPermissions.write = true;\n    }\n    if (permissionLike.delete) {\n      containerSASPermissions.delete = true;\n    }\n    if (permissionLike.list) {\n      containerSASPermissions.list = true;\n    }\n    if (permissionLike.deleteVersion) {\n      containerSASPermissions.deleteVersion = true;\n    }\n    if (permissionLike.tag) {\n      containerSASPermissions.tag = true;\n    }\n    if (permissionLike.move) {\n      containerSASPermissions.move = true;\n    }\n    if (permissionLike.execute) {\n      containerSASPermissions.execute = true;\n    }\n    if (permissionLike.setImmutabilityPolicy) {\n      containerSASPermissions.setImmutabilityPolicy = true;\n    }\n    if (permissionLike.permanentDelete) {\n      containerSASPermissions.permanentDelete = true;\n    }\n    if (permissionLike.filterByTags) {\n      containerSASPermissions.filterByTags = true;\n    }\n    return containerSASPermissions;\n  }\n\n  /**\n   * Specifies Read access granted.\n   */\n  public read: boolean = false;\n\n  /**\n   * Specifies Add access granted.\n   */\n  public add: boolean = false;\n\n  /**\n   * Specifies Create access granted.\n   */\n  public create: boolean = false;\n\n  /**\n   * Specifies Write access granted.\n   */\n  public write: boolean = false;\n\n  /**\n   * Specifies Delete access granted.\n   */\n  public delete: boolean = false;\n\n  /**\n   * Specifies Delete version access granted.\n   */\n  public deleteVersion: boolean = false;\n\n  /**\n   * Specifies List access granted.\n   */\n  public list: boolean = false;\n\n  /**\n   * Specfies Tag access granted.\n   */\n  public tag: boolean = false;\n\n  /**\n   * Specifies Move access granted.\n   */\n  public move: boolean = false;\n\n  /**\n   * Specifies Execute access granted.\n   */\n  public execute: boolean = false;\n\n  /**\n   * Specifies SetImmutabilityPolicy access granted.\n   */\n  public setImmutabilityPolicy: boolean = false;\n\n  /**\n   * Specifies that Permanent Delete is permitted.\n   */\n  public permanentDelete: boolean = false;\n\n  /**\n   * Specifies that Filter Blobs by Tags is permitted.\n   */\n  public filterByTags: boolean = false;\n\n  /**\n   * Converts the given permissions to a string. Using this method will guarantee the permissions are in an\n   * order accepted by the service.\n   *\n   * The order of the characters should be as specified here to ensure correctness.\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/constructing-a-service-sas\n   *\n   */\n  public toString(): string {\n    const permissions: string[] = [];\n    if (this.read) {\n      permissions.push(\"r\");\n    }\n    if (this.add) {\n      permissions.push(\"a\");\n    }\n    if (this.create) {\n      permissions.push(\"c\");\n    }\n    if (this.write) {\n      permissions.push(\"w\");\n    }\n    if (this.delete) {\n      permissions.push(\"d\");\n    }\n    if (this.deleteVersion) {\n      permissions.push(\"x\");\n    }\n    if (this.list) {\n      permissions.push(\"l\");\n    }\n    if (this.tag) {\n      permissions.push(\"t\");\n    }\n    if (this.move) {\n      permissions.push(\"m\");\n    }\n    if (this.execute) {\n      permissions.push(\"e\");\n    }\n    if (this.setImmutabilityPolicy) {\n      permissions.push(\"i\");\n    }\n    if (this.permanentDelete) {\n      permissions.push(\"y\");\n    }\n    if (this.filterByTags) {\n      permissions.push(\"f\");\n    }\n    return permissions.join(\"\");\n  }\n}\n\n/**\n * A type that looks like a Container SAS permission.\n * Used in {@link ContainerSASPermissions} to parse SAS permissions from raw objects.\n */\nexport interface ContainerSASPermissionsLike {\n  /**\n   * Specifies Read access granted.\n   */\n  read?: boolean;\n\n  /**\n   * Specifies Add access granted.\n   */\n  add?: boolean;\n\n  /**\n   * Specifies Create access granted.\n   */\n  create?: boolean;\n\n  /**\n   * Specifies Write access granted.\n   */\n  write?: boolean;\n\n  /**\n   * Specifies Delete access granted.\n   */\n  delete?: boolean;\n\n  /**\n   * Specifies Delete version access granted.\n   */\n  deleteVersion?: boolean;\n\n  /**\n   * Specifies List access granted.\n   */\n  list?: boolean;\n\n  /**\n   * Specfies Tag access granted.\n   */\n  tag?: boolean;\n\n  /**\n   * Specifies Move access granted.\n   */\n  move?: boolean;\n\n  /**\n   * Specifies Execute access granted.\n   */\n  execute?: boolean;\n\n  /**\n   * Specifies SetImmutabilityPolicy access granted.\n   */\n  setImmutabilityPolicy?: boolean;\n\n  /**\n   * Specifies that Permanent Delete is permitted.\n   */\n  permanentDelete?: boolean;\n\n  /**\n   * Specifies that Filter Blobs by Tags is permitted.\n   */\n  filterByTags?: boolean;\n}\n"]},"metadata":{},"sourceType":"module"}