{"ast":null,"code":"/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\nimport { __extends } from \"tslib\";\nimport { AuthError } from \"./AuthError\";\nimport { StringUtils } from \"../utils/StringUtils\";\nexport var ClientAuthErrorMessage = {\n  endpointResolutionError: {\n    code: \"endpoints_resolution_error\",\n    desc: \"Error: could not resolve endpoints. Please check network and try again.\"\n  },\n  popUpWindowError: {\n    code: \"popup_window_error\",\n    desc: \"Error opening popup window. This can happen if you are using IE or if popups are blocked in the browser.\"\n  },\n  tokenRenewalError: {\n    code: \"token_renewal_error\",\n    desc: \"Token renewal operation failed due to timeout.\"\n  },\n  invalidIdToken: {\n    code: \"invalid_id_token\",\n    desc: \"Invalid ID token format.\"\n  },\n  invalidStateError: {\n    code: \"invalid_state_error\",\n    desc: \"Invalid state.\"\n  },\n  nonceMismatchError: {\n    code: \"nonce_mismatch_error\",\n    desc: \"Nonce is not matching, Nonce received: \"\n  },\n  loginProgressError: {\n    code: \"login_progress_error\",\n    desc: \"Login_In_Progress: Error during login call - login is already in progress.\"\n  },\n  acquireTokenProgressError: {\n    code: \"acquiretoken_progress_error\",\n    desc: \"AcquireToken_In_Progress: Error during login call - login is already in progress.\"\n  },\n  userCancelledError: {\n    code: \"user_cancelled\",\n    desc: \"User cancelled the flow.\"\n  },\n  callbackError: {\n    code: \"callback_error\",\n    desc: \"Error occurred in token received callback function.\"\n  },\n  userLoginRequiredError: {\n    code: \"user_login_error\",\n    desc: \"User login is required. For silent calls, request must contain either sid or login_hint\"\n  },\n  userDoesNotExistError: {\n    code: \"user_non_existent\",\n    desc: \"User object does not exist. Please call a login API.\"\n  },\n  clientInfoDecodingError: {\n    code: \"client_info_decoding_error\",\n    desc: \"The client info could not be parsed/decoded correctly. Please review the trace to determine the root cause.\"\n  },\n  clientInfoNotPopulatedError: {\n    code: \"client_info_not_populated_error\",\n    desc: \"The service did not populate client_info in the response, Please verify with the service team\"\n  },\n  nullOrEmptyIdToken: {\n    code: \"null_or_empty_id_token\",\n    desc: \"The idToken is null or empty. Please review the trace to determine the root cause.\"\n  },\n  idTokenNotParsed: {\n    code: \"id_token_parsing_error\",\n    desc: \"ID token cannot be parsed. Please review stack trace to determine root cause.\"\n  },\n  tokenEncodingError: {\n    code: \"token_encoding_error\",\n    desc: \"The token to be decoded is not encoded correctly.\"\n  },\n  invalidInteractionType: {\n    code: \"invalid_interaction_type\",\n    desc: \"The interaction type passed to the handler was incorrect or unknown\"\n  },\n  cacheParseError: {\n    code: \"cannot_parse_cache\",\n    desc: \"The cached token key is not a valid JSON and cannot be parsed\"\n  },\n  blockTokenRequestsInHiddenIframe: {\n    code: \"block_token_requests\",\n    desc: \"Token calls are blocked in hidden iframes\"\n  }\n};\n/**\n * Error thrown when there is an error in the client code running on the browser.\n */\nvar ClientAuthError = /** @class */function (_super) {\n  __extends(ClientAuthError, _super);\n  function ClientAuthError(errorCode, errorMessage) {\n    var _this = _super.call(this, errorCode, errorMessage) || this;\n    _this.name = \"ClientAuthError\";\n    Object.setPrototypeOf(_this, ClientAuthError.prototype);\n    return _this;\n  }\n  ClientAuthError.createEndpointResolutionError = function (errDetail) {\n    var errorMessage = ClientAuthErrorMessage.endpointResolutionError.desc;\n    if (errDetail && !StringUtils.isEmpty(errDetail)) {\n      errorMessage += \" Details: \" + errDetail;\n    }\n    return new ClientAuthError(ClientAuthErrorMessage.endpointResolutionError.code, errorMessage);\n  };\n  ClientAuthError.createPopupWindowError = function (errDetail) {\n    var errorMessage = ClientAuthErrorMessage.popUpWindowError.desc;\n    if (errDetail && !StringUtils.isEmpty(errDetail)) {\n      errorMessage += \" Details: \" + errDetail;\n    }\n    return new ClientAuthError(ClientAuthErrorMessage.popUpWindowError.code, errorMessage);\n  };\n  ClientAuthError.createTokenRenewalTimeoutError = function () {\n    return new ClientAuthError(ClientAuthErrorMessage.tokenRenewalError.code, ClientAuthErrorMessage.tokenRenewalError.desc);\n  };\n  ClientAuthError.createInvalidIdTokenError = function (idToken) {\n    return new ClientAuthError(ClientAuthErrorMessage.invalidIdToken.code, ClientAuthErrorMessage.invalidIdToken.desc + \" Given token: \" + idToken);\n  };\n  // TODO: Is this not a security flaw to send the user the state expected??\n  ClientAuthError.createInvalidStateError = function (invalidState, actualState) {\n    return new ClientAuthError(ClientAuthErrorMessage.invalidStateError.code, ClientAuthErrorMessage.invalidStateError.desc + \" \" + invalidState + \", state expected : \" + actualState + \".\");\n  };\n  // TODO: Is this not a security flaw to send the user the Nonce expected??\n  ClientAuthError.createNonceMismatchError = function (invalidNonce, actualNonce) {\n    return new ClientAuthError(ClientAuthErrorMessage.nonceMismatchError.code, ClientAuthErrorMessage.nonceMismatchError.desc + \" \" + invalidNonce + \", nonce expected : \" + actualNonce + \".\");\n  };\n  ClientAuthError.createLoginInProgressError = function () {\n    return new ClientAuthError(ClientAuthErrorMessage.loginProgressError.code, ClientAuthErrorMessage.loginProgressError.desc);\n  };\n  ClientAuthError.createAcquireTokenInProgressError = function () {\n    return new ClientAuthError(ClientAuthErrorMessage.acquireTokenProgressError.code, ClientAuthErrorMessage.acquireTokenProgressError.desc);\n  };\n  ClientAuthError.createUserCancelledError = function () {\n    return new ClientAuthError(ClientAuthErrorMessage.userCancelledError.code, ClientAuthErrorMessage.userCancelledError.desc);\n  };\n  ClientAuthError.createErrorInCallbackFunction = function (errorDesc) {\n    return new ClientAuthError(ClientAuthErrorMessage.callbackError.code, ClientAuthErrorMessage.callbackError.desc + \" \" + errorDesc + \".\");\n  };\n  ClientAuthError.createUserLoginRequiredError = function () {\n    return new ClientAuthError(ClientAuthErrorMessage.userLoginRequiredError.code, ClientAuthErrorMessage.userLoginRequiredError.desc);\n  };\n  ClientAuthError.createUserDoesNotExistError = function () {\n    return new ClientAuthError(ClientAuthErrorMessage.userDoesNotExistError.code, ClientAuthErrorMessage.userDoesNotExistError.desc);\n  };\n  ClientAuthError.createClientInfoDecodingError = function (caughtError) {\n    return new ClientAuthError(ClientAuthErrorMessage.clientInfoDecodingError.code, ClientAuthErrorMessage.clientInfoDecodingError.desc + \" Failed with error: \" + caughtError);\n  };\n  ClientAuthError.createClientInfoNotPopulatedError = function (caughtError) {\n    return new ClientAuthError(ClientAuthErrorMessage.clientInfoNotPopulatedError.code, ClientAuthErrorMessage.clientInfoNotPopulatedError.desc + \" Failed with error: \" + caughtError);\n  };\n  ClientAuthError.createIdTokenNullOrEmptyError = function (invalidRawTokenString) {\n    return new ClientAuthError(ClientAuthErrorMessage.nullOrEmptyIdToken.code, ClientAuthErrorMessage.nullOrEmptyIdToken.desc + \" Raw ID Token Value: \" + invalidRawTokenString);\n  };\n  ClientAuthError.createIdTokenParsingError = function (caughtParsingError) {\n    return new ClientAuthError(ClientAuthErrorMessage.idTokenNotParsed.code, ClientAuthErrorMessage.idTokenNotParsed.desc + \" Failed with error: \" + caughtParsingError);\n  };\n  ClientAuthError.createTokenEncodingError = function (incorrectlyEncodedToken) {\n    return new ClientAuthError(ClientAuthErrorMessage.tokenEncodingError.code, ClientAuthErrorMessage.tokenEncodingError.desc + \" Attempted to decode: \" + incorrectlyEncodedToken);\n  };\n  ClientAuthError.createInvalidInteractionTypeError = function () {\n    return new ClientAuthError(ClientAuthErrorMessage.invalidInteractionType.code, ClientAuthErrorMessage.invalidInteractionType.desc);\n  };\n  ClientAuthError.createCacheParseError = function (key) {\n    var errorMessage = \"invalid key: \" + key + \", \" + ClientAuthErrorMessage.cacheParseError.desc;\n    return new ClientAuthError(ClientAuthErrorMessage.cacheParseError.code, errorMessage);\n  };\n  ClientAuthError.createBlockTokenRequestsInHiddenIframeError = function () {\n    return new ClientAuthError(ClientAuthErrorMessage.blockTokenRequestsInHiddenIframe.code, ClientAuthErrorMessage.blockTokenRequestsInHiddenIframe.desc);\n  };\n  return ClientAuthError;\n}(AuthError);\nexport { ClientAuthError };","map":{"version":3,"mappings":"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","names":["AuthError","StringUtils","ClientAuthErrorMessage","endpointResolutionError","code","desc","popUpWindowError","tokenRenewalError","invalidIdToken","invalidStateError","nonceMismatchError","loginProgressError","acquireTokenProgressError","userCancelledError","callbackError","userLoginRequiredError","userDoesNotExistError","clientInfoDecodingError","clientInfoNotPopulatedError","nullOrEmptyIdToken","idTokenNotParsed","tokenEncodingError","invalidInteractionType","cacheParseError","blockTokenRequestsInHiddenIframe","__extends","errorCode","errorMessage","_super","_this","name","Object","setPrototypeOf","ClientAuthError","prototype","errDetail","isEmpty","idToken","invalidState","actualState","invalidNonce","actualNonce","errorDesc","caughtError","invalidRawTokenString","caughtParsingError","incorrectlyEncodedToken","key"],"sourceRoot":"","sources":["../../src/error/ClientAuthError.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}