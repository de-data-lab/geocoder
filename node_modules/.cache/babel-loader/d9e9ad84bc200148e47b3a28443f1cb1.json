{"ast":null,"code":"import _classCallCheck from \"/Users/tbeckett/Documents/Azure dev/Azure Test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/tbeckett/Documents/Azure dev/Azure Test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/Users/tbeckett/Documents/Azure dev/Azure Test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/tbeckett/Documents/Azure dev/Azure Test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nimport { BaseRequestPolicy } from \"./requestPolicy\";\nvar proxyNotSupportedInBrowser = new Error(\"ProxyPolicy is not supported in browser environment\");\nexport function getDefaultProxySettings(_proxyUrl) {\n  return undefined;\n}\nexport function proxyPolicy(_proxySettings) {\n  return {\n    create: function create(_nextPolicy, _options) {\n      throw proxyNotSupportedInBrowser;\n    }\n  };\n}\nexport var ProxyPolicy = /*#__PURE__*/function (_BaseRequestPolicy) {\n  _inherits(ProxyPolicy, _BaseRequestPolicy);\n  var _super = _createSuper(ProxyPolicy);\n  function ProxyPolicy(nextPolicy, options) {\n    var _this;\n    _classCallCheck(this, ProxyPolicy);\n    _this = _super.call(this, nextPolicy, options);\n    throw proxyNotSupportedInBrowser;\n    return _this;\n  }\n  _createClass(ProxyPolicy, [{\n    key: \"sendRequest\",\n    value: function sendRequest(_request) {\n      throw proxyNotSupportedInBrowser;\n    }\n  }]);\n  return ProxyPolicy;\n}(BaseRequestPolicy);","map":{"version":3,"mappings":";;;;AAAA;AACA;AAEA,SACEA,iBAAiB,QAIZ,iBAAiB;AAKxB,IAAMC,0BAA0B,GAAG,IAAIC,KAAK,CAAC,qDAAqD,CAAC;AAEnG,OAAM,SAAUC,uBAAuB,CAACC,SAAkB;EACxD,OAAOC,SAAS;AAClB;AAEA,OAAM,SAAUC,WAAW,CAACC,cAA8B;EACxD,OAAO;IACLC,MAAM,EAAE,gBAACC,WAA0B,EAAEC,QAA8B,EAAI;MACrE,MAAMT,0BAA0B;IAClC;GACD;AACH;AAEA,WAAaU,WAAY;EAAA;EAAA;EACvB,qBAAYC,UAAyB,EAAEC,OAA6B;IAAA;IAAA;IAClE,0BAAMD,UAAU,EAAEC,OAAO;IACzB,MAAMZ,0BAA0B;IAAC;EACnC;EAAC;IAAA;IAAA,OAEM,qBAAYa,QAAyB;MAC1C,MAAMb,0BAA0B;IAClC;EAAC;EAAA;AAAA,EAR8BD,iBAAiB","names":["BaseRequestPolicy","proxyNotSupportedInBrowser","Error","getDefaultProxySettings","_proxyUrl","undefined","proxyPolicy","_proxySettings","create","_nextPolicy","_options","ProxyPolicy","nextPolicy","options","_request"],"sourceRoot":"","sources":["../../../src/policies/proxyPolicy.browser.ts"],"sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport {\n  BaseRequestPolicy,\n  RequestPolicy,\n  RequestPolicyFactory,\n  RequestPolicyOptions,\n} from \"./requestPolicy\";\nimport { HttpOperationResponse } from \"../httpOperationResponse\";\nimport { ProxySettings } from \"../serviceClient\";\nimport { WebResourceLike } from \"../webResource\";\n\nconst proxyNotSupportedInBrowser = new Error(\"ProxyPolicy is not supported in browser environment\");\n\nexport function getDefaultProxySettings(_proxyUrl?: string): ProxySettings | undefined {\n  return undefined;\n}\n\nexport function proxyPolicy(_proxySettings?: ProxySettings): RequestPolicyFactory {\n  return {\n    create: (_nextPolicy: RequestPolicy, _options: RequestPolicyOptions) => {\n      throw proxyNotSupportedInBrowser;\n    },\n  };\n}\n\nexport class ProxyPolicy extends BaseRequestPolicy {\n  constructor(nextPolicy: RequestPolicy, options: RequestPolicyOptions) {\n    super(nextPolicy, options);\n    throw proxyNotSupportedInBrowser;\n  }\n\n  public sendRequest(_request: WebResourceLike): Promise<HttpOperationResponse> {\n    throw proxyNotSupportedInBrowser;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}