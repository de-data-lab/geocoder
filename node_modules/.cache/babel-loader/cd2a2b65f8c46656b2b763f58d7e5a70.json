{"ast":null,"code":"/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\nimport { Constants, SSOTypes, ServerHashParamKeys } from \"./Constants\";\nimport { ScopeSet } from \"../ScopeSet\";\nimport { StringUtils } from \"./StringUtils\";\nimport { CryptoUtils } from \"./CryptoUtils\";\n/**\n * @hidden\n */\nvar UrlUtils = /** @class */function () {\n  function UrlUtils() {}\n  /**\n   * generates the URL with QueryString Parameters\n   * @param scopes\n   */\n  UrlUtils.createNavigateUrl = function (serverRequestParams) {\n    var str = this.createNavigationUrlString(serverRequestParams);\n    var authEndpoint = serverRequestParams.authorityInstance.AuthorizationEndpoint;\n    // if the endpoint already has queryparams, lets add to it, otherwise add the first one\n    if (authEndpoint.indexOf(\"?\") < 0) {\n      authEndpoint += \"?\";\n    } else {\n      authEndpoint += \"&\";\n    }\n    var requestUrl = \"\" + authEndpoint + str.join(\"&\");\n    return requestUrl;\n  };\n  /**\n   * Generate the array of all QueryStringParams to be sent to the server\n   * @param scopes\n   */\n  UrlUtils.createNavigationUrlString = function (serverRequestParams) {\n    var scopes = ScopeSet.appendDefaultScopes(serverRequestParams.scopes);\n    var str = [];\n    str.push(\"response_type=\" + serverRequestParams.responseType);\n    str.push(\"scope=\" + encodeURIComponent(ScopeSet.parseScope(scopes)));\n    str.push(\"client_id=\" + encodeURIComponent(serverRequestParams.clientId));\n    str.push(\"redirect_uri=\" + encodeURIComponent(serverRequestParams.redirectUri));\n    str.push(\"state=\" + encodeURIComponent(serverRequestParams.state));\n    str.push(\"nonce=\" + encodeURIComponent(serverRequestParams.nonce));\n    str.push(\"client_info=1\");\n    str.push(\"x-client-SKU=\" + serverRequestParams.xClientSku);\n    str.push(\"x-client-Ver=\" + serverRequestParams.xClientVer);\n    if (serverRequestParams.promptValue) {\n      str.push(\"prompt=\" + encodeURIComponent(serverRequestParams.promptValue));\n    }\n    if (serverRequestParams.claimsValue) {\n      str.push(\"claims=\" + encodeURIComponent(serverRequestParams.claimsValue));\n    }\n    if (serverRequestParams.queryParameters) {\n      str.push(serverRequestParams.queryParameters);\n    }\n    if (serverRequestParams.extraQueryParameters) {\n      str.push(serverRequestParams.extraQueryParameters);\n    }\n    str.push(\"client-request-id=\" + encodeURIComponent(serverRequestParams.correlationId));\n    return str;\n  };\n  /**\n   * Returns current window URL as redirect uri\n   */\n  UrlUtils.getCurrentUrl = function () {\n    return window.location.href.split(\"?\")[0].split(\"#\")[0];\n  };\n  /**\n   * Returns given URL with query string removed\n   */\n  UrlUtils.removeHashFromUrl = function (url) {\n    return url.split(\"#\")[0];\n  };\n  /**\n   * Given a url like https://a:b/common/d?e=f#g, and a tenantId, returns https://a:b/tenantId/d\n   * @param href The url\n   * @param tenantId The tenant id to replace\n   */\n  UrlUtils.replaceTenantPath = function (url, tenantId) {\n    var lowerCaseUrl = url.toLowerCase();\n    var urlObject = this.GetUrlComponents(lowerCaseUrl);\n    var pathArray = urlObject.PathSegments;\n    if (tenantId && pathArray.length !== 0 && (pathArray[0] === Constants.common || pathArray[0] === SSOTypes.ORGANIZATIONS || pathArray[0] === SSOTypes.CONSUMERS)) {\n      pathArray[0] = tenantId;\n    }\n    return this.constructAuthorityUriFromObject(urlObject, pathArray);\n  };\n  UrlUtils.constructAuthorityUriFromObject = function (urlObject, pathArray) {\n    return this.CanonicalizeUri(urlObject.Protocol + \"//\" + urlObject.HostNameAndPort + \"/\" + pathArray.join(\"/\"));\n  };\n  /**\n   * Checks if an authority is common (ex. https://a:b/common/)\n   * @param url The url\n   * @returns true if authority is common and false otherwise\n   */\n  UrlUtils.isCommonAuthority = function (url) {\n    var authority = this.CanonicalizeUri(url);\n    var pathArray = this.GetUrlComponents(authority).PathSegments;\n    return pathArray.length !== 0 && pathArray[0] === Constants.common;\n  };\n  /**\n   * Checks if an authority is for organizations (ex. https://a:b/organizations/)\n   * @param url The url\n   * @returns true if authority is for  and false otherwise\n   */\n  UrlUtils.isOrganizationsAuthority = function (url) {\n    var authority = this.CanonicalizeUri(url);\n    var pathArray = this.GetUrlComponents(authority).PathSegments;\n    return pathArray.length !== 0 && pathArray[0] === SSOTypes.ORGANIZATIONS;\n  };\n  /**\n   * Checks if an authority is for consumers (ex. https://a:b/consumers/)\n   * @param url The url\n   * @returns true if authority is for  and false otherwise\n   */\n  UrlUtils.isConsumersAuthority = function (url) {\n    var authority = this.CanonicalizeUri(url);\n    var pathArray = this.GetUrlComponents(authority).PathSegments;\n    return pathArray.length !== 0 && pathArray[0] === SSOTypes.CONSUMERS;\n  };\n  /**\n   * Parses out the components from a url string.\n   * @returns An object with the various components. Please cache this value insted of calling this multiple times on the same url.\n   */\n  UrlUtils.GetUrlComponents = function (url) {\n    if (!url) {\n      throw \"Url required\";\n    }\n    // https://gist.github.com/curtisz/11139b2cfcaef4a261e0\n    var regEx = RegExp(\"^(([^:/?#]+):)?(//([^/?#]*))?([^?#]*)(\\\\?([^#]*))?(#(.*))?\");\n    var match = url.match(regEx);\n    if (!match || match.length < 6) {\n      throw \"Valid url required\";\n    }\n    var urlComponents = {\n      Protocol: match[1],\n      HostNameAndPort: match[4],\n      AbsolutePath: match[5]\n    };\n    var pathSegments = urlComponents.AbsolutePath.split(\"/\");\n    pathSegments = pathSegments.filter(function (val) {\n      return val && val.length > 0;\n    }); // remove empty elements\n    urlComponents.PathSegments = pathSegments;\n    if (match[6]) {\n      urlComponents.Search = match[6];\n    }\n    if (match[8]) {\n      urlComponents.Hash = match[8];\n    }\n    return urlComponents;\n  };\n  /**\n   * Given a url or path, append a trailing slash if one doesnt exist\n   *\n   * @param url\n   */\n  UrlUtils.CanonicalizeUri = function (url) {\n    if (url) {\n      var lowerCaseUrl = url.toLowerCase();\n      if (!UrlUtils.endsWith(lowerCaseUrl, \"/\")) {\n        lowerCaseUrl += \"/\";\n      }\n      return lowerCaseUrl;\n    }\n    return url;\n  };\n  /**\n   * Checks to see if the url ends with the suffix\n   * Required because we are compiling for es5 instead of es6\n   * @param url\n   * @param str\n   */\n  // TODO: Rename this, not clear what it is supposed to do\n  UrlUtils.endsWith = function (url, suffix) {\n    if (!url || !suffix) {\n      return false;\n    }\n    return url.indexOf(suffix, url.length - suffix.length) !== -1;\n  };\n  /**\n   * Utils function to remove the login_hint and domain_hint from the i/p extraQueryParameters\n   * @param url\n   * @param name\n   */\n  UrlUtils.urlRemoveQueryStringParameter = function (url, name) {\n    if (StringUtils.isEmpty(url)) {\n      return url;\n    }\n    var updatedUrl = url;\n    var regex = new RegExp(\"(\\\\&\" + name + \"=)[^\\&]+\");\n    updatedUrl = url.replace(regex, \"\");\n    // name=value&\n    regex = new RegExp(\"(\" + name + \"=)[^\\&]+&\");\n    updatedUrl = url.replace(regex, \"\");\n    // name=value\n    regex = new RegExp(\"(\" + name + \"=)[^\\&]+\");\n    updatedUrl = url.replace(regex, \"\");\n    return updatedUrl;\n  };\n  /**\n   * @hidden\n   * @ignore\n   *\n   * Returns the anchor part(#) of the URL\n   */\n  UrlUtils.getHashFromUrl = function (urlStringOrFragment) {\n    var hashIndex1 = urlStringOrFragment.indexOf(\"#\");\n    var hashIndex2 = urlStringOrFragment.indexOf(\"#/\");\n    if (hashIndex2 > -1) {\n      return urlStringOrFragment.substring(hashIndex2 + 2);\n    } else if (hashIndex1 > -1) {\n      return urlStringOrFragment.substring(hashIndex1 + 1);\n    }\n    return urlStringOrFragment;\n  };\n  /**\n   * @hidden\n   * Check if the url contains a hash with known properties\n   * @ignore\n   */\n  UrlUtils.urlContainsHash = function (urlString) {\n    var parameters = UrlUtils.deserializeHash(urlString);\n    return parameters.hasOwnProperty(ServerHashParamKeys.ERROR_DESCRIPTION) || parameters.hasOwnProperty(ServerHashParamKeys.ERROR) || parameters.hasOwnProperty(ServerHashParamKeys.ACCESS_TOKEN) || parameters.hasOwnProperty(ServerHashParamKeys.ID_TOKEN);\n  };\n  /**\n   * @hidden\n   * Returns deserialized portion of URL hash\n   * @ignore\n   */\n  UrlUtils.deserializeHash = function (urlFragment) {\n    var hash = UrlUtils.getHashFromUrl(urlFragment);\n    return CryptoUtils.deserialize(hash);\n  };\n  /**\n   * @ignore\n   * @param {string} URI\n   * @returns {string} host from the URI\n   *\n   * extract URI from the host\n   */\n  UrlUtils.getHostFromUri = function (uri) {\n    // remove http:// or https:// from uri\n    var extractedUri = String(uri).replace(/^(https?:)\\/\\//, \"\");\n    extractedUri = extractedUri.split(\"/\")[0];\n    return extractedUri;\n  };\n  return UrlUtils;\n}();\nexport { UrlUtils };","map":{"version":3,"mappings":"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","names":["Constants","SSOTypes","ServerHashParamKeys","ScopeSet","StringUtils","CryptoUtils","UrlUtils","serverRequestParams","str","createNavigationUrlString","authEndpoint","authorityInstance","AuthorizationEndpoint","indexOf","requestUrl","join","scopes","appendDefaultScopes","push","responseType","encodeURIComponent","parseScope","clientId","redirectUri","state","nonce","xClientSku","xClientVer","promptValue","claimsValue","queryParameters","extraQueryParameters","correlationId","window","location","href","split","url","tenantId","lowerCaseUrl","toLowerCase","urlObject","GetUrlComponents","pathArray","PathSegments","length","common","ORGANIZATIONS","CONSUMERS","constructAuthorityUriFromObject","CanonicalizeUri","Protocol","HostNameAndPort","authority","regEx","RegExp","match","urlComponents","AbsolutePath","pathSegments","filter","val","Search","Hash","endsWith","suffix","name","isEmpty","updatedUrl","regex","replace","urlStringOrFragment","hashIndex1","hashIndex2","substring","urlString","parameters","deserializeHash","hasOwnProperty","ERROR_DESCRIPTION","ERROR","ACCESS_TOKEN","ID_TOKEN","urlFragment","hash","getHashFromUrl","deserialize","uri","extractedUri","String"],"sourceRoot":"","sources":["../../src/utils/UrlUtils.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}