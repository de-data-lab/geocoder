{"ast":null,"code":"/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\nimport { NetworkRequestType } from \"./utils/Constants\";\n/**\n * XHR client for JSON endpoints\n * https://www.npmjs.com/package/async-promise\n * @hidden\n */\nvar XhrClient = /** @class */function () {\n  function XhrClient() {}\n  XhrClient.prototype.sendRequestAsync = function (url, method, enableCaching) {\n    var _this = this;\n    return new Promise(function (resolve, reject) {\n      var xhr = new XMLHttpRequest();\n      xhr.open(method, url, /* async: */true);\n      if (enableCaching) {\n        /*\n         * TODO: (shivb) ensure that this can be cached\n         * xhr.setRequestHeader(\"Cache-Control\", \"Public\");\n         */\n      }\n      xhr.onload = function () {\n        if (xhr.status < 200 || xhr.status >= 300) {\n          reject(_this.handleError(xhr.responseText));\n        }\n        var jsonResponse;\n        try {\n          jsonResponse = JSON.parse(xhr.responseText);\n        } catch (e) {\n          reject(_this.handleError(xhr.responseText));\n        }\n        var response = {\n          statusCode: xhr.status,\n          body: jsonResponse\n        };\n        resolve(response);\n      };\n      xhr.onerror = function () {\n        reject(xhr.status);\n      };\n      if (method === NetworkRequestType.GET) {\n        xhr.send();\n      } else {\n        throw \"not implemented\";\n      }\n    });\n  };\n  XhrClient.prototype.handleError = function (responseText) {\n    var jsonResponse;\n    try {\n      jsonResponse = JSON.parse(responseText);\n      if (jsonResponse[\"error\"]) {\n        return jsonResponse[\"error\"];\n      } else {\n        throw responseText;\n      }\n    } catch (e) {\n      return responseText;\n    }\n  };\n  return XhrClient;\n}();\nexport { XhrClient };","map":{"version":3,"mappings":"AAAA;;;;AAKA,SAASA,kBAAkB,QAAQ,mBAAmB;AAEtD;;;;;AAMA;EAAA,sBAwDA;EAtDWC,oCAAgB,GAAvB,UAAwBC,GAAW,EAAEC,MAAc,EAAEC,aAAuB;IAA5E;IACI,OAAO,IAAIC,OAAO,CAAc,UAACC,OAAO,EAAEC,MAAM;MAC5C,IAAMC,GAAG,GAAG,IAAIC,cAAc,EAAE;MAChCD,GAAG,CAACE,IAAI,CAACP,MAAM,EAAED,GAAG,EAAE,YAAa,IAAI,CAAC;MACxC,IAAIE,aAAa,EAAE;QACf;;;;MAAA;MAMJI,GAAG,CAACG,MAAM,GAAG;QACT,IAAIH,GAAG,CAACI,MAAM,GAAG,GAAG,IAAIJ,GAAG,CAACI,MAAM,IAAI,GAAG,EAAE;UACvCL,MAAM,CAACM,KAAI,CAACC,WAAW,CAACN,GAAG,CAACO,YAAY,CAAC,CAAC;;QAE9C,IAAIC,YAAY;QAChB,IAAI;UACAA,YAAY,GAAGC,IAAI,CAACC,KAAK,CAACV,GAAG,CAACO,YAAY,CAAC;SAC9C,CAAC,OAAOI,CAAC,EAAE;UACRZ,MAAM,CAACM,KAAI,CAACC,WAAW,CAACN,GAAG,CAACO,YAAY,CAAC,CAAC;;QAE9C,IAAMK,QAAQ,GAAgB;UAC1BC,UAAU,EAAEb,GAAG,CAACI,MAAM;UACtBU,IAAI,EAAEN;SACT;QACDV,OAAO,CAACc,QAAQ,CAAC;MACrB,CAAC;MAEDZ,GAAG,CAACe,OAAO,GAAG;QACVhB,MAAM,CAACC,GAAG,CAACI,MAAM,CAAC;MACtB,CAAC;MAED,IAAIT,MAAM,KAAKH,kBAAkB,CAACwB,GAAG,EAAE;QACnChB,GAAG,CAACiB,IAAI,EAAE;OACb,MACI;QACD,MAAM,iBAAiB;;IAE/B,CAAC,CAAC;EACN,CAAC;EAESxB,+BAAW,GAArB,UAAsBc,YAAoB;IACtC,IAAIC,YAAoB;IACxB,IAAI;MACAA,YAAY,GAAGC,IAAI,CAACC,KAAK,CAACH,YAAY,CAAC;MACvC,IAAIC,YAAY,CAAC,OAAO,CAAC,EAAE;QACvB,OAAOA,YAAY,CAAC,OAAO,CAAC;OAC/B,MAAM;QACH,MAAMD,YAAY;;KAEzB,CAAC,OAAOI,CAAC,EAAE;MACR,OAAOJ,YAAY;;EAE3B,CAAC;EACL,gBAAC;AAAD,CAAC,EAxDD","names":["NetworkRequestType","XhrClient","url","method","enableCaching","Promise","resolve","reject","xhr","XMLHttpRequest","open","onload","status","_this","handleError","responseText","jsonResponse","JSON","parse","e","response","statusCode","body","onerror","GET","send"],"sourceRoot":"","sources":["../src/XHRClient.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}