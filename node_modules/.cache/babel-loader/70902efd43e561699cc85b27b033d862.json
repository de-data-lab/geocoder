{"ast":null,"code":"/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\nimport { __assign, __awaiter, __generator } from \"tslib\";\nimport { AccessTokenKey } from \"./cache/AccessTokenKey\";\nimport { AccessTokenValue } from \"./cache/AccessTokenValue\";\nimport { ServerRequestParameters } from \"./ServerRequestParameters\";\nimport { AuthorityType } from \"./authority/Authority\";\nimport { ClientInfo } from \"./ClientInfo\";\nimport { IdToken } from \"./IdToken\";\nimport { AuthCache } from \"./cache/AuthCache\";\nimport { Account } from \"./Account\";\nimport { ScopeSet } from \"./ScopeSet\";\nimport { StringUtils } from \"./utils/StringUtils\";\nimport { WindowUtils } from \"./utils/WindowUtils\";\nimport { TokenUtils } from \"./utils/TokenUtils\";\nimport { TimeUtils } from \"./utils/TimeUtils\";\nimport { UrlUtils } from \"./utils/UrlUtils\";\nimport { RequestUtils } from \"./utils/RequestUtils\";\nimport { ResponseUtils } from \"./utils/ResponseUtils\";\nimport { AuthorityFactory } from \"./authority/AuthorityFactory\";\nimport { buildConfiguration } from \"./Configuration\";\nimport { ClientConfigurationError } from \"./error/ClientConfigurationError\";\nimport { AuthError } from \"./error/AuthError\";\nimport { ClientAuthError, ClientAuthErrorMessage } from \"./error/ClientAuthError\";\nimport { ServerError } from \"./error/ServerError\";\nimport { InteractionRequiredAuthError } from \"./error/InteractionRequiredAuthError\";\nimport { buildResponseStateOnly } from \"./AuthResponse\";\nimport TelemetryManager from \"./telemetry/TelemetryManager\";\nimport { API_EVENT_IDENTIFIER } from \"./telemetry/ApiEvent\";\nimport { Constants, ServerHashParamKeys, ResponseTypes, TemporaryCacheKeys, PersistentCacheKeys, ErrorCacheKeys, FramePrefix } from \"./utils/Constants\";\nimport { CryptoUtils } from \"./utils/CryptoUtils\";\nimport { TrustedAuthority } from \"./authority/TrustedAuthority\";\nimport { AuthCacheUtils } from \"./utils/AuthCacheUtils\";\n// default authority\nvar DEFAULT_AUTHORITY = \"https://login.microsoftonline.com/common\";\n/**\n * UserAgentApplication class\n *\n * Object Instance that the developer can use to make loginXX OR acquireTokenXX functions\n */\nvar UserAgentApplication = /** @class */function () {\n  /**\n   * @constructor\n   * Constructor for the UserAgentApplication used to instantiate the UserAgentApplication object\n   *\n   * Important attributes in the Configuration object for auth are:\n   * - clientID: the application ID of your application.\n   * You can obtain one by registering your application with our Application registration portal : https://portal.azure.com/#blade/Microsoft_AAD_IAM/ActiveDirectoryMenuBlade/RegisteredAppsPreview\n   * - authority: the authority URL for your application.\n   *\n   * In Azure AD, authority is a URL indicating the Azure active directory that MSAL uses to obtain tokens.\n   * It is of the form https://login.microsoftonline.com/&lt;Enter_the_Tenant_Info_Here&gt;.\n   * If your application supports Accounts in one organizational directory, replace \"Enter_the_Tenant_Info_Here\" value with the Tenant Id or Tenant name (for example, contoso.microsoft.com).\n   * If your application supports Accounts in any organizational directory, replace \"Enter_the_Tenant_Info_Here\" value with organizations.\n   * If your application supports Accounts in any organizational directory and personal Microsoft accounts, replace \"Enter_the_Tenant_Info_Here\" value with common.\n   * To restrict support to Personal Microsoft accounts only, replace \"Enter_the_Tenant_Info_Here\" value with consumers.\n   *\n   *\n   * In Azure B2C, authority is of the form https://&lt;instance&gt;/tfp/&lt;tenant&gt;/&lt;policyName&gt;/\n   *\n   * @param {@link (Configuration:type)} configuration object for the MSAL UserAgentApplication instance\n   */\n  function UserAgentApplication(configuration) {\n    // callbacks for token/error\n    this.authResponseCallback = null;\n    this.tokenReceivedCallback = null;\n    this.errorReceivedCallback = null;\n    // Set the Configuration\n    this.config = buildConfiguration(configuration);\n    this.logger = this.config.system.logger;\n    this.clientId = this.config.auth.clientId;\n    this.inCookie = this.config.cache.storeAuthStateInCookie;\n    this.telemetryManager = this.getTelemetryManagerFromConfig(this.config.system.telemetry, this.clientId);\n    TrustedAuthority.setTrustedAuthoritiesFromConfig(this.config.auth.validateAuthority, this.config.auth.knownAuthorities);\n    AuthorityFactory.saveMetadataFromConfig(this.config.auth.authority, this.config.auth.authorityMetadata);\n    // if no authority is passed, set the default: \"https://login.microsoftonline.com/common\"\n    this.authority = this.config.auth.authority || DEFAULT_AUTHORITY;\n    // cache keys msal - typescript throws an error if any value other than \"localStorage\" or \"sessionStorage\" is passed\n    this.cacheStorage = new AuthCache(this.clientId, this.config.cache.cacheLocation, this.inCookie);\n    // Initialize window handling code\n    if (!window.activeRenewals) {\n      window.activeRenewals = {};\n    }\n    if (!window.renewStates) {\n      window.renewStates = [];\n    }\n    if (!window.callbackMappedToRenewStates) {\n      window.callbackMappedToRenewStates = {};\n    }\n    if (!window.promiseMappedToRenewStates) {\n      window.promiseMappedToRenewStates = {};\n    }\n    window.msal = this;\n    var urlHash = window.location.hash;\n    var urlContainsHash = UrlUtils.urlContainsHash(urlHash);\n    // check if back button is pressed\n    WindowUtils.checkIfBackButtonIsPressed(this.cacheStorage);\n    // On the server 302 - Redirect, handle this\n    if (urlContainsHash && this.cacheStorage.isInteractionInProgress(true)) {\n      var stateInfo = this.getResponseState(urlHash);\n      if (stateInfo.method === Constants.interactionTypeRedirect) {\n        this.handleRedirectAuthenticationResponse(urlHash);\n      }\n    }\n  }\n  Object.defineProperty(UserAgentApplication.prototype, \"authority\", {\n    /**\n     * Method to manage the authority URL.\n     *\n     * @returns {string} authority\n     */\n    get: function () {\n      return this.authorityInstance.CanonicalAuthority;\n    },\n    /**\n     * setter for the authority URL\n     * @param {string} authority\n     */\n    // If the developer passes an authority, create an instance\n    set: function (val) {\n      this.authorityInstance = AuthorityFactory.CreateInstance(val, this.config.auth.validateAuthority);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  /**\n   * Get the current authority instance from the MSAL configuration object\n   *\n   * @returns {@link Authority} authority instance\n   */\n  UserAgentApplication.prototype.getAuthorityInstance = function () {\n    return this.authorityInstance;\n  };\n  UserAgentApplication.prototype.handleRedirectCallback = function (authOrTokenCallback, errorReceivedCallback) {\n    if (!authOrTokenCallback) {\n      throw ClientConfigurationError.createInvalidCallbackObjectError(authOrTokenCallback);\n    }\n    // Set callbacks\n    if (errorReceivedCallback) {\n      this.tokenReceivedCallback = authOrTokenCallback;\n      this.errorReceivedCallback = errorReceivedCallback;\n      this.logger.warning(\"This overload for callback is deprecated - please change the format of the callbacks to a single callback as shown: (err: AuthError, response: AuthResponse).\");\n    } else {\n      this.authResponseCallback = authOrTokenCallback;\n    }\n    if (this.redirectError) {\n      this.authErrorHandler(Constants.interactionTypeRedirect, this.redirectError, this.redirectResponse);\n    } else if (this.redirectResponse) {\n      this.authResponseHandler(Constants.interactionTypeRedirect, this.redirectResponse);\n    }\n  };\n  /**\n   * Public API to verify if the URL contains the hash with known properties\n   * @param hash\n   */\n  UserAgentApplication.prototype.urlContainsHash = function (hash) {\n    this.logger.verbose(\"UrlContainsHash has been called\");\n    return UrlUtils.urlContainsHash(hash);\n  };\n  UserAgentApplication.prototype.authResponseHandler = function (interactionType, response, resolve) {\n    this.logger.verbose(\"AuthResponseHandler has been called\");\n    this.cacheStorage.setInteractionInProgress(false);\n    if (interactionType === Constants.interactionTypeRedirect) {\n      this.logger.verbose(\"Interaction type is redirect\");\n      if (this.errorReceivedCallback) {\n        this.logger.verbose(\"Two callbacks were provided to handleRedirectCallback, calling success callback with response\");\n        this.tokenReceivedCallback(response);\n      } else if (this.authResponseCallback) {\n        this.logger.verbose(\"One callback was provided to handleRedirectCallback, calling authResponseCallback with response\");\n        this.authResponseCallback(null, response);\n      }\n    } else if (interactionType === Constants.interactionTypePopup) {\n      this.logger.verbose(\"Interaction type is popup, resolving\");\n      resolve(response);\n    } else {\n      throw ClientAuthError.createInvalidInteractionTypeError();\n    }\n  };\n  UserAgentApplication.prototype.authErrorHandler = function (interactionType, authErr, response, reject) {\n    this.logger.verbose(\"AuthErrorHandler has been called\");\n    // set interaction_status to complete\n    this.cacheStorage.setInteractionInProgress(false);\n    if (interactionType === Constants.interactionTypeRedirect) {\n      this.logger.verbose(\"Interaction type is redirect\");\n      if (this.errorReceivedCallback) {\n        this.logger.verbose(\"Two callbacks were provided to handleRedirectCallback, calling error callback\");\n        this.errorReceivedCallback(authErr, response.accountState);\n      } else if (this.authResponseCallback) {\n        this.logger.verbose(\"One callback was provided to handleRedirectCallback, calling authResponseCallback with error\");\n        this.authResponseCallback(authErr, response);\n      } else {\n        this.logger.verbose(\"handleRedirectCallback has not been called and no callbacks are registered, throwing error\");\n        throw authErr;\n      }\n    } else if (interactionType === Constants.interactionTypePopup) {\n      this.logger.verbose(\"Interaction type is popup, rejecting\");\n      reject(authErr);\n    } else {\n      throw ClientAuthError.createInvalidInteractionTypeError();\n    }\n  };\n  // #endregion\n  /**\n   * Use when initiating the login process by redirecting the user's browser to the authorization endpoint.\n   * @param {@link (AuthenticationParameters:type)}\n   */\n  UserAgentApplication.prototype.loginRedirect = function (userRequest) {\n    this.logger.verbose(\"LoginRedirect has been called\");\n    // validate request\n    var request = RequestUtils.validateRequest(userRequest, true, this.clientId, Constants.interactionTypeRedirect);\n    this.acquireTokenInteractive(Constants.interactionTypeRedirect, true, request, null, null);\n  };\n  /**\n   * Use when you want to obtain an access_token for your API by redirecting the user's browser window to the authorization endpoint.\n   * @param {@link (AuthenticationParameters:type)}\n   *\n   * To renew idToken, please pass clientId as the only scope in the Authentication Parameters\n   */\n  UserAgentApplication.prototype.acquireTokenRedirect = function (userRequest) {\n    this.logger.verbose(\"AcquireTokenRedirect has been called\");\n    // validate request\n    var request = RequestUtils.validateRequest(userRequest, false, this.clientId, Constants.interactionTypeRedirect);\n    this.acquireTokenInteractive(Constants.interactionTypeRedirect, false, request, null, null);\n  };\n  /**\n   * Use when initiating the login process via opening a popup window in the user's browser\n   *\n   * @param {@link (AuthenticationParameters:type)}\n   *\n   * @returns {Promise.<AuthResponse>} - a promise that is fulfilled when this function has completed, or rejected if an error was raised. Returns the {@link AuthResponse} object\n   */\n  UserAgentApplication.prototype.loginPopup = function (userRequest) {\n    var _this = this;\n    this.logger.verbose(\"LoginPopup has been called\");\n    // validate request\n    var request = RequestUtils.validateRequest(userRequest, true, this.clientId, Constants.interactionTypePopup);\n    var apiEvent = this.telemetryManager.createAndStartApiEvent(request.correlationId, API_EVENT_IDENTIFIER.LoginPopup);\n    return new Promise(function (resolve, reject) {\n      _this.acquireTokenInteractive(Constants.interactionTypePopup, true, request, resolve, reject);\n    }).then(function (resp) {\n      _this.logger.verbose(\"Successfully logged in\");\n      _this.telemetryManager.stopAndFlushApiEvent(request.correlationId, apiEvent, true);\n      return resp;\n    }).catch(function (error) {\n      _this.cacheStorage.resetTempCacheItems(request.state);\n      _this.telemetryManager.stopAndFlushApiEvent(request.correlationId, apiEvent, false, error.errorCode);\n      throw error;\n    });\n  };\n  /**\n   * Use when you want to obtain an access_token for your API via opening a popup window in the user's browser\n   * @param {@link AuthenticationParameters}\n   *\n   * To renew idToken, please pass clientId as the only scope in the Authentication Parameters\n   * @returns {Promise.<AuthResponse>} - a promise that is fulfilled when this function has completed, or rejected if an error was raised. Returns the {@link AuthResponse} object\n   */\n  UserAgentApplication.prototype.acquireTokenPopup = function (userRequest) {\n    var _this = this;\n    this.logger.verbose(\"AcquireTokenPopup has been called\");\n    // validate request\n    var request = RequestUtils.validateRequest(userRequest, false, this.clientId, Constants.interactionTypePopup);\n    var apiEvent = this.telemetryManager.createAndStartApiEvent(request.correlationId, API_EVENT_IDENTIFIER.AcquireTokenPopup);\n    return new Promise(function (resolve, reject) {\n      _this.acquireTokenInteractive(Constants.interactionTypePopup, false, request, resolve, reject);\n    }).then(function (resp) {\n      _this.logger.verbose(\"Successfully acquired token\");\n      _this.telemetryManager.stopAndFlushApiEvent(request.correlationId, apiEvent, true);\n      return resp;\n    }).catch(function (error) {\n      _this.cacheStorage.resetTempCacheItems(request.state);\n      _this.telemetryManager.stopAndFlushApiEvent(request.correlationId, apiEvent, false, error.errorCode);\n      throw error;\n    });\n  };\n  // #region Acquire Token\n  /**\n   * Use when initiating the login process or when you want to obtain an access_token for your API,\n   * either by redirecting the user's browser window to the authorization endpoint or via opening a popup window in the user's browser.\n   * @param {@link (AuthenticationParameters:type)}\n   *\n   * To renew idToken, please pass clientId as the only scope in the Authentication Parameters\n   */\n  UserAgentApplication.prototype.acquireTokenInteractive = function (interactionType, isLoginCall, request, resolve, reject) {\n    var _this = this;\n    this.logger.verbose(\"AcquireTokenInteractive has been called\");\n    // block the request if made from the hidden iframe\n    WindowUtils.blockReloadInHiddenIframes();\n    try {\n      this.cacheStorage.setInteractionInProgress(true);\n    } catch (e) {\n      // If already in progress, do not proceed\n      var thrownError = isLoginCall ? ClientAuthError.createLoginInProgressError() : ClientAuthError.createAcquireTokenInProgressError();\n      var stateOnlyResponse = buildResponseStateOnly(this.getAccountState(request.state));\n      this.cacheStorage.resetTempCacheItems(request.state);\n      this.authErrorHandler(interactionType, thrownError, stateOnlyResponse, reject);\n      return;\n    }\n    if (interactionType === Constants.interactionTypeRedirect) {\n      this.cacheStorage.setItem(TemporaryCacheKeys.REDIRECT_REQUEST, \"\" + Constants.inProgress + Constants.resourceDelimiter + request.state);\n    }\n    // Get the account object if a session exists\n    var account;\n    if (request && request.account && !isLoginCall) {\n      account = request.account;\n      this.logger.verbose(\"Account set from request\");\n    } else {\n      account = this.getAccount();\n      this.logger.verbose(\"Account set from MSAL Cache\");\n    }\n    // If no session exists, prompt the user to login.\n    if (!account && !ServerRequestParameters.isSSOParam(request)) {\n      if (isLoginCall) {\n        // extract ADAL id_token if exists\n        var adalIdToken = this.extractADALIdToken();\n        // silent login if ADAL id_token is retrieved successfully - SSO\n        if (adalIdToken && !request.scopes) {\n          this.logger.info(\"ADAL's idToken exists. Extracting login information from ADAL's idToken\");\n          var tokenRequest = this.buildIDTokenRequest(request);\n          this.silentLogin = true;\n          this.acquireTokenSilent(tokenRequest).then(function (response) {\n            _this.silentLogin = false;\n            _this.logger.info(\"Unified cache call is successful\");\n            _this.authResponseHandler(interactionType, response, resolve);\n            return;\n          }, function (error) {\n            _this.silentLogin = false;\n            _this.logger.error(\"Error occurred during unified cache ATS: \" + error);\n            // proceed to login since ATS failed\n            _this.acquireTokenHelper(null, interactionType, isLoginCall, request, resolve, reject);\n          });\n        }\n        // No ADAL token found, proceed to login\n        else {\n          this.logger.verbose(\"Login call but no token found, proceed to login\");\n          this.acquireTokenHelper(null, interactionType, isLoginCall, request, resolve, reject);\n        }\n      }\n      // AcquireToken call, but no account or context given, so throw error\n      else {\n        this.logger.verbose(\"AcquireToken call, no context or account given\");\n        this.logger.info(\"User login is required\");\n        var stateOnlyResponse = buildResponseStateOnly(this.getAccountState(request.state));\n        this.cacheStorage.resetTempCacheItems(request.state);\n        this.authErrorHandler(interactionType, ClientAuthError.createUserLoginRequiredError(), stateOnlyResponse, reject);\n        return;\n      }\n    }\n    // User session exists\n    else {\n      this.logger.verbose(\"User session exists, login not required\");\n      this.acquireTokenHelper(account, interactionType, isLoginCall, request, resolve, reject);\n    }\n  };\n  /**\n   * @hidden\n   * @ignore\n   * Helper function to acquireToken\n   *\n   */\n  UserAgentApplication.prototype.acquireTokenHelper = function (account, interactionType, isLoginCall, request, resolve, reject) {\n    return __awaiter(this, void 0, void 0, function () {\n      var requestSignature, serverAuthenticationRequest, acquireTokenAuthority, popUpWindow, responseType, loginStartPage, urlNavigate, hash, error_1, navigate, err_1;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            this.logger.verbose(\"AcquireTokenHelper has been called\");\n            this.logger.verbose(\"Interaction type: \" + interactionType + \". isLoginCall: \" + isLoginCall);\n            requestSignature = request.scopes ? request.scopes.join(\" \").toLowerCase() : Constants.oidcScopes.join(\" \");\n            this.logger.verbosePii(\"Request signature: \" + requestSignature);\n            acquireTokenAuthority = request && request.authority ? AuthorityFactory.CreateInstance(request.authority, this.config.auth.validateAuthority, request.authorityMetadata) : this.authorityInstance;\n            _a.label = 1;\n          case 1:\n            _a.trys.push([1, 11,, 12]);\n            if (!!acquireTokenAuthority.hasCachedMetadata()) return [3 /*break*/, 3];\n            this.logger.verbose(\"No cached metadata for authority\");\n            return [4 /*yield*/, AuthorityFactory.saveMetadataFromNetwork(acquireTokenAuthority, this.telemetryManager, request.correlationId)];\n          case 2:\n            _a.sent();\n            return [3 /*break*/, 4];\n          case 3:\n            this.logger.verbose(\"Cached metadata found for authority\");\n            _a.label = 4;\n          case 4:\n            responseType = isLoginCall ? ResponseTypes.id_token : this.getTokenType(account, request.scopes);\n            loginStartPage = request.redirectStartPage || window.location.href;\n            serverAuthenticationRequest = new ServerRequestParameters(acquireTokenAuthority, this.clientId, responseType, this.getRedirectUri(request && request.redirectUri), request.scopes, request.state, request.correlationId);\n            this.logger.verbose(\"Finished building server authentication request\");\n            this.updateCacheEntries(serverAuthenticationRequest, account, isLoginCall, loginStartPage);\n            this.logger.verbose(\"Updating cache entries\");\n            // populate QueryParameters (sid/login_hint) and any other extraQueryParameters set by the developer\n            serverAuthenticationRequest.populateQueryParams(account, request);\n            this.logger.verbose(\"Query parameters populated from account\");\n            urlNavigate = UrlUtils.createNavigateUrl(serverAuthenticationRequest) + Constants.response_mode_fragment;\n            // set state in cache\n            if (interactionType === Constants.interactionTypeRedirect) {\n              if (!isLoginCall) {\n                this.cacheStorage.setItem(AuthCache.generateTemporaryCacheKey(TemporaryCacheKeys.STATE_ACQ_TOKEN, request.state), serverAuthenticationRequest.state, this.inCookie);\n                this.logger.verbose(\"State cached for redirect\");\n                this.logger.verbosePii(\"State cached: \" + serverAuthenticationRequest.state);\n              } else {\n                this.logger.verbose(\"Interaction type redirect but login call is true. State not cached\");\n              }\n            } else if (interactionType === Constants.interactionTypePopup) {\n              window.renewStates.push(serverAuthenticationRequest.state);\n              window.requestType = isLoginCall ? Constants.login : Constants.renewToken;\n              this.logger.verbose(\"State saved to window\");\n              this.logger.verbosePii(\"State saved: \" + serverAuthenticationRequest.state);\n              // Register callback to capture results from server\n              this.registerCallback(serverAuthenticationRequest.state, requestSignature, resolve, reject);\n            } else {\n              this.logger.verbose(\"Invalid interaction error. State not cached\");\n              throw ClientAuthError.createInvalidInteractionTypeError();\n            }\n            if (!(interactionType === Constants.interactionTypePopup)) return [3 /*break*/, 9];\n            this.logger.verbose(\"Interaction type is popup. Generating popup window\");\n            // Generate a popup window\n            try {\n              popUpWindow = this.openPopup(urlNavigate, \"msal\", Constants.popUpWidth, Constants.popUpHeight);\n              // Push popup window handle onto stack for tracking\n              WindowUtils.trackPopup(popUpWindow);\n            } catch (e) {\n              this.logger.info(ClientAuthErrorMessage.popUpWindowError.code + \":\" + ClientAuthErrorMessage.popUpWindowError.desc);\n              this.cacheStorage.setItem(ErrorCacheKeys.ERROR, ClientAuthErrorMessage.popUpWindowError.code);\n              this.cacheStorage.setItem(ErrorCacheKeys.ERROR_DESC, ClientAuthErrorMessage.popUpWindowError.desc);\n              if (reject) {\n                reject(ClientAuthError.createPopupWindowError());\n                return [2 /*return*/];\n              }\n            }\n\n            if (!popUpWindow) return [3 /*break*/, 8];\n            _a.label = 5;\n          case 5:\n            _a.trys.push([5, 7,, 8]);\n            return [4 /*yield*/, WindowUtils.monitorPopupForHash(popUpWindow, this.config.system.loadFrameTimeout, urlNavigate, this.logger)];\n          case 6:\n            hash = _a.sent();\n            this.handleAuthenticationResponse(hash);\n            // Request completed successfully, set to completed\n            this.cacheStorage.setInteractionInProgress(false);\n            this.logger.info(\"Closing popup window\");\n            // TODO: Check how this can be extracted for any framework specific code?\n            if (this.config.framework.isAngular) {\n              this.broadcast(\"msal:popUpHashChanged\", hash);\n            }\n            WindowUtils.closePopups();\n            return [3 /*break*/, 8];\n          case 7:\n            error_1 = _a.sent();\n            if (reject) {\n              reject(error_1);\n            }\n            if (this.config.framework.isAngular) {\n              this.broadcast(\"msal:popUpClosed\", error_1.errorCode + Constants.resourceDelimiter + error_1.errorMessage);\n            } else {\n              // Request failed, set to canceled\n              this.cacheStorage.setInteractionInProgress(false);\n              popUpWindow.close();\n            }\n            return [3 /*break*/, 8];\n          case 8:\n            return [3 /*break*/, 10];\n          case 9:\n            // If onRedirectNavigate is implemented, invoke it and provide urlNavigate\n            if (request.onRedirectNavigate) {\n              this.logger.verbose(\"Invoking onRedirectNavigate callback\");\n              navigate = request.onRedirectNavigate(urlNavigate);\n              // Returning false from onRedirectNavigate will stop navigation\n              if (navigate !== false) {\n                this.logger.verbose(\"onRedirectNavigate did not return false, navigating\");\n                this.navigateWindow(urlNavigate);\n              } else {\n                this.logger.verbose(\"onRedirectNavigate returned false, stopping navigation\");\n              }\n            } else {\n              // Otherwise, perform navigation\n              this.logger.verbose(\"Navigating window to urlNavigate\");\n              this.navigateWindow(urlNavigate);\n            }\n            _a.label = 10;\n          case 10:\n            return [3 /*break*/, 12];\n          case 11:\n            err_1 = _a.sent();\n            this.logger.error(err_1);\n            this.cacheStorage.resetTempCacheItems(request.state);\n            this.authErrorHandler(interactionType, ClientAuthError.createEndpointResolutionError(err_1.toString), buildResponseStateOnly(request.state), reject);\n            if (popUpWindow) {\n              popUpWindow.close();\n            }\n            return [3 /*break*/, 12];\n          case 12:\n            return [2 /*return*/];\n        }\n      });\n    });\n  };\n  /**\n   * API interfacing idToken request when applications already have a session/hint acquired by authorization client applications\n   * @param request\n   */\n  UserAgentApplication.prototype.ssoSilent = function (request) {\n    this.logger.verbose(\"ssoSilent has been called\");\n    // throw an error on an empty request\n    if (!request) {\n      throw ClientConfigurationError.createEmptyRequestError();\n    }\n    // throw an error on no hints passed\n    if (!request.sid && !request.loginHint) {\n      throw ClientConfigurationError.createSsoSilentError();\n    }\n    return this.acquireTokenSilent(__assign(__assign({}, request), {\n      scopes: Constants.oidcScopes\n    }));\n  };\n  /**\n   * Use this function to obtain a token before every call to the API / resource provider\n   *\n   * MSAL return's a cached token when available\n   * Or it send's a request to the STS to obtain a new token using a hidden iframe.\n   *\n   * @param {@link AuthenticationParameters}\n   *\n   * To renew idToken, please pass clientId as the only scope in the Authentication Parameters\n   * @returns {Promise.<AuthResponse>} - a promise that is fulfilled when this function has completed, or rejected if an error was raised. Returns the {@link AuthResponse} object\n   *\n   */\n  UserAgentApplication.prototype.acquireTokenSilent = function (userRequest) {\n    var _this = this;\n    this.logger.verbose(\"AcquireTokenSilent has been called\");\n    // validate the request\n    var request = RequestUtils.validateRequest(userRequest, false, this.clientId, Constants.interactionTypeSilent);\n    var apiEvent = this.telemetryManager.createAndStartApiEvent(request.correlationId, API_EVENT_IDENTIFIER.AcquireTokenSilent);\n    var requestSignature = RequestUtils.createRequestSignature(request);\n    return new Promise(function (resolve, reject) {\n      return __awaiter(_this, void 0, void 0, function () {\n        var scope, account, adalIdToken, responseType, serverAuthenticationRequest, adalIdTokenObject, userContainedClaims, authErr, cacheResultResponse, logMessage, err_2;\n        return __generator(this, function (_a) {\n          switch (_a.label) {\n            case 0:\n              // block the request if made from the hidden iframe\n              WindowUtils.blockReloadInHiddenIframes();\n              scope = request.scopes.join(\" \").toLowerCase();\n              this.logger.verbosePii(\"Serialized scopes: \" + scope);\n              if (request.account) {\n                account = request.account;\n                this.logger.verbose(\"Account set from request\");\n              } else {\n                account = this.getAccount();\n                this.logger.verbose(\"Account set from MSAL Cache\");\n              }\n              adalIdToken = this.cacheStorage.getItem(Constants.adalIdToken);\n              // In the event of no account being passed in the config, no session id, and no pre-existing adalIdToken, user will need to log in\n              if (!account && !(request.sid || request.loginHint) && StringUtils.isEmpty(adalIdToken)) {\n                this.logger.info(\"User login is required\");\n                // The promise rejects with a UserLoginRequiredError, which should be caught and user should be prompted to log in interactively\n                return [2 /*return*/, reject(ClientAuthError.createUserLoginRequiredError())];\n              }\n              responseType = this.getTokenType(account, request.scopes);\n              this.logger.verbose(\"Response type: \" + responseType);\n              serverAuthenticationRequest = new ServerRequestParameters(AuthorityFactory.CreateInstance(request.authority, this.config.auth.validateAuthority, request.authorityMetadata), this.clientId, responseType, this.getRedirectUri(request.redirectUri), request.scopes, request.state, request.correlationId);\n              this.logger.verbose(\"Finished building server authentication request\");\n              // populate QueryParameters (sid/login_hint) and any other extraQueryParameters set by the developer\n              if (ServerRequestParameters.isSSOParam(request) || account) {\n                serverAuthenticationRequest.populateQueryParams(account, request, null, true);\n                this.logger.verbose(\"Query parameters populated from existing SSO or account\");\n              }\n              // if user didn't pass login_hint/sid and adal's idtoken is present, extract the login_hint from the adalIdToken\n              else if (!account && !StringUtils.isEmpty(adalIdToken)) {\n                adalIdTokenObject = TokenUtils.extractIdToken(adalIdToken);\n                this.logger.verbose(\"ADAL's idToken exists. Extracting login information from ADAL's idToken to populate query parameters\");\n                serverAuthenticationRequest.populateQueryParams(account, null, adalIdTokenObject, true);\n              } else {\n                this.logger.verbose(\"No additional query parameters added\");\n              }\n              userContainedClaims = request.claimsRequest || serverAuthenticationRequest.claimsValue;\n              // If request.forceRefresh is set to true, force a request for a new token instead of getting it from the cache\n              if (!userContainedClaims && !request.forceRefresh) {\n                try {\n                  cacheResultResponse = this.getCachedToken(serverAuthenticationRequest, account);\n                } catch (e) {\n                  authErr = e;\n                }\n              }\n              if (!cacheResultResponse) return [3 /*break*/, 1];\n              this.logger.verbose(\"Token found in cache lookup\");\n              this.logger.verbosePii(\"Scopes found: \" + JSON.stringify(cacheResultResponse.scopes));\n              resolve(cacheResultResponse);\n              return [2 /*return*/, null];\n            case 1:\n              if (!authErr) return [3 /*break*/, 2];\n              this.logger.infoPii(authErr.errorCode + \":\" + authErr.errorMessage);\n              reject(authErr);\n              return [2 /*return*/, null];\n            case 2:\n              logMessage = void 0;\n              if (userContainedClaims) {\n                logMessage = \"Skipped cache lookup since claims were given\";\n              } else if (request.forceRefresh) {\n                logMessage = \"Skipped cache lookup since request.forceRefresh option was set to true\";\n              } else {\n                logMessage = \"No valid token found in cache lookup\";\n              }\n              this.logger.verbose(logMessage);\n              // Cache result can return null if cache is empty. In that case, set authority to default value if no authority is passed to the API.\n              if (!serverAuthenticationRequest.authorityInstance) {\n                serverAuthenticationRequest.authorityInstance = request.authority ? AuthorityFactory.CreateInstance(request.authority, this.config.auth.validateAuthority, request.authorityMetadata) : this.authorityInstance;\n              }\n              this.logger.verbosePii(\"Authority instance: \" + serverAuthenticationRequest.authority);\n              _a.label = 3;\n            case 3:\n              _a.trys.push([3, 7,, 8]);\n              if (!!serverAuthenticationRequest.authorityInstance.hasCachedMetadata()) return [3 /*break*/, 5];\n              this.logger.verbose(\"No cached metadata for authority\");\n              return [4 /*yield*/, AuthorityFactory.saveMetadataFromNetwork(serverAuthenticationRequest.authorityInstance, this.telemetryManager, request.correlationId)];\n            case 4:\n              _a.sent();\n              this.logger.verbose(\"Authority has been updated with endpoint discovery response\");\n              return [3 /*break*/, 6];\n            case 5:\n              this.logger.verbose(\"Cached metadata found for authority\");\n              _a.label = 6;\n            case 6:\n              /*\n               * refresh attempt with iframe\n               * Already renewing for this scope, callback when we get the token.\n               */\n              if (window.activeRenewals[requestSignature]) {\n                this.logger.verbose(\"Renewing token in progress. Registering callback\");\n                // Active renewals contains the state for each renewal.\n                this.registerCallback(window.activeRenewals[requestSignature], requestSignature, resolve, reject);\n              } else {\n                if (request.scopes && ScopeSet.onlyContainsOidcScopes(request.scopes)) {\n                  /*\n                   * App uses idToken to send to api endpoints\n                   * Default scope is tracked as OIDC scopes to store this token\n                   */\n                  this.logger.verbose(\"OpenID Connect scopes only, renewing idToken\");\n                  this.silentLogin = true;\n                  this.renewIdToken(requestSignature, resolve, reject, account, serverAuthenticationRequest);\n                } else {\n                  // renew access token\n                  this.logger.verbose(\"Renewing access token\");\n                  this.renewToken(requestSignature, resolve, reject, account, serverAuthenticationRequest);\n                }\n              }\n              return [3 /*break*/, 8];\n            case 7:\n              err_2 = _a.sent();\n              this.logger.error(err_2);\n              reject(ClientAuthError.createEndpointResolutionError(err_2.toString()));\n              return [2 /*return*/, null];\n            case 8:\n              return [2 /*return*/];\n          }\n        });\n      });\n    }).then(function (res) {\n      _this.logger.verbose(\"Successfully acquired token\");\n      _this.telemetryManager.stopAndFlushApiEvent(request.correlationId, apiEvent, true);\n      return res;\n    }).catch(function (error) {\n      _this.cacheStorage.resetTempCacheItems(request.state);\n      _this.telemetryManager.stopAndFlushApiEvent(request.correlationId, apiEvent, false, error.errorCode);\n      throw error;\n    });\n  };\n  // #endregion\n  // #region Popup Window Creation\n  /**\n   * @hidden\n   *\n   * Configures popup window for login.\n   *\n   * @param urlNavigate\n   * @param title\n   * @param popUpWidth\n   * @param popUpHeight\n   * @ignore\n   * @hidden\n   */\n  UserAgentApplication.prototype.openPopup = function (urlNavigate, title, popUpWidth, popUpHeight) {\n    this.logger.verbose(\"OpenPopup has been called\");\n    try {\n      /**\n       * adding winLeft and winTop to account for dual monitor\n       * using screenLeft and screenTop for IE8 and earlier\n       */\n      var winLeft = window.screenLeft ? window.screenLeft : window.screenX;\n      var winTop = window.screenTop ? window.screenTop : window.screenY;\n      /**\n       * window.innerWidth displays browser window\"s height and width excluding toolbars\n       * using document.documentElement.clientWidth for IE8 and earlier\n       */\n      var width = window.innerWidth || document.documentElement.clientWidth || document.body.clientWidth;\n      var height = window.innerHeight || document.documentElement.clientHeight || document.body.clientHeight;\n      var left = width / 2 - popUpWidth / 2 + winLeft;\n      var top_1 = height / 2 - popUpHeight / 2 + winTop;\n      // open the window\n      var popupWindow = window.open(urlNavigate, title, \"width=\" + popUpWidth + \", height=\" + popUpHeight + \", top=\" + top_1 + \", left=\" + left + \", scrollbars=yes\");\n      if (!popupWindow) {\n        throw ClientAuthError.createPopupWindowError();\n      }\n      if (popupWindow.focus) {\n        popupWindow.focus();\n      }\n      return popupWindow;\n    } catch (e) {\n      this.cacheStorage.setInteractionInProgress(false);\n      throw ClientAuthError.createPopupWindowError(e.toString());\n    }\n  };\n  // #endregion\n  // #region Iframe Management\n  /**\n   * @hidden\n   * Calling _loadFrame but with a timeout to signal failure in loadframeStatus. Callbacks are left.\n   * registered when network errors occur and subsequent token requests for same resource are registered to the pending request.\n   * @ignore\n   */\n  UserAgentApplication.prototype.loadIframeTimeout = function (urlNavigate, frameName, requestSignature) {\n    return __awaiter(this, void 0, void 0, function () {\n      var expectedState, iframe, _a, hash, error_2;\n      return __generator(this, function (_b) {\n        switch (_b.label) {\n          case 0:\n            expectedState = window.activeRenewals[requestSignature];\n            this.logger.verbosePii(\"Set loading state to pending for: \" + requestSignature + \":\" + expectedState);\n            this.cacheStorage.setItem(AuthCache.generateTemporaryCacheKey(TemporaryCacheKeys.RENEW_STATUS, expectedState), Constants.inProgress);\n            if (!this.config.system.navigateFrameWait) return [3 /*break*/, 2];\n            return [4 /*yield*/, WindowUtils.loadFrame(urlNavigate, frameName, this.config.system.navigateFrameWait, this.logger)];\n          case 1:\n            _a = _b.sent();\n            return [3 /*break*/, 3];\n          case 2:\n            _a = WindowUtils.loadFrameSync(urlNavigate, frameName, this.logger);\n            _b.label = 3;\n          case 3:\n            iframe = _a;\n            _b.label = 4;\n          case 4:\n            _b.trys.push([4, 6,, 7]);\n            return [4 /*yield*/, WindowUtils.monitorIframeForHash(iframe.contentWindow, this.config.system.loadFrameTimeout, urlNavigate, this.logger)];\n          case 5:\n            hash = _b.sent();\n            if (hash) {\n              this.handleAuthenticationResponse(hash);\n            }\n            return [3 /*break*/, 7];\n          case 6:\n            error_2 = _b.sent();\n            if (this.cacheStorage.getItem(AuthCache.generateTemporaryCacheKey(TemporaryCacheKeys.RENEW_STATUS, expectedState)) === Constants.inProgress) {\n              // fail the iframe session if it's in pending state\n              this.logger.verbose(\"Loading frame has timed out after: \" + this.config.system.loadFrameTimeout / 1000 + \" seconds for scope/authority \" + requestSignature + \":\" + expectedState);\n              // Error after timeout\n              if (expectedState && window.callbackMappedToRenewStates[expectedState]) {\n                window.callbackMappedToRenewStates[expectedState](null, error_2);\n              }\n              this.cacheStorage.removeItem(AuthCache.generateTemporaryCacheKey(TemporaryCacheKeys.RENEW_STATUS, expectedState));\n            }\n            WindowUtils.removeHiddenIframe(iframe);\n            throw error_2;\n          case 7:\n            WindowUtils.removeHiddenIframe(iframe);\n            return [2 /*return*/];\n        }\n      });\n    });\n  };\n  // #endregion\n  // #region General Helpers\n  /**\n   * @hidden\n   * Used to redirect the browser to the STS authorization endpoint\n   * @param {string} urlNavigate - URL of the authorization endpoint\n   */\n  UserAgentApplication.prototype.navigateWindow = function (urlNavigate, popupWindow) {\n    // Navigate if valid URL\n    if (urlNavigate && !StringUtils.isEmpty(urlNavigate)) {\n      var navigateWindow = popupWindow ? popupWindow : window;\n      var logMessage = popupWindow ? \"Navigated Popup window to:\" + urlNavigate : \"Navigate to:\" + urlNavigate;\n      this.logger.infoPii(logMessage);\n      navigateWindow.location.assign(urlNavigate);\n    } else {\n      this.logger.info(\"Navigate url is empty\");\n      throw AuthError.createUnexpectedError(\"Navigate url is empty\");\n    }\n  };\n  /**\n   * @hidden\n   * Used to add the developer requested callback to the array of callbacks for the specified scopes. The updated array is stored on the window object\n   * @param {string} expectedState - Unique state identifier (guid).\n   * @param {string} scope - Developer requested permissions. Not all scopes are guaranteed to be included in the access token returned.\n   * @param {Function} resolve - The resolve function of the promise object.\n   * @param {Function} reject - The reject function of the promise object.\n   * @ignore\n   */\n  UserAgentApplication.prototype.registerCallback = function (expectedState, requestSignature, resolve, reject) {\n    var _this = this;\n    // track active renewals\n    window.activeRenewals[requestSignature] = expectedState;\n    // initialize callbacks mapped array\n    if (!window.promiseMappedToRenewStates[expectedState]) {\n      window.promiseMappedToRenewStates[expectedState] = [];\n    }\n    // indexing on the current state, push the callback params to callbacks mapped\n    window.promiseMappedToRenewStates[expectedState].push({\n      resolve: resolve,\n      reject: reject\n    });\n    // Store the server response in the current window??\n    if (!window.callbackMappedToRenewStates[expectedState]) {\n      window.callbackMappedToRenewStates[expectedState] = function (response, error) {\n        // reset active renewals\n        delete window.activeRenewals[requestSignature];\n        // for all promiseMappedtoRenewStates for a given 'state' - call the reject/resolve with error/token respectively\n        for (var i = 0; i < window.promiseMappedToRenewStates[expectedState].length; ++i) {\n          try {\n            if (error) {\n              window.promiseMappedToRenewStates[expectedState][i].reject(error);\n            } else if (response) {\n              window.promiseMappedToRenewStates[expectedState][i].resolve(response);\n            } else {\n              _this.cacheStorage.resetTempCacheItems(expectedState);\n              throw AuthError.createUnexpectedError(\"Error and response are both null\");\n            }\n          } catch (e) {\n            _this.logger.warning(e);\n          }\n        }\n        // reset\n        delete window.promiseMappedToRenewStates[expectedState];\n        delete window.callbackMappedToRenewStates[expectedState];\n      };\n    }\n  };\n  // #endregion\n  // #region Logout\n  /**\n   * Use to log out the current user, and redirect the user to the postLogoutRedirectUri.\n   * Default behaviour is to redirect the user to `window.location.href`.\n   */\n  UserAgentApplication.prototype.logout = function (correlationId) {\n    this.logger.verbose(\"Logout has been called\");\n    this.logoutAsync(correlationId);\n  };\n  /**\n   * Async version of logout(). Use to log out the current user.\n   * @param correlationId Request correlationId\n   */\n  UserAgentApplication.prototype.logoutAsync = function (correlationId) {\n    return __awaiter(this, void 0, void 0, function () {\n      var requestCorrelationId, apiEvent, correlationIdParam, postLogoutQueryParam, urlNavigate, error_3;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            requestCorrelationId = correlationId || CryptoUtils.createNewGuid();\n            apiEvent = this.telemetryManager.createAndStartApiEvent(requestCorrelationId, API_EVENT_IDENTIFIER.Logout);\n            this.clearCache();\n            this.account = null;\n            _a.label = 1;\n          case 1:\n            _a.trys.push([1, 5,, 6]);\n            if (!!this.authorityInstance.hasCachedMetadata()) return [3 /*break*/, 3];\n            this.logger.verbose(\"No cached metadata for authority\");\n            return [4 /*yield*/, AuthorityFactory.saveMetadataFromNetwork(this.authorityInstance, this.telemetryManager, correlationId)];\n          case 2:\n            _a.sent();\n            return [3 /*break*/, 4];\n          case 3:\n            this.logger.verbose(\"Cached metadata found for authority\");\n            _a.label = 4;\n          case 4:\n            correlationIdParam = \"client-request-id=\" + requestCorrelationId;\n            postLogoutQueryParam = void 0;\n            if (this.getPostLogoutRedirectUri()) {\n              postLogoutQueryParam = \"&post_logout_redirect_uri=\" + encodeURIComponent(this.getPostLogoutRedirectUri());\n              this.logger.verbose(\"redirectUri found and set\");\n            } else {\n              postLogoutQueryParam = \"\";\n              this.logger.verbose(\"No redirectUri set for app. postLogoutQueryParam is empty\");\n            }\n            urlNavigate = void 0;\n            if (this.authorityInstance.EndSessionEndpoint) {\n              urlNavigate = this.authorityInstance.EndSessionEndpoint + \"?\" + correlationIdParam + postLogoutQueryParam;\n              this.logger.verbose(\"EndSessionEndpoint found and urlNavigate set\");\n              this.logger.verbosePii(\"urlNavigate set to: \" + this.authorityInstance.EndSessionEndpoint);\n            } else {\n              urlNavigate = this.authority + \"oauth2/v2.0/logout?\" + correlationIdParam + postLogoutQueryParam;\n              this.logger.verbose(\"No endpoint, urlNavigate set to default\");\n            }\n            this.telemetryManager.stopAndFlushApiEvent(requestCorrelationId, apiEvent, true);\n            this.logger.verbose(\"Navigating window to urlNavigate\");\n            this.navigateWindow(urlNavigate);\n            return [3 /*break*/, 6];\n          case 5:\n            error_3 = _a.sent();\n            this.telemetryManager.stopAndFlushApiEvent(requestCorrelationId, apiEvent, false, error_3.errorCode);\n            return [3 /*break*/, 6];\n          case 6:\n            return [2 /*return*/];\n        }\n      });\n    });\n  };\n  /**\n   * @hidden\n   * Clear all access tokens and ID tokens in the cache.\n   * @ignore\n   */\n  UserAgentApplication.prototype.clearCache = function () {\n    this.logger.verbose(\"Clearing cache\");\n    window.renewStates = [];\n    var tokenCacheItems = this.cacheStorage.getAllTokens(Constants.clientId, Constants.homeAccountIdentifier);\n    for (var i = 0; i < tokenCacheItems.length; i++) {\n      this.cacheStorage.removeItem(JSON.stringify(tokenCacheItems[i].key));\n    }\n    this.cacheStorage.resetCacheItems();\n    this.cacheStorage.clearMsalCookie();\n    this.logger.verbose(\"Cache cleared\");\n  };\n  /**\n   * @hidden\n   * Clear a given access token from the cache.\n   *\n   * @param accessToken\n   */\n  UserAgentApplication.prototype.clearCacheForScope = function (accessToken) {\n    this.logger.verbose(\"Clearing access token from cache\");\n    var accessTokenItems = this.cacheStorage.getAllAccessTokens(Constants.clientId, Constants.homeAccountIdentifier);\n    for (var i = 0; i < accessTokenItems.length; i++) {\n      var token = accessTokenItems[i];\n      if (token.value.accessToken === accessToken) {\n        this.cacheStorage.removeItem(JSON.stringify(token.key));\n        this.logger.verbosePii(\"Access token removed: \" + token.key);\n      }\n    }\n  };\n  // #endregion\n  // #region Response\n  /**\n   * @hidden\n   * @ignore\n   * Checks if the redirect response is received from the STS. In case of redirect, the url fragment has either id_token, access_token or error.\n   * @param {string} hash - Hash passed from redirect page.\n   * @returns {Boolean} - true if response contains id_token, access_token or error, false otherwise.\n   */\n  UserAgentApplication.prototype.isCallback = function (hash) {\n    this.logger.info(\"isCallback will be deprecated in favor of urlContainsHash in MSAL.js v2.0.\");\n    this.logger.verbose(\"isCallback has been called\");\n    return UrlUtils.urlContainsHash(hash);\n  };\n  /**\n   * @hidden\n   * Used to call the constructor callback with the token/error\n   * @param {string} [hash=window.location.hash] - Hash fragment of Url.\n   */\n  UserAgentApplication.prototype.processCallBack = function (hash, respStateInfo, parentCallback) {\n    this.logger.info(\"ProcessCallBack has been called. Processing callback from redirect response\");\n    // get the state info from the hash\n    var stateInfo = respStateInfo;\n    if (!stateInfo) {\n      this.logger.verbose(\"StateInfo is null, getting stateInfo from hash\");\n      stateInfo = this.getResponseState(hash);\n    }\n    var response;\n    var authErr;\n    // Save the token info from the hash\n    try {\n      response = this.saveTokenFromHash(hash, stateInfo);\n    } catch (err) {\n      authErr = err;\n    }\n    try {\n      // Clear the cookie in the hash\n      this.cacheStorage.clearMsalCookie(stateInfo.state);\n      var accountState = this.getAccountState(stateInfo.state);\n      if (response) {\n        if (stateInfo.requestType === Constants.renewToken || response.accessToken) {\n          if (window.parent !== window) {\n            this.logger.verbose(\"Window is in iframe, acquiring token silently\");\n          } else {\n            this.logger.verbose(\"Acquiring token interactive in progress\");\n          }\n          this.logger.verbose(\"Response tokenType set to \" + ServerHashParamKeys.ACCESS_TOKEN);\n          response.tokenType = ServerHashParamKeys.ACCESS_TOKEN;\n        } else if (stateInfo.requestType === Constants.login) {\n          this.logger.verbose(\"Response tokenType set to \" + ServerHashParamKeys.ID_TOKEN);\n          response.tokenType = ServerHashParamKeys.ID_TOKEN;\n        }\n        if (!parentCallback) {\n          this.logger.verbose(\"Setting redirectResponse\");\n          this.redirectResponse = response;\n          return;\n        }\n      } else if (!parentCallback) {\n        this.logger.verbose(\"Response is null, setting redirectResponse with state\");\n        this.redirectResponse = buildResponseStateOnly(accountState);\n        this.redirectError = authErr;\n        this.cacheStorage.resetTempCacheItems(stateInfo.state);\n        return;\n      }\n      this.logger.verbose(\"Calling callback provided to processCallback\");\n      parentCallback(response, authErr);\n    } catch (err) {\n      this.logger.error(\"Error occurred in token received callback function: \" + err);\n      throw ClientAuthError.createErrorInCallbackFunction(err.toString());\n    }\n  };\n  /**\n   * @hidden\n   * This method must be called for processing the response received from the STS if using popups or iframes. It extracts the hash, processes the token or error\n   * information and saves it in the cache. It then resolves the promises with the result.\n   * @param {string} [hash=window.location.hash] - Hash fragment of Url.\n   */\n  UserAgentApplication.prototype.handleAuthenticationResponse = function (hash) {\n    this.logger.verbose(\"HandleAuthenticationResponse has been called\");\n    // retrieve the hash\n    var locationHash = hash || window.location.hash;\n    // if (window.parent !== window), by using self, window.parent becomes equal to window in getResponseState method specifically\n    var stateInfo = this.getResponseState(locationHash);\n    this.logger.verbose(\"Obtained state from response\");\n    var tokenResponseCallback = window.callbackMappedToRenewStates[stateInfo.state];\n    this.processCallBack(locationHash, stateInfo, tokenResponseCallback);\n  };\n  /**\n   * @hidden\n   * This method must be called for processing the response received from the STS when using redirect flows. It extracts the hash, processes the token or error\n   * information and saves it in the cache. The result can then be accessed by user registered callbacks.\n   * @param {string} [hash=window.location.hash] - Hash fragment of Url.\n   */\n  UserAgentApplication.prototype.handleRedirectAuthenticationResponse = function (hash) {\n    this.logger.info(\"Returned from redirect url\");\n    this.logger.verbose(\"HandleRedirectAuthenticationResponse has been called\");\n    // clear hash from window\n    WindowUtils.clearUrlFragment(window);\n    this.logger.verbose(\"Window.location.hash cleared\");\n    // if (window.parent !== window), by using self, window.parent becomes equal to window in getResponseState method specifically\n    var stateInfo = this.getResponseState(hash);\n    // if set to navigate to loginRequest page post login\n    if (this.config.auth.navigateToLoginRequestUrl && window.parent === window) {\n      this.logger.verbose(\"Window.parent is equal to window, not in popup or iframe. Navigation to login request url after login turned on\");\n      var loginRequestUrl = this.cacheStorage.getItem(AuthCache.generateTemporaryCacheKey(TemporaryCacheKeys.LOGIN_REQUEST, stateInfo.state), this.inCookie);\n      // Redirect to home page if login request url is null (real null or the string null)\n      if (!loginRequestUrl || loginRequestUrl === \"null\") {\n        this.logger.error(\"Unable to get valid login request url from cache, redirecting to home page\");\n        window.location.assign(\"/\");\n        return;\n      } else {\n        this.logger.verbose(\"Valid login request url obtained from cache\");\n        var currentUrl = UrlUtils.removeHashFromUrl(window.location.href);\n        var finalRedirectUrl = UrlUtils.removeHashFromUrl(loginRequestUrl);\n        if (currentUrl !== finalRedirectUrl) {\n          this.logger.verbose(\"Current url is not login request url, navigating\");\n          this.logger.verbosePii(\"CurrentUrl: \" + currentUrl + \", finalRedirectUrl: \" + finalRedirectUrl);\n          window.location.assign(\"\" + finalRedirectUrl + hash);\n          return;\n        } else {\n          this.logger.verbose(\"Current url matches login request url\");\n          var loginRequestUrlComponents = UrlUtils.GetUrlComponents(loginRequestUrl);\n          if (loginRequestUrlComponents.Hash) {\n            this.logger.verbose(\"Login request url contains hash, resetting non-msal hash\");\n            window.location.hash = loginRequestUrlComponents.Hash;\n          }\n        }\n      }\n    } else if (!this.config.auth.navigateToLoginRequestUrl) {\n      this.logger.verbose(\"Default navigation to start page after login turned off\");\n    }\n    this.processCallBack(hash, stateInfo, null);\n  };\n  /**\n   * @hidden\n   * Creates a stateInfo object from the URL fragment and returns it.\n   * @param {string} hash  -  Hash passed from redirect page\n   * @returns {TokenResponse} an object created from the redirect response from AAD comprising of the keys - parameters, requestType, stateMatch, stateResponse and valid.\n   * @ignore\n   */\n  UserAgentApplication.prototype.getResponseState = function (hash) {\n    this.logger.verbose(\"GetResponseState has been called\");\n    var parameters = UrlUtils.deserializeHash(hash);\n    var stateResponse;\n    if (!parameters) {\n      throw AuthError.createUnexpectedError(\"Hash was not parsed correctly.\");\n    }\n    if (parameters.hasOwnProperty(ServerHashParamKeys.STATE)) {\n      this.logger.verbose(\"Hash contains state. Creating stateInfo object\");\n      var parsedState = RequestUtils.parseLibraryState(parameters[\"state\"]);\n      stateResponse = {\n        requestType: Constants.unknown,\n        state: parameters[\"state\"],\n        timestamp: parsedState.ts,\n        method: parsedState.method,\n        stateMatch: false\n      };\n    } else {\n      throw AuthError.createUnexpectedError(\"Hash does not contain state.\");\n    }\n    /*\n     * async calls can fire iframe and login request at the same time if developer does not use the API as expected\n     * incoming callback needs to be looked up to find the request type\n     */\n    // loginRedirect\n    if (stateResponse.state === this.cacheStorage.getItem(AuthCache.generateTemporaryCacheKey(TemporaryCacheKeys.STATE_LOGIN, stateResponse.state), this.inCookie) || stateResponse.state === this.silentAuthenticationState) {\n      this.logger.verbose(\"State matches cached state, setting requestType to login\");\n      stateResponse.requestType = Constants.login;\n      stateResponse.stateMatch = true;\n      return stateResponse;\n    }\n    // acquireTokenRedirect\n    else if (stateResponse.state === this.cacheStorage.getItem(AuthCache.generateTemporaryCacheKey(TemporaryCacheKeys.STATE_ACQ_TOKEN, stateResponse.state), this.inCookie)) {\n      this.logger.verbose(\"State matches cached state, setting requestType to renewToken\");\n      stateResponse.requestType = Constants.renewToken;\n      stateResponse.stateMatch = true;\n      return stateResponse;\n    }\n    // external api requests may have many renewtoken requests for different resource\n    if (!stateResponse.stateMatch) {\n      this.logger.verbose(\"State does not match cached state, setting requestType to type from window\");\n      stateResponse.requestType = window.requestType;\n      var statesInParentContext = window.renewStates;\n      for (var i = 0; i < statesInParentContext.length; i++) {\n        if (statesInParentContext[i] === stateResponse.state) {\n          this.logger.verbose(\"Matching state found for request\");\n          stateResponse.stateMatch = true;\n          break;\n        }\n      }\n      if (!stateResponse.stateMatch) {\n        this.logger.verbose(\"Matching state not found for request\");\n      }\n    }\n    return stateResponse;\n  };\n  // #endregion\n  // #region Token Processing (Extract to TokenProcessing.ts)\n  /**\n   * @hidden\n   * Used to get token for the specified set of scopes from the cache\n   * @param {@link ServerRequestParameters} - Request sent to the STS to obtain an id_token/access_token\n   * @param {Account} account - Account for which the scopes were requested\n   */\n  UserAgentApplication.prototype.getCachedToken = function (serverAuthenticationRequest, account) {\n    this.logger.verbose(\"GetCachedToken has been called\");\n    var scopes = serverAuthenticationRequest.scopes;\n    /**\n     * Id Token should be returned in every acquireTokenSilent call. The only exception is a response_type = token\n     * request when a valid ID Token is not present in the cache.\n     */\n    var idToken = this.getCachedIdToken(serverAuthenticationRequest, account);\n    var authResponse = this.getCachedAccessToken(serverAuthenticationRequest, account, scopes);\n    var accountState = this.getAccountState(serverAuthenticationRequest.state);\n    return ResponseUtils.buildAuthResponse(idToken, authResponse, serverAuthenticationRequest, account, scopes, accountState);\n  };\n  /**\n   * @hidden\n   *\n   * Uses passed in authority to further filter an array of tokenCacheItems until only the token being searched for remains, then returns that tokenCacheItem.\n   * This method will throw if authority filtering still yields multiple matching tokens and will return null if not tokens match the authority passed in.\n   *\n   * @param authority\n   * @param tokenCacheItems\n   * @param request\n   * @param requestScopes\n   * @param tokenType\n   */\n  UserAgentApplication.prototype.getTokenCacheItemByAuthority = function (authority, tokenCacheItems, requestScopes, tokenType) {\n    var _this = this;\n    var filteredAuthorityItems;\n    if (UrlUtils.isCommonAuthority(authority) || UrlUtils.isOrganizationsAuthority(authority) || UrlUtils.isConsumersAuthority(authority)) {\n      filteredAuthorityItems = AuthCacheUtils.filterTokenCacheItemsByDomain(tokenCacheItems, UrlUtils.GetUrlComponents(authority).HostNameAndPort);\n    } else {\n      filteredAuthorityItems = AuthCacheUtils.filterTokenCacheItemsByAuthority(tokenCacheItems, authority);\n    }\n    if (filteredAuthorityItems.length === 1) {\n      return filteredAuthorityItems[0];\n    } else if (filteredAuthorityItems.length > 1) {\n      this.logger.warning(\"Multiple matching tokens found. Cleaning cache and requesting a new token.\");\n      filteredAuthorityItems.forEach(function (accessTokenCacheItem) {\n        _this.cacheStorage.removeItem(JSON.stringify(accessTokenCacheItem.key));\n      });\n      return null;\n    } else {\n      this.logger.verbose(\"No matching tokens of type \" + tokenType + \" found\");\n      return null;\n    }\n  };\n  /**\n   *\n   * @hidden\n   *\n   * Searches the token cache for an ID Token that matches the request parameter and returns it as an IdToken object.\n   *\n   * @param serverAuthenticationRequest\n   * @param account\n   */\n  UserAgentApplication.prototype.getCachedIdToken = function (serverAuthenticationRequest, account) {\n    this.logger.verbose(\"Getting all cached tokens of type ID Token\");\n    var idTokenCacheItems = this.cacheStorage.getAllIdTokens(this.clientId, account ? account.homeAccountIdentifier : null);\n    var matchAuthority = serverAuthenticationRequest.authority || this.authority;\n    var idTokenCacheItem = this.getTokenCacheItemByAuthority(matchAuthority, idTokenCacheItems, null, ServerHashParamKeys.ID_TOKEN);\n    if (idTokenCacheItem) {\n      this.logger.verbose(\"Evaluating ID token found\");\n      var idTokenIsStillValid = this.evaluateTokenExpiration(idTokenCacheItem);\n      if (idTokenIsStillValid) {\n        this.logger.verbose(\"ID token expiration is within offset, using ID token found in cache\");\n        var idTokenValue = idTokenCacheItem.value;\n        if (idTokenValue) {\n          this.logger.verbose(\"ID Token found in cache is valid and unexpired\");\n        } else {\n          this.logger.verbose(\"ID Token found in cache is invalid\");\n        }\n        return idTokenValue ? new IdToken(idTokenValue.idToken) : null;\n      } else {\n        this.logger.verbose(\"Cached ID token is expired, removing from cache\");\n        this.cacheStorage.removeItem(JSON.stringify(idTokenCacheItem.key));\n        return null;\n      }\n    } else {\n      this.logger.verbose(\"No tokens found\");\n      return null;\n    }\n  };\n  /**\n   *\n   * @hidden\n   *\n   * Searches the token cache for an access token that matches the request parameters and returns it as an AuthResponse.\n   *\n   * @param serverAuthenticationRequest\n   * @param account\n   * @param scopes\n   */\n  UserAgentApplication.prototype.getCachedAccessToken = function (serverAuthenticationRequest, account, scopes) {\n    this.logger.verbose(\"Getting all cached tokens of type Access Token\");\n    var tokenCacheItems = this.cacheStorage.getAllAccessTokens(this.clientId, account ? account.homeAccountIdentifier : null);\n    var scopeFilteredTokenCacheItems = AuthCacheUtils.filterTokenCacheItemsByScope(tokenCacheItems, scopes);\n    var matchAuthority = serverAuthenticationRequest.authority || this.authority;\n    // serverAuthenticationRequest.authority can only be common or organizations if not null\n    var accessTokenCacheItem = this.getTokenCacheItemByAuthority(matchAuthority, scopeFilteredTokenCacheItems, scopes, ServerHashParamKeys.ACCESS_TOKEN);\n    if (!accessTokenCacheItem) {\n      this.logger.verbose(\"No matching token found when filtering by scope and authority\");\n      return null;\n    } else {\n      serverAuthenticationRequest.authorityInstance = AuthorityFactory.CreateInstance(accessTokenCacheItem.key.authority, this.config.auth.validateAuthority);\n      this.logger.verbose(\"Evaluating access token found\");\n      var tokenIsStillValid = this.evaluateTokenExpiration(accessTokenCacheItem);\n      // The response value will stay null if token retrieved from the cache is expired, otherwise it will be populated with said token's data\n      if (tokenIsStillValid) {\n        this.logger.verbose(\"Access token expiration is within offset, using access token found in cache\");\n        var responseAccount = account || this.getAccount();\n        if (!responseAccount) {\n          throw AuthError.createUnexpectedError(\"Account should not be null here.\");\n        }\n        var aState = this.getAccountState(serverAuthenticationRequest.state);\n        var response = {\n          uniqueId: \"\",\n          tenantId: \"\",\n          tokenType: ServerHashParamKeys.ACCESS_TOKEN,\n          idToken: null,\n          idTokenClaims: null,\n          accessToken: accessTokenCacheItem.value.accessToken,\n          scopes: accessTokenCacheItem.key.scopes.split(\" \"),\n          expiresOn: new Date(Number(accessTokenCacheItem.value.expiresIn) * 1000),\n          account: responseAccount,\n          accountState: aState,\n          fromCache: true\n        };\n        return response;\n      } else {\n        this.logger.verbose(\"Access token expired, removing from cache\");\n        this.cacheStorage.removeItem(JSON.stringify(accessTokenCacheItem.key));\n        return null;\n      }\n    }\n  };\n  /**\n   * Returns true if the token passed in is within the acceptable expiration time offset, false if it is expired.\n   * @param tokenCacheItem\n   * @param serverAuthenticationRequest\n   */\n  UserAgentApplication.prototype.evaluateTokenExpiration = function (tokenCacheItem) {\n    var expiration = Number(tokenCacheItem.value.expiresIn);\n    return TokenUtils.validateExpirationIsWithinOffset(expiration, this.config.system.tokenRenewalOffsetSeconds);\n  };\n  /**\n   * @hidden\n   * Check if ADAL id_token exists and return if exists.\n   *\n   */\n  UserAgentApplication.prototype.extractADALIdToken = function () {\n    this.logger.verbose(\"ExtractADALIdToken has been called\");\n    var adalIdToken = this.cacheStorage.getItem(Constants.adalIdToken);\n    return !StringUtils.isEmpty(adalIdToken) ? TokenUtils.extractIdToken(adalIdToken) : null;\n  };\n  /**\n   * @hidden\n   * Acquires access token using a hidden iframe.\n   * @ignore\n   */\n  UserAgentApplication.prototype.renewToken = function (requestSignature, resolve, reject, account, serverAuthenticationRequest) {\n    this.logger.verbose(\"RenewToken has been called\");\n    this.logger.verbosePii(\"RenewToken scope and authority: \" + requestSignature);\n    var frameName = WindowUtils.generateFrameName(FramePrefix.TOKEN_FRAME, requestSignature);\n    WindowUtils.addHiddenIFrame(frameName, this.logger);\n    this.updateCacheEntries(serverAuthenticationRequest, account, false);\n    this.logger.verbosePii(\"RenewToken expected state: \" + serverAuthenticationRequest.state);\n    // Build urlNavigate with \"prompt=none\" and navigate to URL in hidden iFrame\n    var urlNavigate = UrlUtils.urlRemoveQueryStringParameter(UrlUtils.createNavigateUrl(serverAuthenticationRequest), Constants.prompt) + Constants.prompt_none + Constants.response_mode_fragment;\n    window.renewStates.push(serverAuthenticationRequest.state);\n    window.requestType = Constants.renewToken;\n    this.logger.verbose(\"Set window.renewState and requestType\");\n    this.registerCallback(serverAuthenticationRequest.state, requestSignature, resolve, reject);\n    this.logger.infoPii(\"Navigate to: \" + urlNavigate);\n    this.loadIframeTimeout(urlNavigate, frameName, requestSignature).catch(function (error) {\n      return reject(error);\n    });\n  };\n  /**\n   * @hidden\n   * Renews idtoken for app's own backend when clientId is passed as a single scope in the scopes array.\n   * @ignore\n   */\n  UserAgentApplication.prototype.renewIdToken = function (requestSignature, resolve, reject, account, serverAuthenticationRequest) {\n    this.logger.info(\"RenewIdToken has been called\");\n    var frameName = WindowUtils.generateFrameName(FramePrefix.ID_TOKEN_FRAME, requestSignature);\n    WindowUtils.addHiddenIFrame(frameName, this.logger);\n    this.updateCacheEntries(serverAuthenticationRequest, account, false);\n    this.logger.verbose(\"RenewIdToken expected state: \" + serverAuthenticationRequest.state);\n    // Build urlNavigate with \"prompt=none\" and navigate to URL in hidden iFrame\n    var urlNavigate = UrlUtils.urlRemoveQueryStringParameter(UrlUtils.createNavigateUrl(serverAuthenticationRequest), Constants.prompt) + Constants.prompt_none + Constants.response_mode_fragment;\n    if (this.silentLogin) {\n      this.logger.verbose(\"Silent login is true, set silentAuthenticationState\");\n      window.requestType = Constants.login;\n      this.silentAuthenticationState = serverAuthenticationRequest.state;\n    } else {\n      this.logger.verbose(\"Not silent login, set window.renewState and requestType\");\n      window.requestType = Constants.renewToken;\n      window.renewStates.push(serverAuthenticationRequest.state);\n    }\n    // note: scope here is clientId\n    this.registerCallback(serverAuthenticationRequest.state, requestSignature, resolve, reject);\n    this.logger.infoPii(\"Navigate to:\\\" \" + urlNavigate);\n    this.loadIframeTimeout(urlNavigate, frameName, requestSignature).catch(function (error) {\n      return reject(error);\n    });\n  };\n  /**\n   * @hidden\n   *\n   * This method builds an Access Token Cache item and saves it to the cache, returning the original\n   * AuthResponse augmented with a parsed expiresOn attribute.\n   *\n   * @param response The AuthResponse object that contains the token to be saved\n   * @param authority The authority under which the ID token will be cached\n   * @param scopes The scopes to be added to the cache item key (undefined for ID token cache items)\n   * @param clientInfo Client Info object that is used to generate the homeAccountIdentifier\n   * @param expiration Token expiration timestamp\n   */\n  UserAgentApplication.prototype.saveToken = function (response, authority, scopes, clientInfo, expiration) {\n    var accessTokenKey = new AccessTokenKey(authority, this.clientId, scopes, clientInfo.uid, clientInfo.utid);\n    var accessTokenValue = new AccessTokenValue(response.accessToken, response.idToken.rawIdToken, expiration.toString(), clientInfo.encodeClientInfo());\n    this.cacheStorage.setItem(JSON.stringify(accessTokenKey), JSON.stringify(accessTokenValue));\n    if (expiration) {\n      this.logger.verbose(\"New expiration set for token\");\n      response.expiresOn = new Date(expiration * 1000);\n    } else {\n      this.logger.error(\"Could not parse expiresIn parameter for access token\");\n    }\n    return response;\n  };\n  /**\n   * @hidden\n   *\n   * This method sets up the elements of an ID Token cache item and calls saveToken to save it in\n   * Access Token Cache item format for the client application to use.\n   *\n   * @param response The AuthResponse object that will be used to build the cache item\n   * @param authority The authority under which the ID token will be cached\n   * @param parameters The response's Hash Params, which contain the ID token returned from the server\n   * @param clientInfo Client Info object that is used to generate the homeAccountIdentifier\n   * @param idTokenObj ID Token object from which the ID token's expiration is extracted\n   */\n  /* tslint:disable:no-string-literal */\n  UserAgentApplication.prototype.saveIdToken = function (response, authority, parameters, clientInfo, idTokenObj) {\n    this.logger.verbose(\"SaveIdToken has been called\");\n    var idTokenResponse = __assign({}, response);\n    // Scopes are undefined so they don't show up in ID token cache key\n    var scopes;\n    idTokenResponse.scopes = Constants.oidcScopes;\n    idTokenResponse.accessToken = parameters[ServerHashParamKeys.ID_TOKEN];\n    var expiration = Number(idTokenObj.expiration);\n    // Set ID Token item in cache\n    this.logger.verbose(\"Saving ID token to cache\");\n    return this.saveToken(idTokenResponse, authority, scopes, clientInfo, expiration);\n  };\n  /**\n   * @hidden\n   *\n   * This method sets up the elements of an Access Token cache item and calls saveToken to save it to the cache\n   *\n   * @param response The AuthResponse object that will be used to build the cache item\n   * @param authority The authority under which the access token will be cached\n   * @param parameters The response's Hash Params, which contain the access token returned from the server\n   * @param clientInfo Client Info object that is used to generate the homeAccountIdentifier\n   */\n  /* tslint:disable:no-string-literal */\n  UserAgentApplication.prototype.saveAccessToken = function (response, authority, parameters, clientInfo) {\n    this.logger.verbose(\"SaveAccessToken has been called\");\n    var accessTokenResponse = __assign({}, response);\n    // read the scopes\n    var scope = parameters[ServerHashParamKeys.SCOPE];\n    var consentedScopes = scope.split(\" \");\n    // retrieve all access tokens from the cache, remove the dup scopes\n    var accessTokenCacheItems = this.cacheStorage.getAllAccessTokens(this.clientId, authority);\n    this.logger.verbose(\"Retrieving all access tokens from cache and removing duplicates\");\n    for (var i = 0; i < accessTokenCacheItems.length; i++) {\n      var accessTokenCacheItem = accessTokenCacheItems[i];\n      if (accessTokenCacheItem.key.homeAccountIdentifier === response.account.homeAccountIdentifier) {\n        var cachedScopes = accessTokenCacheItem.key.scopes.split(\" \");\n        if (ScopeSet.isIntersectingScopes(cachedScopes, consentedScopes)) {\n          this.cacheStorage.removeItem(JSON.stringify(accessTokenCacheItem.key));\n        }\n      }\n    }\n    accessTokenResponse.accessToken = parameters[ServerHashParamKeys.ACCESS_TOKEN];\n    accessTokenResponse.scopes = consentedScopes;\n    var expiresIn = TimeUtils.parseExpiresIn(parameters[ServerHashParamKeys.EXPIRES_IN]);\n    var parsedState = RequestUtils.parseLibraryState(parameters[ServerHashParamKeys.STATE]);\n    var expiration = parsedState.ts + expiresIn;\n    this.logger.verbose(\"Saving access token to cache\");\n    return this.saveToken(accessTokenResponse, authority, scope, clientInfo, expiration);\n  };\n  /**\n   * @hidden\n   * Saves token or error received in the response from AAD in the cache. In case of id_token, it also creates the account object.\n   * @ignore\n   */\n  UserAgentApplication.prototype.saveTokenFromHash = function (hash, stateInfo) {\n    this.logger.verbose(\"SaveTokenFromHash has been called\");\n    this.logger.info(\"State status: \" + stateInfo.stateMatch + \"; Request type: \" + stateInfo.requestType);\n    var response = {\n      uniqueId: \"\",\n      tenantId: \"\",\n      tokenType: \"\",\n      idToken: null,\n      idTokenClaims: null,\n      accessToken: null,\n      scopes: [],\n      expiresOn: null,\n      account: null,\n      accountState: \"\",\n      fromCache: false\n    };\n    var error;\n    var hashParams = UrlUtils.deserializeHash(hash);\n    var authorityKey = \"\";\n    var acquireTokenAccountKey = \"\";\n    var idTokenObj = null;\n    // If server returns an error\n    if (hashParams.hasOwnProperty(ServerHashParamKeys.ERROR_DESCRIPTION) || hashParams.hasOwnProperty(ServerHashParamKeys.ERROR)) {\n      this.logger.verbose(\"Server returned an error\");\n      this.logger.infoPii(\"Error : \" + hashParams[ServerHashParamKeys.ERROR] + \"; Error description: \" + hashParams[ServerHashParamKeys.ERROR_DESCRIPTION]);\n      this.cacheStorage.setItem(ErrorCacheKeys.ERROR, hashParams[ServerHashParamKeys.ERROR]);\n      this.cacheStorage.setItem(ErrorCacheKeys.ERROR_DESC, hashParams[ServerHashParamKeys.ERROR_DESCRIPTION]);\n      // login\n      if (stateInfo.requestType === Constants.login) {\n        this.logger.verbose(\"RequestType is login, caching login error, generating authorityKey\");\n        this.cacheStorage.setItem(ErrorCacheKeys.LOGIN_ERROR, hashParams[ServerHashParamKeys.ERROR_DESCRIPTION] + \":\" + hashParams[ServerHashParamKeys.ERROR]);\n        authorityKey = AuthCache.generateAuthorityKey(stateInfo.state);\n      }\n      // acquireToken\n      if (stateInfo.requestType === Constants.renewToken) {\n        this.logger.verbose(\"RequestType is renewToken, generating acquireTokenAccountKey\");\n        authorityKey = AuthCache.generateAuthorityKey(stateInfo.state);\n        var account = this.getAccount();\n        var accountId = void 0;\n        if (account && !StringUtils.isEmpty(account.homeAccountIdentifier)) {\n          accountId = account.homeAccountIdentifier;\n          this.logger.verbose(\"AccountId is set\");\n        } else {\n          accountId = Constants.no_account;\n          this.logger.verbose(\"AccountId is set as no_account\");\n        }\n        acquireTokenAccountKey = AuthCache.generateAcquireTokenAccountKey(accountId, stateInfo.state);\n      }\n      var hashErr = hashParams[ServerHashParamKeys.ERROR];\n      var hashErrDesc = hashParams[ServerHashParamKeys.ERROR_DESCRIPTION];\n      if (InteractionRequiredAuthError.isInteractionRequiredError(hashErr) || InteractionRequiredAuthError.isInteractionRequiredError(hashErrDesc)) {\n        error = new InteractionRequiredAuthError(hashParams[ServerHashParamKeys.ERROR], hashParams[ServerHashParamKeys.ERROR_DESCRIPTION]);\n      } else {\n        error = new ServerError(hashParams[ServerHashParamKeys.ERROR], hashParams[ServerHashParamKeys.ERROR_DESCRIPTION]);\n      }\n    }\n    // If the server returns \"Success\"\n    else {\n      this.logger.verbose(\"Server returns success\");\n      // Verify the state from redirect and record tokens to storage if exists\n      if (stateInfo.stateMatch) {\n        this.logger.info(\"State is right\");\n        if (hashParams.hasOwnProperty(ServerHashParamKeys.SESSION_STATE)) {\n          this.logger.verbose(\"Fragment has session state, caching\");\n          this.cacheStorage.setItem(AuthCache.generateTemporaryCacheKey(TemporaryCacheKeys.SESSION_STATE, stateInfo.state), hashParams[ServerHashParamKeys.SESSION_STATE]);\n        }\n        response.accountState = this.getAccountState(stateInfo.state);\n        var clientInfo = void 0;\n        // Process access_token\n        if (hashParams.hasOwnProperty(ServerHashParamKeys.ACCESS_TOKEN)) {\n          this.logger.info(\"Fragment has access token\");\n          response.accessToken = hashParams[ServerHashParamKeys.ACCESS_TOKEN];\n          if (hashParams.hasOwnProperty(ServerHashParamKeys.SCOPE)) {\n            response.scopes = hashParams[ServerHashParamKeys.SCOPE].split(\" \");\n          }\n          // retrieve the id_token from response if present\n          if (hashParams.hasOwnProperty(ServerHashParamKeys.ID_TOKEN)) {\n            this.logger.verbose(\"Fragment has id_token\");\n            idTokenObj = new IdToken(hashParams[ServerHashParamKeys.ID_TOKEN]);\n          } else {\n            this.logger.verbose(\"No idToken on fragment, getting idToken from cache\");\n            idTokenObj = new IdToken(this.cacheStorage.getItem(PersistentCacheKeys.IDTOKEN));\n          }\n          response = ResponseUtils.setResponseIdToken(response, idTokenObj);\n          // set authority\n          var authority = this.populateAuthority(stateInfo.state, this.inCookie, this.cacheStorage, idTokenObj);\n          this.logger.verbose(\"Got authority from cache\");\n          // retrieve client_info - if it is not found, generate the uid and utid from idToken\n          if (hashParams.hasOwnProperty(ServerHashParamKeys.CLIENT_INFO)) {\n            this.logger.verbose(\"Fragment has clientInfo\");\n            clientInfo = new ClientInfo(hashParams[ServerHashParamKeys.CLIENT_INFO], authority);\n          } else if (this.authorityInstance.AuthorityType === AuthorityType.Adfs) {\n            clientInfo = ClientInfo.createClientInfoFromIdToken(idTokenObj, authority);\n          } else {\n            this.logger.warning(\"ClientInfo not received in the response from AAD\");\n          }\n          response.account = Account.createAccount(idTokenObj, clientInfo);\n          this.logger.verbose(\"Account object created from response\");\n          var accountKey = void 0;\n          if (response.account && !StringUtils.isEmpty(response.account.homeAccountIdentifier)) {\n            this.logger.verbose(\"AccountKey set\");\n            accountKey = response.account.homeAccountIdentifier;\n          } else {\n            this.logger.verbose(\"AccountKey set as no_account\");\n            accountKey = Constants.no_account;\n          }\n          acquireTokenAccountKey = AuthCache.generateAcquireTokenAccountKey(accountKey, stateInfo.state);\n          var acquireTokenAccountKey_noaccount = AuthCache.generateAcquireTokenAccountKey(Constants.no_account, stateInfo.state);\n          this.logger.verbose(\"AcquireTokenAccountKey generated\");\n          var cachedAccount = this.cacheStorage.getItem(acquireTokenAccountKey);\n          var acquireTokenAccount = void 0;\n          // Check with the account in the Cache\n          if (!StringUtils.isEmpty(cachedAccount)) {\n            acquireTokenAccount = JSON.parse(cachedAccount);\n            this.logger.verbose(\"AcquireToken request account retrieved from cache\");\n            if (response.account && acquireTokenAccount && Account.compareAccounts(response.account, acquireTokenAccount)) {\n              response = this.saveAccessToken(response, authority, hashParams, clientInfo);\n              this.logger.info(\"The user object received in the response is the same as the one passed in the acquireToken request\");\n            } else {\n              this.logger.warning(\"The account object created from the response is not the same as the one passed in the acquireToken request\");\n            }\n          } else if (!StringUtils.isEmpty(this.cacheStorage.getItem(acquireTokenAccountKey_noaccount))) {\n            this.logger.verbose(\"No acquireToken account retrieved from cache\");\n            response = this.saveAccessToken(response, authority, hashParams, clientInfo);\n          }\n        }\n        // Process id_token\n        if (hashParams.hasOwnProperty(ServerHashParamKeys.ID_TOKEN)) {\n          this.logger.info(\"Fragment has idToken\");\n          // set the idToken\n          idTokenObj = new IdToken(hashParams[ServerHashParamKeys.ID_TOKEN]);\n          // set authority\n          var authority = this.populateAuthority(stateInfo.state, this.inCookie, this.cacheStorage, idTokenObj);\n          response = ResponseUtils.setResponseIdToken(response, idTokenObj);\n          if (hashParams.hasOwnProperty(ServerHashParamKeys.CLIENT_INFO)) {\n            this.logger.verbose(\"Fragment has clientInfo\");\n            clientInfo = new ClientInfo(hashParams[ServerHashParamKeys.CLIENT_INFO], authority);\n          } else if (this.authorityInstance.AuthorityType === AuthorityType.Adfs) {\n            clientInfo = ClientInfo.createClientInfoFromIdToken(idTokenObj, authority);\n          } else {\n            this.logger.warning(\"ClientInfo not received in the response from AAD\");\n          }\n          this.account = Account.createAccount(idTokenObj, clientInfo);\n          response.account = this.account;\n          this.logger.verbose(\"Account object created from response\");\n          if (idTokenObj && idTokenObj.nonce) {\n            this.logger.verbose(\"IdToken has nonce\");\n            // check nonce integrity if idToken has nonce - throw an error if not matched\n            var cachedNonce = this.cacheStorage.getItem(AuthCache.generateTemporaryCacheKey(TemporaryCacheKeys.NONCE_IDTOKEN, stateInfo.state), this.inCookie);\n            if (idTokenObj.nonce !== cachedNonce) {\n              this.account = null;\n              this.cacheStorage.setItem(ErrorCacheKeys.LOGIN_ERROR, \"Nonce Mismatch. Expected Nonce: \" + cachedNonce + \",\" + \"Actual Nonce: \" + idTokenObj.nonce);\n              this.logger.error(\"Nonce Mismatch. Expected Nonce: \" + cachedNonce + \", Actual Nonce: \" + idTokenObj.nonce);\n              error = ClientAuthError.createNonceMismatchError(cachedNonce, idTokenObj.nonce);\n            }\n            // Save the token\n            else {\n              this.logger.verbose(\"Nonce matches, saving idToken to cache\");\n              this.cacheStorage.setItem(PersistentCacheKeys.IDTOKEN, hashParams[ServerHashParamKeys.ID_TOKEN], this.inCookie);\n              this.cacheStorage.setItem(PersistentCacheKeys.CLIENT_INFO, clientInfo.encodeClientInfo(), this.inCookie);\n              // Save idToken as access token item for app itself\n              this.saveIdToken(response, authority, hashParams, clientInfo, idTokenObj);\n            }\n          } else {\n            this.logger.verbose(\"No idToken or no nonce. Cache key for Authority set as state\");\n            authorityKey = stateInfo.state;\n            acquireTokenAccountKey = stateInfo.state;\n            this.logger.error(\"Invalid id_token received in the response\");\n            error = ClientAuthError.createInvalidIdTokenError(idTokenObj);\n            this.cacheStorage.setItem(ErrorCacheKeys.ERROR, error.errorCode);\n            this.cacheStorage.setItem(ErrorCacheKeys.ERROR_DESC, error.errorMessage);\n          }\n        }\n      }\n      // State mismatch - unexpected/invalid state\n      else {\n        this.logger.verbose(\"State mismatch\");\n        authorityKey = stateInfo.state;\n        acquireTokenAccountKey = stateInfo.state;\n        var expectedState = this.cacheStorage.getItem(AuthCache.generateTemporaryCacheKey(TemporaryCacheKeys.STATE_LOGIN, stateInfo.state), this.inCookie);\n        this.logger.error(\"State Mismatch. Expected State: \" + expectedState + \", Actual State: \" + stateInfo.state);\n        error = ClientAuthError.createInvalidStateError(stateInfo.state, expectedState);\n        this.cacheStorage.setItem(ErrorCacheKeys.ERROR, error.errorCode);\n        this.cacheStorage.setItem(ErrorCacheKeys.ERROR_DESC, error.errorMessage);\n      }\n    }\n    // Set status to completed\n    this.cacheStorage.removeItem(AuthCache.generateTemporaryCacheKey(TemporaryCacheKeys.RENEW_STATUS, stateInfo.state));\n    this.cacheStorage.resetTempCacheItems(stateInfo.state);\n    this.logger.verbose(\"Status set to complete, temporary cache cleared\");\n    // this is required if navigateToLoginRequestUrl=false\n    if (this.inCookie) {\n      this.logger.verbose(\"InCookie is true, setting authorityKey in cookie\");\n      this.cacheStorage.setItemCookie(authorityKey, \"\", -1);\n      this.cacheStorage.clearMsalCookie(stateInfo.state);\n    }\n    if (error) {\n      // Error case, set status to cancelled\n      throw error;\n    }\n    if (!response) {\n      throw AuthError.createUnexpectedError(\"Response is null\");\n    }\n    return response;\n  };\n  /**\n   * Set Authority when saving Token from the hash\n   * @param state\n   * @param inCookie\n   * @param cacheStorage\n   * @param idTokenObj\n   * @param response\n   */\n  UserAgentApplication.prototype.populateAuthority = function (state, inCookie, cacheStorage, idTokenObj) {\n    this.logger.verbose(\"PopulateAuthority has been called\");\n    var authorityKey = AuthCache.generateAuthorityKey(state);\n    var cachedAuthority = cacheStorage.getItem(authorityKey, inCookie);\n    // retrieve the authority from cache and replace with tenantID\n    return StringUtils.isEmpty(cachedAuthority) ? cachedAuthority : UrlUtils.replaceTenantPath(cachedAuthority, idTokenObj.tenantId);\n  };\n  /* tslint:enable:no-string-literal */\n  // #endregion\n  // #region Account\n  /**\n   * Returns the signed in account\n   * (the account object is created at the time of successful login)\n   * or null when no state is found\n   * @returns {@link Account} - the account object stored in MSAL\n   */\n  UserAgentApplication.prototype.getAccount = function () {\n    // if a session already exists, get the account from the session\n    if (this.account) {\n      return this.account;\n    }\n    // frame is used to get idToken and populate the account for the given session\n    var rawIdToken = this.cacheStorage.getItem(PersistentCacheKeys.IDTOKEN, this.inCookie);\n    var rawClientInfo = this.cacheStorage.getItem(PersistentCacheKeys.CLIENT_INFO, this.inCookie);\n    if (!StringUtils.isEmpty(rawIdToken) && !StringUtils.isEmpty(rawClientInfo)) {\n      var idToken = new IdToken(rawIdToken);\n      var clientInfo = new ClientInfo(rawClientInfo, \"\");\n      this.account = Account.createAccount(idToken, clientInfo);\n      return this.account;\n    }\n    // if login not yet done, return null\n    return null;\n  };\n  /**\n   * @hidden\n   *\n   * Extracts state value from the accountState sent with the authentication request.\n   * @returns {string} scope.\n   * @ignore\n   */\n  UserAgentApplication.prototype.getAccountState = function (state) {\n    if (state) {\n      var splitIndex = state.indexOf(Constants.resourceDelimiter);\n      if (splitIndex > -1 && splitIndex + 1 < state.length) {\n        return state.substring(splitIndex + 1);\n      }\n    }\n    return state;\n  };\n  /**\n   * Use to get a list of unique accounts in MSAL cache based on homeAccountIdentifier.\n   *\n   * @param {@link Array<Account>} Account - all unique accounts in MSAL cache.\n   */\n  UserAgentApplication.prototype.getAllAccounts = function () {\n    var accounts = [];\n    var accessTokenCacheItems = this.cacheStorage.getAllAccessTokens(Constants.clientId, Constants.homeAccountIdentifier);\n    for (var i = 0; i < accessTokenCacheItems.length; i++) {\n      var idToken = new IdToken(accessTokenCacheItems[i].value.idToken);\n      var clientInfo = new ClientInfo(accessTokenCacheItems[i].value.homeAccountIdentifier, \"\");\n      var account = Account.createAccount(idToken, clientInfo);\n      accounts.push(account);\n    }\n    return this.getUniqueAccounts(accounts);\n  };\n  /**\n   * @hidden\n   *\n   * Used to filter accounts based on homeAccountIdentifier\n   * @param {Array<Account>}  Accounts - accounts saved in the cache\n   * @ignore\n   */\n  UserAgentApplication.prototype.getUniqueAccounts = function (accounts) {\n    if (!accounts || accounts.length <= 1) {\n      return accounts;\n    }\n    var flags = [];\n    var uniqueAccounts = [];\n    for (var index = 0; index < accounts.length; ++index) {\n      if (accounts[index].homeAccountIdentifier && flags.indexOf(accounts[index].homeAccountIdentifier) === -1) {\n        flags.push(accounts[index].homeAccountIdentifier);\n        uniqueAccounts.push(accounts[index]);\n      }\n    }\n    return uniqueAccounts;\n  };\n  // #endregion\n  // #region Angular\n  /**\n   * @hidden\n   *\n   * Broadcast messages - Used only for Angular?  *\n   * @param eventName\n   * @param data\n   */\n  UserAgentApplication.prototype.broadcast = function (eventName, data) {\n    var evt = new CustomEvent(eventName, {\n      detail: data\n    });\n    window.dispatchEvent(evt);\n  };\n  /**\n   * @hidden\n   *\n   * Helper function to retrieve the cached token\n   *\n   * @param scopes\n   * @param {@link Account} account\n   * @param state\n   * @return {@link AuthResponse} AuthResponse\n   */\n  UserAgentApplication.prototype.getCachedTokenInternal = function (scopes, account, state, correlationId) {\n    // Get the current session's account object\n    var accountObject = account || this.getAccount();\n    if (!accountObject) {\n      return null;\n    }\n    // Construct AuthenticationRequest based on response type; set \"redirectUri\" from the \"request\" which makes this call from Angular - for this.getRedirectUri()\n    var newAuthority = this.authorityInstance ? this.authorityInstance : AuthorityFactory.CreateInstance(this.authority, this.config.auth.validateAuthority);\n    var responseType = this.getTokenType(accountObject, scopes);\n    var serverAuthenticationRequest = new ServerRequestParameters(newAuthority, this.clientId, responseType, this.getRedirectUri(), scopes, state, correlationId);\n    // get cached token\n    return this.getCachedToken(serverAuthenticationRequest, account);\n  };\n  /**\n   * @hidden\n   *\n   * Get scopes for the Endpoint - Used in Angular to track protected and unprotected resources without interaction from the developer app\n   * Note: Please check if we need to set the \"redirectUri\" from the \"request\" which makes this call from Angular - for this.getRedirectUri()\n   *\n   * @param endpoint\n   */\n  UserAgentApplication.prototype.getScopesForEndpoint = function (endpoint) {\n    // if user specified list of unprotectedResources, no need to send token to these endpoints, return null.\n    if (this.config.framework.unprotectedResources.length > 0) {\n      for (var i = 0; i < this.config.framework.unprotectedResources.length; i++) {\n        if (endpoint.indexOf(this.config.framework.unprotectedResources[i]) > -1) {\n          return null;\n        }\n      }\n    }\n    // process all protected resources and send the matched one\n    if (this.config.framework.protectedResourceMap.size > 0) {\n      for (var _i = 0, _a = Array.from(this.config.framework.protectedResourceMap.keys()); _i < _a.length; _i++) {\n        var key = _a[_i];\n        // configEndpoint is like /api/Todo requested endpoint can be /api/Todo/1\n        if (endpoint.indexOf(key) > -1) {\n          return this.config.framework.protectedResourceMap.get(key);\n        }\n      }\n    }\n    /*\n     * default resource will be clientid if nothing specified\n     * App will use idtoken for calls to itself\n     * check if it's staring from http or https, needs to match with app host\n     */\n    if (endpoint.indexOf(\"http://\") > -1 || endpoint.indexOf(\"https://\") > -1) {\n      if (UrlUtils.getHostFromUri(endpoint) === UrlUtils.getHostFromUri(this.getRedirectUri())) {\n        return new Array(this.clientId);\n      }\n    } else {\n      /*\n       * in angular level, the url for $http interceptor call could be relative url,\n       * if it's relative call, we'll treat it as app backend call.\n       */\n      return new Array(this.clientId);\n    }\n    // if not the app's own backend or not a domain listed in the endpoints structure\n    return null;\n  };\n  /**\n   * Return boolean flag to developer to help inform if login is in progress\n   * @returns {boolean} true/false\n   */\n  UserAgentApplication.prototype.getLoginInProgress = function () {\n    return this.cacheStorage.isInteractionInProgress(true);\n  };\n  /**\n   * @hidden\n   * @ignore\n   *\n   * @param loginInProgress\n   */\n  UserAgentApplication.prototype.setInteractionInProgress = function (inProgress) {\n    this.cacheStorage.setInteractionInProgress(inProgress);\n  };\n  /**\n   * @hidden\n   * @ignore\n   *\n   * @param loginInProgress\n   */\n  UserAgentApplication.prototype.setloginInProgress = function (loginInProgress) {\n    this.setInteractionInProgress(loginInProgress);\n  };\n  /**\n   * @hidden\n   * @ignore\n   *\n   * returns the status of acquireTokenInProgress\n   */\n  UserAgentApplication.prototype.getAcquireTokenInProgress = function () {\n    return this.cacheStorage.isInteractionInProgress(true);\n  };\n  /**\n   * @hidden\n   * @ignore\n   *\n   * @param acquireTokenInProgress\n   */\n  UserAgentApplication.prototype.setAcquireTokenInProgress = function (acquireTokenInProgress) {\n    this.setInteractionInProgress(acquireTokenInProgress);\n  };\n  /**\n   * @hidden\n   * @ignore\n   *\n   * returns the logger handle\n   */\n  UserAgentApplication.prototype.getLogger = function () {\n    return this.logger;\n  };\n  /**\n   * Sets the logger callback.\n   * @param logger Logger callback\n   */\n  UserAgentApplication.prototype.setLogger = function (logger) {\n    this.logger = logger;\n  };\n  // #endregion\n  // #region Getters and Setters\n  /**\n   * Use to get the redirect uri configured in MSAL or null.\n   * Evaluates redirectUri if its a function, otherwise simply returns its value.\n   *\n   * @returns {string} redirect URL\n   */\n  UserAgentApplication.prototype.getRedirectUri = function (reqRedirectUri) {\n    if (reqRedirectUri) {\n      return reqRedirectUri;\n    } else if (typeof this.config.auth.redirectUri === \"function\") {\n      return this.config.auth.redirectUri();\n    }\n    return this.config.auth.redirectUri;\n  };\n  /**\n   * Use to get the post logout redirect uri configured in MSAL or null.\n   * Evaluates postLogoutredirectUri if its a function, otherwise simply returns its value.\n   *\n   * @returns {string} post logout redirect URL\n   */\n  UserAgentApplication.prototype.getPostLogoutRedirectUri = function () {\n    if (typeof this.config.auth.postLogoutRedirectUri === \"function\") {\n      return this.config.auth.postLogoutRedirectUri();\n    }\n    return this.config.auth.postLogoutRedirectUri;\n  };\n  /**\n   * Use to get the current {@link Configuration} object in MSAL\n   *\n   * @returns {@link Configuration}\n   */\n  UserAgentApplication.prototype.getCurrentConfiguration = function () {\n    if (!this.config) {\n      throw ClientConfigurationError.createNoSetConfigurationError();\n    }\n    return this.config;\n  };\n  /**\n   * @ignore\n   *\n   * Utils function to create the Authentication\n   * @param {@link account} account object\n   * @param scopes\n   *\n   * @returns {string} token type: token, id_token or id_token token\n   *\n   */\n  UserAgentApplication.prototype.getTokenType = function (accountObject, scopes) {\n    var accountsMatch = Account.compareAccounts(accountObject, this.getAccount());\n    return ServerRequestParameters.determineResponseType(accountsMatch, scopes);\n  };\n  /**\n   * @hidden\n   * @ignore\n   *\n   * Sets the cachekeys for and stores the account information in cache\n   * @param account\n   * @param state\n   * @hidden\n   */\n  UserAgentApplication.prototype.setAccountCache = function (account, state) {\n    // Cache acquireTokenAccountKey\n    var accountId = account ? this.getAccountId(account) : Constants.no_account;\n    var acquireTokenAccountKey = AuthCache.generateAcquireTokenAccountKey(accountId, state);\n    this.cacheStorage.setItem(acquireTokenAccountKey, JSON.stringify(account));\n  };\n  /**\n   * @hidden\n   * @ignore\n   *\n   * Sets the cacheKey for and stores the authority information in cache\n   * @param state\n   * @param authority\n   * @hidden\n   */\n  UserAgentApplication.prototype.setAuthorityCache = function (state, authority) {\n    // Cache authorityKey\n    var authorityKey = AuthCache.generateAuthorityKey(state);\n    this.cacheStorage.setItem(authorityKey, UrlUtils.CanonicalizeUri(authority), this.inCookie);\n  };\n  /**\n   * Updates account, authority, and nonce in cache\n   * @param serverAuthenticationRequest\n   * @param account\n   * @hidden\n   * @ignore\n   */\n  UserAgentApplication.prototype.updateCacheEntries = function (serverAuthenticationRequest, account, isLoginCall, loginStartPage) {\n    // Cache Request Originator Page\n    if (loginStartPage) {\n      this.cacheStorage.setItem(AuthCache.generateTemporaryCacheKey(TemporaryCacheKeys.LOGIN_REQUEST, serverAuthenticationRequest.state), loginStartPage, this.inCookie);\n    }\n    // Cache account and authority\n    if (isLoginCall) {\n      // Cache the state\n      this.cacheStorage.setItem(AuthCache.generateTemporaryCacheKey(TemporaryCacheKeys.STATE_LOGIN, serverAuthenticationRequest.state), serverAuthenticationRequest.state, this.inCookie);\n    } else {\n      this.setAccountCache(account, serverAuthenticationRequest.state);\n    }\n    // Cache authorityKey\n    this.setAuthorityCache(serverAuthenticationRequest.state, serverAuthenticationRequest.authority);\n    // Cache nonce\n    this.cacheStorage.setItem(AuthCache.generateTemporaryCacheKey(TemporaryCacheKeys.NONCE_IDTOKEN, serverAuthenticationRequest.state), serverAuthenticationRequest.nonce, this.inCookie);\n  };\n  /**\n   * Returns the unique identifier for the logged in account\n   * @param account\n   * @hidden\n   * @ignore\n   */\n  UserAgentApplication.prototype.getAccountId = function (account) {\n    // return `${account.accountIdentifier}` + Constants.resourceDelimiter + `${account.homeAccountIdentifier}`;\n    var accountId;\n    if (!StringUtils.isEmpty(account.homeAccountIdentifier)) {\n      accountId = account.homeAccountIdentifier;\n    } else {\n      accountId = Constants.no_account;\n    }\n    return accountId;\n  };\n  /**\n   * @ignore\n   * @param extraQueryParameters\n   *\n   * Construct 'tokenRequest' from the available data in adalIdToken\n   */\n  UserAgentApplication.prototype.buildIDTokenRequest = function (request) {\n    var tokenRequest = {\n      scopes: Constants.oidcScopes,\n      authority: this.authority,\n      account: this.getAccount(),\n      extraQueryParameters: request.extraQueryParameters,\n      correlationId: request.correlationId\n    };\n    return tokenRequest;\n  };\n  /**\n   * @ignore\n   * @param config\n   * @param clientId\n   *\n   * Construct TelemetryManager from Configuration\n   */\n  UserAgentApplication.prototype.getTelemetryManagerFromConfig = function (config, clientId) {\n    if (!config) {\n      // if unset\n      return TelemetryManager.getTelemetrymanagerStub(clientId, this.logger);\n    }\n    // if set then validate\n    var applicationName = config.applicationName,\n      applicationVersion = config.applicationVersion,\n      telemetryEmitter = config.telemetryEmitter;\n    if (!applicationName || !applicationVersion || !telemetryEmitter) {\n      throw ClientConfigurationError.createTelemetryConfigError(config);\n    }\n    // if valid then construct\n    var telemetryPlatform = {\n      applicationName: applicationName,\n      applicationVersion: applicationVersion\n    };\n    var telemetryManagerConfig = {\n      platform: telemetryPlatform,\n      clientId: clientId\n    };\n    return new TelemetryManager(telemetryManagerConfig, telemetryEmitter, this.logger);\n  };\n  return UserAgentApplication;\n}();\nexport { UserAgentApplication };","map":{"version":3,"mappings":"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","names":["AccessTokenKey","AccessTokenValue","ServerRequestParameters","AuthorityType","ClientInfo","IdToken","AuthCache","Account","ScopeSet","StringUtils","WindowUtils","TokenUtils","TimeUtils","UrlUtils","RequestUtils","ResponseUtils","AuthorityFactory","buildConfiguration","ClientConfigurationError","AuthError","ClientAuthError","ClientAuthErrorMessage","ServerError","InteractionRequiredAuthError","buildResponseStateOnly","TelemetryManager","API_EVENT_IDENTIFIER","Constants","ServerHashParamKeys","ResponseTypes","TemporaryCacheKeys","PersistentCacheKeys","ErrorCacheKeys","FramePrefix","CryptoUtils","TrustedAuthority","AuthCacheUtils","DEFAULT_AUTHORITY","configuration","config","logger","system","clientId","auth","inCookie","cache","storeAuthStateInCookie","telemetryManager","getTelemetryManagerFromConfig","telemetry","setTrustedAuthoritiesFromConfig","validateAuthority","knownAuthorities","saveMetadataFromConfig","authority","authorityMetadata","cacheStorage","cacheLocation","window","activeRenewals","renewStates","callbackMappedToRenewStates","promiseMappedToRenewStates","msal","urlHash","location","hash","urlContainsHash","checkIfBackButtonIsPressed","isInteractionInProgress","stateInfo","getResponseState","method","interactionTypeRedirect","handleRedirectAuthenticationResponse","Object","UserAgentApplication","authorityInstance","CanonicalAuthority","val","CreateInstance","authOrTokenCallback","errorReceivedCallback","createInvalidCallbackObjectError","tokenReceivedCallback","warning","authResponseCallback","redirectError","authErrorHandler","redirectResponse","authResponseHandler","verbose","interactionType","response","resolve","setInteractionInProgress","interactionTypePopup","createInvalidInteractionTypeError","authErr","reject","accountState","userRequest","request","validateRequest","acquireTokenInteractive","apiEvent","createAndStartApiEvent","correlationId","LoginPopup","Promise","_this","then","resp","stopAndFlushApiEvent","catch","error","resetTempCacheItems","state","errorCode","AcquireTokenPopup","isLoginCall","blockReloadInHiddenIframes","e","thrownError","createLoginInProgressError","createAcquireTokenInProgressError","stateOnlyResponse","getAccountState","setItem","REDIRECT_REQUEST","inProgress","resourceDelimiter","account","getAccount","isSSOParam","adalIdToken","extractADALIdToken","scopes","info","tokenRequest","buildIDTokenRequest","silentLogin","acquireTokenSilent","acquireTokenHelper","createUserLoginRequiredError","requestSignature","join","toLowerCase","oidcScopes","verbosePii","acquireTokenAuthority","hasCachedMetadata","saveMetadataFromNetwork","_a","responseType","id_token","getTokenType","loginStartPage","redirectStartPage","href","serverAuthenticationRequest","getRedirectUri","redirectUri","updateCacheEntries","populateQueryParams","urlNavigate","createNavigateUrl","response_mode_fragment","generateTemporaryCacheKey","STATE_ACQ_TOKEN","push","requestType","login","renewToken","registerCallback","popUpWindow","openPopup","popUpWidth","popUpHeight","trackPopup","popUpWindowError","code","desc","ERROR","ERROR_DESC","createPopupWindowError","monitorPopupForHash","loadFrameTimeout","handleAuthenticationResponse","framework","isAngular","broadcast","closePopups","error_1","errorMessage","close","onRedirectNavigate","navigate","navigateWindow","err_1","createEndpointResolutionError","toString","createEmptyRequestError","sid","loginHint","createSsoSilentError","interactionTypeSilent","AcquireTokenSilent","createRequestSignature","scope","getItem","isEmpty","adalIdTokenObject","extractIdToken","userContainedClaims","claimsRequest","claimsValue","forceRefresh","cacheResultResponse","getCachedToken","JSON","stringify","infoPii","logMessage","onlyContainsOidcScopes","renewIdToken","err_2","res","title","winLeft","screenLeft","screenX","winTop","screenTop","screenY","width","innerWidth","document","documentElement","clientWidth","body","height","innerHeight","clientHeight","left","top_1","popupWindow","open","focus","frameName","expectedState","RENEW_STATUS","navigateFrameWait","loadFrame","loadFrameSync","iframe","monitorIframeForHash","contentWindow","_b","error_2","removeItem","removeHiddenIframe","assign","createUnexpectedError","i","length","logoutAsync","requestCorrelationId","createNewGuid","Logout","clearCache","correlationIdParam","postLogoutQueryParam","getPostLogoutRedirectUri","encodeURIComponent","EndSessionEndpoint","error_3","tokenCacheItems","getAllTokens","homeAccountIdentifier","key","resetCacheItems","clearMsalCookie","accessToken","accessTokenItems","getAllAccessTokens","token","value","respStateInfo","parentCallback","saveTokenFromHash","err","parent","ACCESS_TOKEN","tokenType","ID_TOKEN","createErrorInCallbackFunction","locationHash","tokenResponseCallback","processCallBack","clearUrlFragment","navigateToLoginRequestUrl","loginRequestUrl","LOGIN_REQUEST","currentUrl","removeHashFromUrl","finalRedirectUrl","loginRequestUrlComponents","GetUrlComponents","Hash","parameters","deserializeHash","stateResponse","hasOwnProperty","STATE","parsedState","parseLibraryState","unknown","timestamp","ts","stateMatch","STATE_LOGIN","silentAuthenticationState","statesInParentContext","idToken","getCachedIdToken","authResponse","getCachedAccessToken","buildAuthResponse","requestScopes","filteredAuthorityItems","isCommonAuthority","isOrganizationsAuthority","isConsumersAuthority","filterTokenCacheItemsByDomain","HostNameAndPort","filterTokenCacheItemsByAuthority","forEach","accessTokenCacheItem","idTokenCacheItems","getAllIdTokens","matchAuthority","idTokenCacheItem","getTokenCacheItemByAuthority","idTokenIsStillValid","evaluateTokenExpiration","idTokenValue","scopeFilteredTokenCacheItems","filterTokenCacheItemsByScope","tokenIsStillValid","responseAccount","aState","uniqueId","tenantId","idTokenClaims","split","expiresOn","Date","Number","expiresIn","fromCache","tokenCacheItem","expiration","validateExpirationIsWithinOffset","tokenRenewalOffsetSeconds","generateFrameName","TOKEN_FRAME","addHiddenIFrame","urlRemoveQueryStringParameter","prompt","prompt_none","loadIframeTimeout","ID_TOKEN_FRAME","clientInfo","accessTokenKey","uid","utid","accessTokenValue","rawIdToken","encodeClientInfo","idTokenObj","idTokenResponse","saveToken","accessTokenResponse","SCOPE","consentedScopes","accessTokenCacheItems","cachedScopes","isIntersectingScopes","parseExpiresIn","EXPIRES_IN","hashParams","authorityKey","acquireTokenAccountKey","ERROR_DESCRIPTION","LOGIN_ERROR","generateAuthorityKey","accountId","no_account","generateAcquireTokenAccountKey","hashErr","hashErrDesc","isInteractionRequiredError","SESSION_STATE","IDTOKEN","setResponseIdToken","populateAuthority","CLIENT_INFO","Adfs","createClientInfoFromIdToken","createAccount","accountKey","acquireTokenAccountKey_noaccount","cachedAccount","acquireTokenAccount","parse","compareAccounts","saveAccessToken","nonce","cachedNonce","NONCE_IDTOKEN","createNonceMismatchError","saveIdToken","createInvalidIdTokenError","createInvalidStateError","setItemCookie","cachedAuthority","replaceTenantPath","rawClientInfo","splitIndex","indexOf","substring","accounts","getUniqueAccounts","flags","uniqueAccounts","index","eventName","data","evt","CustomEvent","detail","dispatchEvent","accountObject","newAuthority","endpoint","unprotectedResources","protectedResourceMap","size","from","keys","_i","get","getHostFromUri","Array","loginInProgress","acquireTokenInProgress","reqRedirectUri","postLogoutRedirectUri","createNoSetConfigurationError","accountsMatch","determineResponseType","getAccountId","CanonicalizeUri","setAccountCache","setAuthorityCache","extraQueryParameters","getTelemetrymanagerStub","applicationVersion","telemetryEmitter","applicationName","createTelemetryConfigError","telemetryPlatform","telemetryManagerConfig","platform"],"sourceRoot":"","sources":["../src/UserAgentApplication.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}