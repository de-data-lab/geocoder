{"ast":null,"code":"/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\nimport { __extends } from \"tslib\";\nimport { ClientAuthError } from \"./ClientAuthError\";\nexport var ClientConfigurationErrorMessage = {\n  configurationNotSet: {\n    code: \"no_config_set\",\n    desc: \"Configuration has not been set. Please call the UserAgentApplication constructor with a valid Configuration object.\"\n  },\n  storageNotSupported: {\n    code: \"storage_not_supported\",\n    desc: \"The value for the cacheLocation is not supported.\"\n  },\n  noRedirectCallbacksSet: {\n    code: \"no_redirect_callbacks\",\n    desc: \"No redirect callbacks have been set. Please call handleRedirectCallback() with the appropriate function arguments before continuing. \" + \"More information is available here: https://github.com/AzureAD/microsoft-authentication-library-for-js/wiki/MSAL-basics.\"\n  },\n  invalidCallbackObject: {\n    code: \"invalid_callback_object\",\n    desc: \"The object passed for the callback was invalid. \" + \"More information is available here: https://github.com/AzureAD/microsoft-authentication-library-for-js/wiki/MSAL-basics.\"\n  },\n  scopesRequired: {\n    code: \"scopes_required\",\n    desc: \"Scopes are required to obtain an access token.\"\n  },\n  emptyScopes: {\n    code: \"empty_input_scopes_error\",\n    desc: \"Scopes cannot be passed as empty array.\"\n  },\n  nonArrayScopes: {\n    code: \"nonarray_input_scopes_error\",\n    desc: \"Scopes cannot be passed as non-array.\"\n  },\n  invalidPrompt: {\n    code: \"invalid_prompt_value\",\n    desc: \"Supported prompt values are 'login', 'select_account', 'consent' and 'none'\"\n  },\n  invalidAuthorityType: {\n    code: \"invalid_authority_type\",\n    desc: \"The given authority is not a valid type of authority supported by MSAL. Please see here for valid authorities: <insert URL here>.\"\n  },\n  authorityUriInsecure: {\n    code: \"authority_uri_insecure\",\n    desc: \"Authority URIs must use https.\"\n  },\n  authorityUriInvalidPath: {\n    code: \"authority_uri_invalid_path\",\n    desc: \"Given authority URI is invalid.\"\n  },\n  unsupportedAuthorityValidation: {\n    code: \"unsupported_authority_validation\",\n    desc: \"The authority validation is not supported for this authority type.\"\n  },\n  untrustedAuthority: {\n    code: \"untrusted_authority\",\n    desc: \"The provided authority is not a trusted authority. Please include this authority in the knownAuthorities config parameter or set validateAuthority=false.\"\n  },\n  b2cAuthorityUriInvalidPath: {\n    code: \"b2c_authority_uri_invalid_path\",\n    desc: \"The given URI for the B2C authority is invalid.\"\n  },\n  b2cKnownAuthoritiesNotSet: {\n    code: \"b2c_known_authorities_not_set\",\n    desc: \"Must set known authorities when validateAuthority is set to True and using B2C\"\n  },\n  claimsRequestParsingError: {\n    code: \"claims_request_parsing_error\",\n    desc: \"Could not parse the given claims request object.\"\n  },\n  emptyRequestError: {\n    code: \"empty_request_error\",\n    desc: \"Request object is required.\"\n  },\n  invalidCorrelationIdError: {\n    code: \"invalid_guid_sent_as_correlationId\",\n    desc: \"Please set the correlationId as a valid guid\"\n  },\n  telemetryConfigError: {\n    code: \"telemetry_config_error\",\n    desc: \"Telemetry config is not configured with required values\"\n  },\n  ssoSilentError: {\n    code: \"sso_silent_error\",\n    desc: \"request must contain either sid or login_hint\"\n  },\n  invalidAuthorityMetadataError: {\n    code: \"authority_metadata_error\",\n    desc: \"Invalid authorityMetadata. Must be a JSON object containing authorization_endpoint, end_session_endpoint, and issuer fields.\"\n  }\n};\n/**\n * Error thrown when there is an error in configuration of the .js library.\n */\nvar ClientConfigurationError = /** @class */function (_super) {\n  __extends(ClientConfigurationError, _super);\n  function ClientConfigurationError(errorCode, errorMessage) {\n    var _this = _super.call(this, errorCode, errorMessage) || this;\n    _this.name = \"ClientConfigurationError\";\n    Object.setPrototypeOf(_this, ClientConfigurationError.prototype);\n    return _this;\n  }\n  ClientConfigurationError.createNoSetConfigurationError = function () {\n    return new ClientConfigurationError(ClientConfigurationErrorMessage.configurationNotSet.code, \"\" + ClientConfigurationErrorMessage.configurationNotSet.desc);\n  };\n  ClientConfigurationError.createStorageNotSupportedError = function (givenCacheLocation) {\n    return new ClientConfigurationError(ClientConfigurationErrorMessage.storageNotSupported.code, ClientConfigurationErrorMessage.storageNotSupported.desc + \" Given location: \" + givenCacheLocation);\n  };\n  ClientConfigurationError.createRedirectCallbacksNotSetError = function () {\n    return new ClientConfigurationError(ClientConfigurationErrorMessage.noRedirectCallbacksSet.code, ClientConfigurationErrorMessage.noRedirectCallbacksSet.desc);\n  };\n  ClientConfigurationError.createInvalidCallbackObjectError = function (callbackObject) {\n    return new ClientConfigurationError(ClientConfigurationErrorMessage.invalidCallbackObject.code, ClientConfigurationErrorMessage.invalidCallbackObject.desc + \" Given value for callback function: \" + callbackObject);\n  };\n  ClientConfigurationError.createEmptyScopesArrayError = function (scopesValue) {\n    return new ClientConfigurationError(ClientConfigurationErrorMessage.emptyScopes.code, ClientConfigurationErrorMessage.emptyScopes.desc + \" Given value: \" + scopesValue + \".\");\n  };\n  ClientConfigurationError.createScopesNonArrayError = function (scopesValue) {\n    return new ClientConfigurationError(ClientConfigurationErrorMessage.nonArrayScopes.code, ClientConfigurationErrorMessage.nonArrayScopes.desc + \" Given value: \" + scopesValue + \".\");\n  };\n  ClientConfigurationError.createScopesRequiredError = function (scopesValue) {\n    return new ClientConfigurationError(ClientConfigurationErrorMessage.scopesRequired.code, ClientConfigurationErrorMessage.scopesRequired.desc + \" Given value: \" + scopesValue);\n  };\n  ClientConfigurationError.createInvalidPromptError = function (promptValue) {\n    return new ClientConfigurationError(ClientConfigurationErrorMessage.invalidPrompt.code, ClientConfigurationErrorMessage.invalidPrompt.desc + \" Given value: \" + promptValue);\n  };\n  ClientConfigurationError.createClaimsRequestParsingError = function (claimsRequestParseError) {\n    return new ClientConfigurationError(ClientConfigurationErrorMessage.claimsRequestParsingError.code, ClientConfigurationErrorMessage.claimsRequestParsingError.desc + \" Given value: \" + claimsRequestParseError);\n  };\n  ClientConfigurationError.createEmptyRequestError = function () {\n    var _a = ClientConfigurationErrorMessage.emptyRequestError,\n      code = _a.code,\n      desc = _a.desc;\n    return new ClientConfigurationError(code, desc);\n  };\n  ClientConfigurationError.createInvalidCorrelationIdError = function () {\n    return new ClientConfigurationError(ClientConfigurationErrorMessage.invalidCorrelationIdError.code, ClientConfigurationErrorMessage.invalidCorrelationIdError.desc);\n  };\n  ClientConfigurationError.createKnownAuthoritiesNotSetError = function () {\n    return new ClientConfigurationError(ClientConfigurationErrorMessage.b2cKnownAuthoritiesNotSet.code, ClientConfigurationErrorMessage.b2cKnownAuthoritiesNotSet.desc);\n  };\n  ClientConfigurationError.createInvalidAuthorityTypeError = function () {\n    return new ClientConfigurationError(ClientConfigurationErrorMessage.invalidAuthorityType.code, ClientConfigurationErrorMessage.invalidAuthorityType.desc);\n  };\n  ClientConfigurationError.createUntrustedAuthorityError = function (host) {\n    return new ClientConfigurationError(ClientConfigurationErrorMessage.untrustedAuthority.code, ClientConfigurationErrorMessage.untrustedAuthority.desc + \" Provided Authority: \" + host);\n  };\n  ClientConfigurationError.createTelemetryConfigError = function (config) {\n    var _a = ClientConfigurationErrorMessage.telemetryConfigError,\n      code = _a.code,\n      desc = _a.desc;\n    var requiredKeys = {\n      applicationName: \"string\",\n      applicationVersion: \"string\",\n      telemetryEmitter: \"function\"\n    };\n    var missingKeys = Object.keys(requiredKeys).reduce(function (keys, key) {\n      return config[key] ? keys : keys.concat([key + \" (\" + requiredKeys[key] + \")\"]);\n    }, []);\n    return new ClientConfigurationError(code, desc + \" mising values: \" + missingKeys.join(\",\"));\n  };\n  ClientConfigurationError.createSsoSilentError = function () {\n    return new ClientConfigurationError(ClientConfigurationErrorMessage.ssoSilentError.code, ClientConfigurationErrorMessage.ssoSilentError.desc);\n  };\n  ClientConfigurationError.createInvalidAuthorityMetadataError = function () {\n    return new ClientConfigurationError(ClientConfigurationErrorMessage.invalidAuthorityMetadataError.code, ClientConfigurationErrorMessage.invalidAuthorityMetadataError.desc);\n  };\n  return ClientConfigurationError;\n}(ClientAuthError);\nexport { ClientConfigurationError };","map":{"version":3,"mappings":"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","names":["ClientAuthError","ClientConfigurationErrorMessage","configurationNotSet","code","desc","storageNotSupported","noRedirectCallbacksSet","invalidCallbackObject","scopesRequired","emptyScopes","nonArrayScopes","invalidPrompt","invalidAuthorityType","authorityUriInsecure","authorityUriInvalidPath","unsupportedAuthorityValidation","untrustedAuthority","b2cAuthorityUriInvalidPath","b2cKnownAuthoritiesNotSet","claimsRequestParsingError","emptyRequestError","invalidCorrelationIdError","telemetryConfigError","ssoSilentError","invalidAuthorityMetadataError","__extends","errorCode","errorMessage","_super","_this","name","Object","setPrototypeOf","ClientConfigurationError","prototype","givenCacheLocation","callbackObject","scopesValue","promptValue","claimsRequestParseError","host","config","requiredKeys","applicationName","applicationVersion","telemetryEmitter","missingKeys","keys","reduce","key","concat","join"],"sourceRoot":"","sources":["../../src/error/ClientConfigurationError.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}