{"ast":null,"code":"/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\nimport { __assign } from \"tslib\";\nimport { TELEMETRY_BLOB_EVENT_NAMES, EVENT_NAME_KEY, START_TIME_KEY, ELAPSED_TIME_KEY } from \"./TelemetryConstants\";\nimport { prependEventNamePrefix, startBrowserPerformanceMeasurement, endBrowserPerformanceMeasurement } from \"./TelemetryUtils\";\nimport { CryptoUtils } from \"../utils/CryptoUtils\";\nvar TelemetryEvent = /** @class */function () {\n  function TelemetryEvent(eventName, correlationId, eventLabel) {\n    var _a;\n    this.eventId = CryptoUtils.createNewGuid();\n    this.label = eventLabel;\n    this.event = (_a = {}, _a[prependEventNamePrefix(EVENT_NAME_KEY)] = eventName, _a[prependEventNamePrefix(ELAPSED_TIME_KEY)] = -1, _a[\"\" + TELEMETRY_BLOB_EVENT_NAMES.MsalCorrelationIdConstStrKey] = correlationId, _a);\n  }\n  TelemetryEvent.prototype.setElapsedTime = function (time) {\n    this.event[prependEventNamePrefix(ELAPSED_TIME_KEY)] = time;\n  };\n  TelemetryEvent.prototype.stop = function () {\n    // Set duration of event\n    this.setElapsedTime(+Date.now() - +this.startTimestamp);\n    endBrowserPerformanceMeasurement(this.displayName, this.perfStartMark, this.perfEndMark);\n  };\n  TelemetryEvent.prototype.start = function () {\n    this.startTimestamp = Date.now();\n    this.event[prependEventNamePrefix(START_TIME_KEY)] = this.startTimestamp;\n    startBrowserPerformanceMeasurement(this.perfStartMark);\n  };\n  Object.defineProperty(TelemetryEvent.prototype, \"telemetryCorrelationId\", {\n    get: function () {\n      return this.event[\"\" + TELEMETRY_BLOB_EVENT_NAMES.MsalCorrelationIdConstStrKey];\n    },\n    set: function (value) {\n      this.event[\"\" + TELEMETRY_BLOB_EVENT_NAMES.MsalCorrelationIdConstStrKey] = value;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(TelemetryEvent.prototype, \"eventName\", {\n    get: function () {\n      return this.event[prependEventNamePrefix(EVENT_NAME_KEY)];\n    },\n    enumerable: false,\n    configurable: true\n  });\n  TelemetryEvent.prototype.get = function () {\n    return __assign(__assign({}, this.event), {\n      eventId: this.eventId\n    });\n  };\n  Object.defineProperty(TelemetryEvent.prototype, \"key\", {\n    get: function () {\n      return this.telemetryCorrelationId + \"_\" + this.eventId + \"-\" + this.eventName;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(TelemetryEvent.prototype, \"displayName\", {\n    get: function () {\n      return \"Msal-\" + this.label + \"-\" + this.telemetryCorrelationId;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(TelemetryEvent.prototype, \"perfStartMark\", {\n    get: function () {\n      return \"start-\" + this.key;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(TelemetryEvent.prototype, \"perfEndMark\", {\n    get: function () {\n      return \"end-\" + this.key;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  return TelemetryEvent;\n}();\nexport default TelemetryEvent;","map":{"version":3,"mappings":"AAAA;;;;;AAKA,SACIA,0BAA0B,EAC1BC,cAAc,EACdC,cAAc,EACdC,gBAAgB,QACb,sBAAsB;AAC7B,SAASC,sBAAsB,EAAEC,kCAAkC,EAAEC,gCAAgC,QAAQ,kBAAkB;AAC/H,SAASC,WAAW,QAAQ,sBAAsB;AAElD;EAQI,wBAAYC,SAAiB,EAAEC,aAAqB,EAAEC,UAAkB;;IACpE,IAAI,CAACC,OAAO,GAAGJ,WAAW,CAACK,aAAa,EAAE;IAC1C,IAAI,CAACC,KAAK,GAAGH,UAAU;IACvB,IAAI,CAACI,KAAK,aACNC,GAACX,sBAAsB,CAACH,cAAc,CAAC,IAAGO,SAAS,EACnDO,GAACX,sBAAsB,CAACD,gBAAgB,CAAC,IAAG,CAAC,CAAC,EAC9CY,GAAC,KAAGf,0BAA0B,CAACgB,4BAA8B,IAAGP,aAAa,KAChF;EACL;EAEQQ,uCAAc,GAAtB,UAAuBC,IAAY;IAC/B,IAAI,CAACJ,KAAK,CAACV,sBAAsB,CAACD,gBAAgB,CAAC,CAAC,GAAGe,IAAI;EAC/D,CAAC;EAEMD,6BAAI,GAAX;IACI;IACA,IAAI,CAACE,cAAc,CAAC,CAACC,IAAI,CAACC,GAAG,EAAE,GAAG,CAAC,IAAI,CAACC,cAAc,CAAC;IAEvDhB,gCAAgC,CAAC,IAAI,CAACiB,WAAW,EAAE,IAAI,CAACC,aAAa,EAAE,IAAI,CAACC,WAAW,CAAC;EAC5F,CAAC;EAEMR,8BAAK,GAAZ;IACI,IAAI,CAACK,cAAc,GAAGF,IAAI,CAACC,GAAG,EAAE;IAChC,IAAI,CAACP,KAAK,CAACV,sBAAsB,CAACF,cAAc,CAAC,CAAC,GAAG,IAAI,CAACoB,cAAc;IAExEjB,kCAAkC,CAAC,IAAI,CAACmB,aAAa,CAAC;EAC1D,CAAC;EAEDE,sBAAWT,kDAAsB;SAAjC;MACI,OAAO,IAAI,CAACH,KAAK,CAAC,KAAGd,0BAA0B,CAACgB,4BAA8B,CAAC;IACnF,CAAC;SAED,UAAkCW,KAAa;MAC3C,IAAI,CAACb,KAAK,CAAC,KAAGd,0BAA0B,CAACgB,4BAA8B,CAAC,GAAGW,KAAK;IACpF,CAAC;;;;EAEDD,sBAAWT,qCAAS;SAApB;MACI,OAAO,IAAI,CAACH,KAAK,CAACV,sBAAsB,CAACH,cAAc,CAAC,CAAC;IAC7D,CAAC;;;;EAEMgB,4BAAG,GAAV;IACI,6BACO,IAAI,CAACH,KAAK;MACbH,OAAO,EAAE,IAAI,CAACA;IAAO;EAE7B,CAAC;EAEDe,sBAAWT,+BAAG;SAAd;MACI,OAAU,IAAI,CAACW,sBAAsB,SAAI,IAAI,CAACjB,OAAO,SAAI,IAAI,CAACH,SAAW;IAC7E,CAAC;;;;EAEDkB,sBAAWT,uCAAW;SAAtB;MACI,OAAO,UAAQ,IAAI,CAACJ,KAAK,SAAI,IAAI,CAACe,sBAAwB;IAC9D,CAAC;;;;EAEDF,sBAAYT,yCAAa;SAAzB;MACI,OAAO,WAAS,IAAI,CAACY,GAAK;IAC9B,CAAC;;;;EAEDH,sBAAYT,uCAAW;SAAvB;MACI,OAAO,SAAO,IAAI,CAACY,GAAK;IAC5B,CAAC;;;;EACL,qBAAC;AAAD,CAAC,EAtED","names":["TELEMETRY_BLOB_EVENT_NAMES","EVENT_NAME_KEY","START_TIME_KEY","ELAPSED_TIME_KEY","prependEventNamePrefix","startBrowserPerformanceMeasurement","endBrowserPerformanceMeasurement","CryptoUtils","eventName","correlationId","eventLabel","eventId","createNewGuid","label","event","_a","MsalCorrelationIdConstStrKey","TelemetryEvent","time","setElapsedTime","Date","now","startTimestamp","displayName","perfStartMark","perfEndMark","Object","value","telemetryCorrelationId","key"],"sourceRoot":"","sources":["../../src/telemetry/TelemetryEvent.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}