{"ast":null,"code":"var _jsxFileName = \"/Users/tbeckett/Documents/TI - Project Info/JavaScript_end_to_end_client_file_upload_to_Azure_Storage_Blobs/src/App.tsx\";\n// ./src/App.tsx\n\n// import React, { useState } from 'react';\n\nimport React from \"react\";\nimport { PageLayout } from \"./components/PageLayout\";\n// Addition\nimport 'bootstrap/dist/css/bootstrap.css';\n// End addition\n\nfunction App() {\n  return /*#__PURE__*/React.createElement(PageLayout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 11\n    }\n  }, \"Main Content Area - Please sign in above to continue\"));\n}\nexport default App;\n\n// const storageConfigured = isStorageConfigured();\n\n// const App = (): JSX.Element => {\n//   // all blobs in container\n//   const [blobList, setBlobList] = useState<string[]>([]);\n\n//   // current file to upload into container\n//   const [fileSelected, setFileSelected] = useState(null);\n\n//   // UI/form management\n//   const [uploading, setUploading] = useState(false);\n//   const [inputKey, setInputKey] = useState(Math.random().toString(36));\n\n//   const onFileChange = (event: any) => {\n//     // capture file into state\n//     setFileSelected(event.target.files[0]);\n//   };\n\n//   const onFileUpload = async () => {\n//     // prepare UI\n//     setUploading(true);\n\n//     // *** UPLOAD TO AZURE STORAGE ***\n//     const blobsInContainer: string[] = await uploadFileToBlob(fileSelected);\n\n//     // prepare UI for results\n//     setBlobList(blobsInContainer);\n\n//     // reset state/form\n//     setFileSelected(null);\n//     setUploading(false);\n//     setInputKey(Math.random().toString(36));\n//   };\n\n//   // display form\n//   const DisplayForm = () => (\n//     <div>\n//       <input type=\"file\" onChange={onFileChange} key={inputKey || ''} />\n//       <button type=\"submit\" onClick={onFileUpload}>\n//         Upload!\n//           </button>\n//     </div>\n//   )\n\n//   // display file name and image\n//   const DisplayImagesFromContainer = () => (\n//     <div>\n//       <h2>Container items</h2>\n//       <ul>\n//         {blobList.map((item) => {\n//           return (\n//             <li key={item}>\n//               <div>\n//                 {Path.basename(item)}\n//                 <br />\n//                 <img src={item} alt={item} height=\"200\" />\n//               </div>\n//             </li>\n//           );\n//         })}\n//       </ul>\n//     </div>\n//   );\n\n//   return (\n//     <div>\n//       <h1>Upload file to Azure Blob Storage</h1>\n//       {storageConfigured && !uploading && DisplayForm()}\n//       {storageConfigured && uploading && <div>Uploading</div>}\n//       <hr />\n//       {storageConfigured && blobList.length > 0 && DisplayImagesFromContainer()}\n//       {!storageConfigured && <div>Storage is not configured.</div>}\n//     </div>\n//   );\n// };\n\n// export default App;","map":{"version":3,"names":["React","PageLayout","App"],"sources":["/Users/tbeckett/Documents/TI - Project Info/JavaScript_end_to_end_client_file_upload_to_Azure_Storage_Blobs/src/App.tsx"],"sourcesContent":["// ./src/App.tsx\r\n\r\n// import React, { useState } from 'react';\r\nimport Path from 'path';\r\nimport uploadFileToBlob, { isStorageConfigured } from './azure-storage-blob';\r\n\r\nimport React from \"react\";\r\nimport { PageLayout } from \"./components/PageLayout\";\r\n// Addition\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\n// End addition\r\n\r\nfunction App() {\r\n  return (\r\n      <PageLayout>\r\n          <p>Main Content Area - Please sign in above to continue</p>\r\n      </PageLayout>\r\n  );\r\n}\r\n\r\nexport default App;\r\n\r\n// const storageConfigured = isStorageConfigured();\r\n\r\n// const App = (): JSX.Element => {\r\n//   // all blobs in container\r\n//   const [blobList, setBlobList] = useState<string[]>([]);\r\n\r\n//   // current file to upload into container\r\n//   const [fileSelected, setFileSelected] = useState(null);\r\n\r\n//   // UI/form management\r\n//   const [uploading, setUploading] = useState(false);\r\n//   const [inputKey, setInputKey] = useState(Math.random().toString(36));\r\n\r\n//   const onFileChange = (event: any) => {\r\n//     // capture file into state\r\n//     setFileSelected(event.target.files[0]);\r\n//   };\r\n\r\n//   const onFileUpload = async () => {\r\n//     // prepare UI\r\n//     setUploading(true);\r\n\r\n//     // *** UPLOAD TO AZURE STORAGE ***\r\n//     const blobsInContainer: string[] = await uploadFileToBlob(fileSelected);\r\n\r\n//     // prepare UI for results\r\n//     setBlobList(blobsInContainer);\r\n\r\n//     // reset state/form\r\n//     setFileSelected(null);\r\n//     setUploading(false);\r\n//     setInputKey(Math.random().toString(36));\r\n//   };\r\n\r\n//   // display form\r\n//   const DisplayForm = () => (\r\n//     <div>\r\n//       <input type=\"file\" onChange={onFileChange} key={inputKey || ''} />\r\n//       <button type=\"submit\" onClick={onFileUpload}>\r\n//         Upload!\r\n//           </button>\r\n//     </div>\r\n//   )\r\n\r\n//   // display file name and image\r\n//   const DisplayImagesFromContainer = () => (\r\n//     <div>\r\n//       <h2>Container items</h2>\r\n//       <ul>\r\n//         {blobList.map((item) => {\r\n//           return (\r\n//             <li key={item}>\r\n//               <div>\r\n//                 {Path.basename(item)}\r\n//                 <br />\r\n//                 <img src={item} alt={item} height=\"200\" />\r\n//               </div>\r\n//             </li>\r\n//           );\r\n//         })}\r\n//       </ul>\r\n//     </div>\r\n//   );\r\n\r\n//   return (\r\n//     <div>\r\n//       <h1>Upload file to Azure Blob Storage</h1>\r\n//       {storageConfigured && !uploading && DisplayForm()}\r\n//       {storageConfigured && uploading && <div>Uploading</div>}\r\n//       <hr />\r\n//       {storageConfigured && blobList.length > 0 && DisplayImagesFromContainer()}\r\n//       {!storageConfigured && <div>Storage is not configured.</div>}\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default App;\r\n\r\n\r\n"],"mappings":";AAAA;;AAEA;;AAIA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,UAAU,QAAQ,yBAAyB;AACpD;AACA,OAAO,kCAAkC;AACzC;;AAEA,SAASC,GAAG,GAAG;EACb,oBACI,oBAAC,UAAU;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACP;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,0DAA2D,CAClD;AAEnB;AAEA,eAAeA,GAAG;;AAElB;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA"},"metadata":{},"sourceType":"module"}