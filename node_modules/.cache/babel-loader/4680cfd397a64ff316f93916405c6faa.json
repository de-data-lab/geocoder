{"ast":null,"code":"import { options as r } from \"preact\";\nexport { Fragment } from \"preact\";\nvar _ = 0;\nfunction o(o, e, n, t, f, l) {\n  var s,\n    u,\n    a = {};\n  for (u in e) \"ref\" == u ? s = e[u] : a[u] = e[u];\n  var i = {\n    type: o,\n    props: a,\n    key: n,\n    ref: s,\n    __k: null,\n    __: null,\n    __b: 0,\n    __e: null,\n    __d: void 0,\n    __c: null,\n    __h: null,\n    constructor: void 0,\n    __v: --_,\n    __source: f,\n    __self: l\n  };\n  if (\"function\" == typeof o && (s = o.defaultProps)) for (u in s) void 0 === a[u] && (a[u] = s[u]);\n  return r.vnode && r.vnode(i), i;\n}\nexport { o as jsx, o as jsxDEV, o as jsxs };","map":{"version":3,"mappings":";;AAIA,IAAIA,IAAU;AAsBd,SAASC,EAAYC,GAAMC,GAAOC,GAAKC,GAAkBC,GAAUC;EAIlE,IACCC;IACAC;IAFGC,IAAkB;EAGtB,KAAKD,KAAKN,GACA,SAALM,IACHD,IAAML,EAAMM,KAEZC,EAAgBD,KAAKN,EAAMM;EAI7B,IAAME,IAAQ;IACbT;IACAC,OAAOO;IACPN;IACAI;IACAI,KAAW;IACXC,IAAS;IACTC,KAAQ;IACRC,KAAM;IACNC,UAAUC;IACVC,KAAY;IACZC,KAAY;IACZC,kBAAaH;IACbI,OAAarB;IACbM;IACAC;EAAAA;EAKD,IAAoB,qBAATL,MAAwBM,IAAMN,EAAKoB,eAC7C,KAAKb,KAAKD,QACyB,MAAvBE,EAAgBD,OAC1BC,EAAgBD,KAAKD,EAAIC;EAK5B,OADIc,EAAQZ,SAAOY,EAAQZ,MAAMA,IAC1BA,CACP;AAAA;AAAA","names":["vnodeId","createVNode","type","props","key","isStaticChildren","__source","__self","ref","i","normalizedProps","vnode","__k","__","__b","__e","__d","undefined","__c","__h","constructor","__v","defaultProps","options"],"sources":["../src/index.js"],"sourcesContent":["import { options, Fragment } from 'preact';\n\n/** @typedef {import('preact').VNode} VNode */\n\nlet vnodeId = 0;\n\n/**\n * @fileoverview\n * This file exports various methods that implement Babel's \"automatic\" JSX runtime API:\n * - jsx(type, props, key)\n * - jsxs(type, props, key)\n * - jsxDEV(type, props, key, __source, __self)\n *\n * The implementation of createVNode here is optimized for performance.\n * Benchmarks: https://esbench.com/bench/5f6b54a0b4632100a7dcd2b3\n */\n\n/**\n * JSX.Element factory used by Babel's {runtime:\"automatic\"} JSX transform\n * @param {VNode['type']} type\n * @param {VNode['props']} props\n * @param {VNode['key']} [key]\n * @param {unknown} [isStaticChildren]\n * @param {unknown} [__source]\n * @param {unknown} [__self]\n */\nfunction createVNode(type, props, key, isStaticChildren, __source, __self) {\n\t// We'll want to preserve `ref` in props to get rid of the need for\n\t// forwardRef components in the future, but that should happen via\n\t// a separate PR.\n\tlet normalizedProps = {},\n\t\tref,\n\t\ti;\n\tfor (i in props) {\n\t\tif (i == 'ref') {\n\t\t\tref = props[i];\n\t\t} else {\n\t\t\tnormalizedProps[i] = props[i];\n\t\t}\n\t}\n\n\tconst vnode = {\n\t\ttype,\n\t\tprops: normalizedProps,\n\t\tkey,\n\t\tref,\n\t\t_children: null,\n\t\t_parent: null,\n\t\t_depth: 0,\n\t\t_dom: null,\n\t\t_nextDom: undefined,\n\t\t_component: null,\n\t\t_hydrating: null,\n\t\tconstructor: undefined,\n\t\t_original: --vnodeId,\n\t\t__source,\n\t\t__self\n\t};\n\n\t// If a Component VNode, check for and apply defaultProps.\n\t// Note: `type` is often a String, and can be `undefined` in development.\n\tif (typeof type === 'function' && (ref = type.defaultProps)) {\n\t\tfor (i in ref)\n\t\t\tif (typeof normalizedProps[i] === 'undefined') {\n\t\t\t\tnormalizedProps[i] = ref[i];\n\t\t\t}\n\t}\n\n\tif (options.vnode) options.vnode(vnode);\n\treturn vnode;\n}\n\nexport {\n\tcreateVNode as jsx,\n\tcreateVNode as jsxs,\n\tcreateVNode as jsxDEV,\n\tFragment\n};\n"]},"metadata":{},"sourceType":"module"}