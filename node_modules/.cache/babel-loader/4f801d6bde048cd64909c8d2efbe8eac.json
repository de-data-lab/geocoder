{"ast":null,"code":"/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\nimport { __extends } from \"tslib\";\nimport TelemetryEvent from \"./TelemetryEvent\";\nimport { scrubTenantFromUri, prependEventNamePrefix } from \"./TelemetryUtils\";\nimport { ServerRequestParameters } from \"../ServerRequestParameters\";\nexport var EVENT_KEYS = {\n  HTTP_PATH: prependEventNamePrefix(\"http_path\"),\n  USER_AGENT: prependEventNamePrefix(\"user_agent\"),\n  QUERY_PARAMETERS: prependEventNamePrefix(\"query_parameters\"),\n  API_VERSION: prependEventNamePrefix(\"api_version\"),\n  RESPONSE_CODE: prependEventNamePrefix(\"response_code\"),\n  O_AUTH_ERROR_CODE: prependEventNamePrefix(\"oauth_error_code\"),\n  HTTP_METHOD: prependEventNamePrefix(\"http_method\"),\n  REQUEST_ID_HEADER: prependEventNamePrefix(\"request_id_header\"),\n  SPE_INFO: prependEventNamePrefix(\"spe_info\"),\n  SERVER_ERROR_CODE: prependEventNamePrefix(\"server_error_code\"),\n  SERVER_SUB_ERROR_CODE: prependEventNamePrefix(\"server_sub_error_code\"),\n  URL: prependEventNamePrefix(\"url\")\n};\nvar HttpEvent = /** @class */function (_super) {\n  __extends(HttpEvent, _super);\n  function HttpEvent(correlationId, eventLabel) {\n    return _super.call(this, prependEventNamePrefix(\"http_event\"), correlationId, eventLabel) || this;\n  }\n  Object.defineProperty(HttpEvent.prototype, \"url\", {\n    set: function (url) {\n      var scrubbedUri = scrubTenantFromUri(url);\n      this.event[EVENT_KEYS.URL] = scrubbedUri && scrubbedUri.toLowerCase();\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(HttpEvent.prototype, \"httpPath\", {\n    set: function (httpPath) {\n      this.event[EVENT_KEYS.HTTP_PATH] = scrubTenantFromUri(httpPath).toLowerCase();\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(HttpEvent.prototype, \"userAgent\", {\n    set: function (userAgent) {\n      this.event[EVENT_KEYS.USER_AGENT] = userAgent;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(HttpEvent.prototype, \"queryParams\", {\n    set: function (queryParams) {\n      this.event[EVENT_KEYS.QUERY_PARAMETERS] = ServerRequestParameters.generateQueryParametersString(queryParams);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(HttpEvent.prototype, \"apiVersion\", {\n    set: function (apiVersion) {\n      this.event[EVENT_KEYS.API_VERSION] = apiVersion.toLowerCase();\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(HttpEvent.prototype, \"httpResponseStatus\", {\n    set: function (statusCode) {\n      this.event[EVENT_KEYS.RESPONSE_CODE] = statusCode;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(HttpEvent.prototype, \"oAuthErrorCode\", {\n    set: function (errorCode) {\n      this.event[EVENT_KEYS.O_AUTH_ERROR_CODE] = errorCode;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(HttpEvent.prototype, \"httpMethod\", {\n    set: function (httpMethod) {\n      this.event[EVENT_KEYS.HTTP_METHOD] = httpMethod;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(HttpEvent.prototype, \"requestIdHeader\", {\n    set: function (requestIdHeader) {\n      this.event[EVENT_KEYS.REQUEST_ID_HEADER] = requestIdHeader;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(HttpEvent.prototype, \"speInfo\", {\n    /**\n     * Indicates whether the request was executed on a ring serving SPE traffic.\n     * An empty string indicates this occurred on an outer ring, and the string \"I\"\n     * indicates the request occurred on the inner ring\n     */\n    set: function (speInfo) {\n      this.event[EVENT_KEYS.SPE_INFO] = speInfo;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(HttpEvent.prototype, \"serverErrorCode\", {\n    set: function (errorCode) {\n      this.event[EVENT_KEYS.SERVER_ERROR_CODE] = errorCode;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(HttpEvent.prototype, \"serverSubErrorCode\", {\n    set: function (subErrorCode) {\n      this.event[EVENT_KEYS.SERVER_SUB_ERROR_CODE] = subErrorCode;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  return HttpEvent;\n}(TelemetryEvent);\nexport default HttpEvent;","map":{"version":3,"mappings":"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","names":["TelemetryEvent","scrubTenantFromUri","prependEventNamePrefix","ServerRequestParameters","EVENT_KEYS","HTTP_PATH","USER_AGENT","QUERY_PARAMETERS","API_VERSION","RESPONSE_CODE","O_AUTH_ERROR_CODE","HTTP_METHOD","REQUEST_ID_HEADER","SPE_INFO","SERVER_ERROR_CODE","SERVER_SUB_ERROR_CODE","URL","__extends","correlationId","eventLabel","_super","Object","HttpEvent","url","scrubbedUri","event","toLowerCase","httpPath","userAgent","queryParams","generateQueryParametersString","apiVersion","statusCode","errorCode","httpMethod","requestIdHeader","speInfo","subErrorCode"],"sourceRoot":"","sources":["../../src/telemetry/HttpEvent.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}