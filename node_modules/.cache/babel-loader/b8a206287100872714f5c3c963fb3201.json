{"ast":null,"code":"/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\nimport { ClientAuthError } from \"./error/ClientAuthError\";\nimport { TokenUtils } from \"./utils/TokenUtils\";\nimport { StringUtils } from \"./utils/StringUtils\";\n/**\n * @hidden\n */\nvar IdToken = /** @class */function () {\n  /* tslint:disable:no-string-literal */\n  function IdToken(rawIdToken) {\n    if (StringUtils.isEmpty(rawIdToken)) {\n      throw ClientAuthError.createIdTokenNullOrEmptyError(rawIdToken);\n    }\n    try {\n      this.rawIdToken = rawIdToken;\n      this.claims = TokenUtils.extractIdToken(rawIdToken);\n      if (this.claims) {\n        if (this.claims.hasOwnProperty(\"iss\")) {\n          this.issuer = this.claims[\"iss\"];\n        }\n        if (this.claims.hasOwnProperty(\"oid\")) {\n          this.objectId = this.claims[\"oid\"];\n        }\n        if (this.claims.hasOwnProperty(\"sub\")) {\n          this.subject = this.claims[\"sub\"];\n        }\n        if (this.claims.hasOwnProperty(\"tid\")) {\n          this.tenantId = this.claims[\"tid\"];\n        }\n        if (this.claims.hasOwnProperty(\"ver\")) {\n          this.version = this.claims[\"ver\"];\n        }\n        if (this.claims.hasOwnProperty(\"preferred_username\")) {\n          this.preferredName = this.claims[\"preferred_username\"];\n        } else if (this.claims.hasOwnProperty(\"upn\")) {\n          this.preferredName = this.claims[\"upn\"];\n        }\n        if (this.claims.hasOwnProperty(\"name\")) {\n          this.name = this.claims[\"name\"];\n        }\n        if (this.claims.hasOwnProperty(\"nonce\")) {\n          this.nonce = this.claims[\"nonce\"];\n        }\n        if (this.claims.hasOwnProperty(\"exp\")) {\n          this.expiration = this.claims[\"exp\"];\n        }\n        if (this.claims.hasOwnProperty(\"home_oid\")) {\n          this.homeObjectId = this.claims[\"home_oid\"];\n        }\n        if (this.claims.hasOwnProperty(\"sid\")) {\n          this.sid = this.claims[\"sid\"];\n        }\n        if (this.claims.hasOwnProperty(\"cloud_instance_host_name\")) {\n          this.cloudInstance = this.claims[\"cloud_instance_host_name\"];\n        }\n        /* tslint:enable:no-string-literal */\n      }\n    } catch (e) {\n      /*\n       * TODO: This error here won't really every be thrown, since extractIdToken() returns null if the decodeJwt() fails.\n       * Need to add better error handling here to account for being unable to decode jwts.\n       */\n      throw ClientAuthError.createIdTokenParsingError(e);\n    }\n  }\n  return IdToken;\n}();\nexport { IdToken };","map":{"version":3,"mappings":"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","names":["ClientAuthError","TokenUtils","StringUtils","rawIdToken","isEmpty","createIdTokenNullOrEmptyError","claims","extractIdToken","hasOwnProperty","issuer","objectId","subject","tenantId","version","preferredName","name","nonce","expiration","homeObjectId","sid","cloudInstance","e","createIdTokenParsingError"],"sourceRoot":"","sources":["../src/IdToken.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}