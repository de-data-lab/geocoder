{"ast":null,"code":"/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\nimport { __assign } from \"tslib\";\nimport { Logger } from \"./Logger\";\nimport { UrlUtils } from \"./utils/UrlUtils\";\n/**\n * Defaults for the Configuration Options\n */\nvar FRAME_TIMEOUT = 6000;\nvar OFFSET = 300;\nvar NAVIGATE_FRAME_WAIT = 500;\nvar DEFAULT_AUTH_OPTIONS = {\n  clientId: \"\",\n  authority: null,\n  validateAuthority: true,\n  authorityMetadata: \"\",\n  knownAuthorities: [],\n  redirectUri: function () {\n    return UrlUtils.getCurrentUrl();\n  },\n  postLogoutRedirectUri: function () {\n    return UrlUtils.getCurrentUrl();\n  },\n  navigateToLoginRequestUrl: true\n};\nvar DEFAULT_CACHE_OPTIONS = {\n  cacheLocation: \"sessionStorage\",\n  storeAuthStateInCookie: false\n};\nvar DEFAULT_SYSTEM_OPTIONS = {\n  logger: new Logger(null),\n  loadFrameTimeout: FRAME_TIMEOUT,\n  tokenRenewalOffsetSeconds: OFFSET,\n  navigateFrameWait: NAVIGATE_FRAME_WAIT\n};\nvar DEFAULT_FRAMEWORK_OPTIONS = {\n  isAngular: false,\n  unprotectedResources: new Array(),\n  protectedResourceMap: new Map()\n};\n/**\n * MSAL function that sets the default options when not explicitly configured from app developer\n *\n * @param TAuthOptions\n * @param TCacheOptions\n * @param TSystemOptions\n * @param TFrameworkOptions\n * @param TAuthorityDataOptions\n *\n * @returns TConfiguration object\n */\nexport function buildConfiguration(_a) {\n  var auth = _a.auth,\n    _b = _a.cache,\n    cache = _b === void 0 ? {} : _b,\n    _c = _a.system,\n    system = _c === void 0 ? {} : _c,\n    _d = _a.framework,\n    framework = _d === void 0 ? {} : _d;\n  var overlayedConfig = {\n    auth: __assign(__assign({}, DEFAULT_AUTH_OPTIONS), auth),\n    cache: __assign(__assign({}, DEFAULT_CACHE_OPTIONS), cache),\n    system: __assign(__assign({}, DEFAULT_SYSTEM_OPTIONS), system),\n    framework: __assign(__assign({}, DEFAULT_FRAMEWORK_OPTIONS), framework)\n  };\n  return overlayedConfig;\n}","map":{"version":3,"mappings":"AAAA;;;;;AAKA,SAASA,MAAM,QAAQ,UAAU;AACjC,SAASC,QAAQ,QAAQ,kBAAkB;AAU3C;;;AAGA,IAAMC,aAAa,GAAG,IAAI;AAC1B,IAAMC,MAAM,GAAG,GAAG;AAClB,IAAMC,mBAAmB,GAAG,GAAG;AAgG/B,IAAMC,oBAAoB,GAAgB;EACtCC,QAAQ,EAAE,EAAE;EACZC,SAAS,EAAE,IAAI;EACfC,iBAAiB,EAAE,IAAI;EACvBC,iBAAiB,EAAE,EAAE;EACrBC,gBAAgB,EAAE,EAAE;EACpBC,WAAW,EAAE;IAAM,eAAQ,CAACC,aAAa,EAAE;EAAxB,CAAwB;EAC3CC,qBAAqB,EAAE;IAAM,eAAQ,CAACD,aAAa,EAAE;EAAxB,CAAwB;EACrDE,yBAAyB,EAAE;CAC9B;AAED,IAAMC,qBAAqB,GAAiB;EACxCC,aAAa,EAAE,gBAAgB;EAC/BC,sBAAsB,EAAE;CAC3B;AAED,IAAMC,sBAAsB,GAAkB;EAC1CC,MAAM,EAAE,IAAInB,MAAM,CAAC,IAAI,CAAC;EACxBoB,gBAAgB,EAAElB,aAAa;EAC/BmB,yBAAyB,EAAElB,MAAM;EACjCmB,iBAAiB,EAAElB;CACtB;AAED,IAAMmB,yBAAyB,GAAqB;EAChDC,SAAS,EAAE,KAAK;EAChBC,oBAAoB,EAAE,IAAIC,KAAK,EAAU;EACzCC,oBAAoB,EAAE,IAAIC,GAAG;CAChC;AAED;;;;;;;;;;;AAYA,OAAM,SAAUC,kBAAkB,CAACC,EAA+D;MAA7DC,IAAI;IAAEC,aAAU;IAAVC,KAAK,mBAAG,EAAE;IAAEC,cAAW;IAAXC,MAAM,mBAAG,EAAE;IAAEC,iBAAc;IAAdC,SAAS,mBAAG,EAAE;EAC9E,IAAMC,eAAe,GAAkB;IACnCP,IAAI,wBAAO1B,oBAAoB,GAAK0B,IAAI,CAAE;IAC1CE,KAAK,wBAAOlB,qBAAqB,GAAKkB,KAAK,CAAE;IAC7CE,MAAM,wBAAOjB,sBAAsB,GAAKiB,MAAM,CAAE;IAChDE,SAAS,wBAAOd,yBAAyB,GAAKc,SAAS;GAC1D;EACD,OAAOC,eAAe;AAC1B","names":["Logger","UrlUtils","FRAME_TIMEOUT","OFFSET","NAVIGATE_FRAME_WAIT","DEFAULT_AUTH_OPTIONS","clientId","authority","validateAuthority","authorityMetadata","knownAuthorities","redirectUri","getCurrentUrl","postLogoutRedirectUri","navigateToLoginRequestUrl","DEFAULT_CACHE_OPTIONS","cacheLocation","storeAuthStateInCookie","DEFAULT_SYSTEM_OPTIONS","logger","loadFrameTimeout","tokenRenewalOffsetSeconds","navigateFrameWait","DEFAULT_FRAMEWORK_OPTIONS","isAngular","unprotectedResources","Array","protectedResourceMap","Map","buildConfiguration","_a","auth","_b","cache","_c","system","_d","framework","overlayedConfig"],"sourceRoot":"","sources":["../src/Configuration.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}